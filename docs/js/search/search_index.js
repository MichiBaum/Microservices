var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interceptors/AddLanguageHeaderInterceptor.html",[0,3.045,1,2.79]],["body/interceptors/AddLanguageHeaderInterceptor.html",[1,4.303,2,3.637,3,0.135,4,0.154,5,0.135,6,4.043,7,0.412,8,1.038,9,5.781,10,0.771,11,3.637,12,3.03,13,0.915,14,4.661,15,0.908,16,0.015,17,0.592,18,0.511,19,0.838,20,2.098,21,1.561,22,1.336,23,4.661,24,0.417,25,4.043,26,5.22,27,5.22,28,5.22,29,2.099,30,0.66,31,0.342,32,1.389,33,1.389,34,2.478,35,1.839,36,2.099,37,2.006,38,0.154,39,0.365,40,1.286,41,2.006,42,4.043,43,4.695,44,1.938,45,6.663,46,4.661,47,4.661,48,6.663,49,4.661,50,2.565,51,1.919,52,4.661,53,4.661,54,4.661,55,3.333,56,4.661,57,4.043,58,4.661,59,4.661,60,2.309,61,1.66,62,4.661,63,4.043,64,0.009,65,0.011,66,0.009]],["title/injectables/ApiService.html",[30,0.428,67,2.274]],["body/injectables/ApiService.html",[3,0.095,4,0.109,5,0.095,7,0.29,8,0.817,10,0.784,12,2.617,13,0.924,15,0.64,16,0.015,17,0.417,18,0.52,19,0.591,20,1.146,21,1.861,22,1.593,24,0.434,29,1.48,30,0.52,31,0.241,34,2.288,35,1.297,36,1.48,37,1.414,38,0.109,39,0.257,43,3.697,44,1.526,50,3.058,61,1.677,64,0.006,65,0.009,66,0.006,67,2.761,68,0.979,69,2.565,70,2.229,71,5.556,72,4.82,73,5.556,74,3.287,75,5.276,76,4.29,77,3.117,78,3.287,79,2.622,80,3.287,81,3.287,82,3.287,83,3.287,84,5.556,85,1.655,86,1.018,87,3.287,88,4.111,89,3.287,90,1.629,91,1.809,92,1.629,93,1.48,94,1.714,95,2.65,96,2.351,97,2.351,98,2.622,99,2.565,100,1.714,101,2.565,102,3.287,103,2.851,104,2.565,105,2.565,106,2.851,107,2.851,108,6.446,109,5.556,110,5.556,111,5.556,112,4.111,113,1.587,114,5.556,115,1.297,116,4.336,117,3.697,118,4.738,119,3.287,120,3.287,121,3.287,122,3.287,123,3.287,124,4.738,125,4.738,126,3.287,127,3.287,128,3.287,129,4.738,130,4.738,131,3.287,132,3.287,133,1.915,134,2.565,135,3.287,136,4.738,137,4.738,138,4.738,139,4.738,140,4.738,141,2.565,142,3.287,143,3.287,144,2.565,145,3.287,146,3.287,147,2.565,148,2.851]],["title/components/AppComponent.html",[149,0.997,150,1.476]],["body/components/AppComponent.html",[3,0.121,4,0.138,5,0.121,10,0.69,13,0.634,15,0.812,16,0.015,17,0.856,18,0.458,19,0.75,24,0.374,31,0.306,37,2.407,38,0.138,39,0.326,41,1.795,51,1.718,64,0.008,65,0.01,66,0.008,85,1.243,149,1.612,150,2.551,151,2.407,152,1.878,153,1.878,154,1.878,155,1.878,156,3.619,157,1.718,158,3.416,159,3.401,160,2.519,161,6.31,162,2.519,163,5.593,164,4.171,165,7.238,166,4.171,167,3.255,168,3.255,169,4.171,170,3.619,171,3.619,172,4.171,173,4.171,174,4.171,175,2.983,176,4.171,177,4.171,178,4.171,179,4.171,180,1.878,181,1.066,182,2.519,183,2.519,184,1.578,185,3.036,186,1.878,187,1.878,188,1.578,189,1.878,190,1.578,191,1.878,192,1.578,193,1.795,194,1.878,195,1.514,196,1.878,197,1.514,198,1.878,199,1.514,200,1.878,201,1.514,202,1.878,203,1.578,204,1.878,205,1.514,206,1.718,207,1.878,208,1.578,209,1.878,210,1.514,211,1.795,212,1.795,213,1.514,214,1.795,215,1.878]],["title/modules/AppModule.html",[216,0.923,217,2.79]],["body/modules/AppModule.html",[2,2.411,3,0.089,4,0.102,5,0.089,16,0.015,24,0.467,29,2.04,31,0.227,32,1.35,33,0.92,38,0.15,39,0.242,50,1.7,61,0.852,64,0.006,65,0.008,66,0.006,75,4.653,86,0.957,90,1.531,91,1.7,97,3.24,117,3.535,150,2.803,159,1.33,167,2.411,168,2.411,175,2.21,181,0.789,216,0.731,217,5.764,218,1.645,219,1.169,220,2.209,221,2.209,222,2.209,223,1.219,224,2.68,225,2.68,226,2.68,227,2.68,228,2.68,229,4.359,230,3.661,231,3.661,232,3.661,233,3.661,234,3.661,235,3.661,236,3.442,237,3.442,238,3.661,239,3.661,240,3.661,241,3.427,242,1.866,243,1.272,244,1.272,245,2.411,246,1.949,247,4.53,248,3.09,249,1.272,250,4.53,251,3.09,252,3.09,253,3.09,254,3.09,255,1.866,256,4.53,257,3.93,258,4.53,259,3.09,260,3.09,261,4.653,262,4.53,263,1.611,264,3.09,265,2.68,266,3.93,267,3.93,268,3.09,269,3.09,270,2.493,271,2.049,272,3.535,273,3.09,274,2.21,275,3.09,276,3.24,277,4.53,278,2.411,279,3.24,280,2.411,281,2.21,282,3.535,283,3.09,284,2.049,285,3.93,286,2.68,287,2.68,288,3.535,289,2.68,290,2.68,291,3.09,292,3.09,293,3.09,294,3.09,295,3.09,296,3.09,297,3.09,298,2.21,299,3.09,300,3.09,301,3.09,302,3.09,303,5.124,304,2.68,305,2.411,306,3.93,307,3.93,308,3.09,309,3.09]],["title/modules/AppRoutingModule.html",[216,0.923,229,2.587]],["body/modules/AppRoutingModule.html",[3,0.136,4,0.155,5,0.136,16,0.015,24,0.461,31,0.344,38,0.155,39,0.367,44,1.508,64,0.009,65,0.011,66,0.009,112,6.597,149,1.943,195,2.425,197,2.191,199,2.191,201,2.191,205,2.191,206,2.486,210,2.191,211,2.016,218,1.7,223,1.848,229,4.003,246,2.016,255,2.486,284,3.106,285,6.334,286,4.063,287,4.063,310,4.683,311,4.683,312,6.036,313,4.776,314,3.35,315,4.683,316,4.683,317,4.683,318,4.683,319,3.35,320,4.063,321,4.683,322,3.655,323,3.655,324,6.12,325,4.683,326,4.063,327,3.35,328,4.683]],["title/injectables/AppService.html",[30,0.428,270,2.147]],["body/injectables/AppService.html",[3,0.147,4,0.168,5,0.147,7,0.449,8,1.097,10,0.841,13,0.967,15,0.99,16,0.015,17,0.646,18,0.558,19,0.913,21,1.703,22,1.457,24,0.411,30,0.698,31,0.373,36,2.289,37,2.188,38,0.168,39,0.398,41,2.188,64,0.009,65,0.012,66,0.009,67,4.449,68,1.514,270,3.499,329,4.41,330,3.488,331,3.635,332,5.083,333,5.083,334,3.315,335,3.966,336,3.966,337,4.41,338,5.083,339,6.358,340,6.358,341,4.41,342,3.966,343,5.083]],["title/injectables/AuthErrorResponseHandler.html",[30,0.428,344,2.418]],["body/injectables/AuthErrorResponseHandler.html",[3,0.108,4,0.123,5,0.108,7,0.329,8,0.893,10,0.857,12,2.56,13,1.027,15,1.252,16,0.015,17,0.858,18,0.741,19,1.155,20,2.074,24,0.44,29,1.677,30,0.568,31,0.273,32,1.109,33,1.109,34,2.45,35,1.469,38,0.123,39,0.291,40,1.027,44,1.199,60,2.565,61,1.774,64,0.007,65,0.009,66,0.007,68,1.109,70,2.356,77,3.15,79,1.757,85,2.084,86,1.153,90,1.845,91,2.049,92,1.845,93,1.677,94,1.941,95,2.999,98,2.442,100,1.941,115,1.469,133,2.17,330,1.677,344,3.208,345,3.15,346,5.458,347,2.905,348,1.374,349,3.208,350,2.848,351,2.17,352,3.386,353,5.176,354,3.208,355,4.14,356,3.723,357,1.463,358,2.848,359,3.723,360,2.848,361,3.723,362,1.667,363,2.049,364,2.049,365,2.469,366,3.723,367,3.208,368,1.941,369,2.308,370,2.308,371,2.308,372,2.308,373,2.308,374,3.723,375,3.723]],["title/guards/AuthGuardService.html",[284,2.587,376,3.045]],["body/guards/AuthGuardService.html",[3,0.149,4,0.17,5,0.149,7,0.454,8,0.886,10,0.85,13,0.781,15,1.001,16,0.015,17,0.653,18,0.564,19,0.923,24,0.432,30,0.702,31,0.377,38,0.17,39,0.402,40,1.417,61,1.766,64,0.009,65,0.012,66,0.009,115,2.027,284,4.245,314,3.675,324,6.331,362,1.655,377,5.138,378,5.553,379,4.457,380,4.321,381,6.048,382,4.573,383,5.138,384,3.616,385,5.138,386,5.138,387,4.457,388,4.457,389,5.138,390,4.457,391,2.679]],["title/interceptors/AuthInterceptor.html",[0,3.045,392,2.79]],["body/interceptors/AuthInterceptor.html",[2,3.709,3,0.138,4,0.157,5,0.138,7,0.42,9,5.287,10,0.787,13,0.926,15,1.187,16,0.015,17,0.774,18,0.669,19,1.095,22,1.928,24,0.42,25,4.124,26,6.154,27,5.287,28,6.154,29,2.141,30,0.669,31,0.349,34,2.77,35,1.875,38,0.157,39,0.372,40,1.311,41,2.046,42,4.124,43,5.248,44,2.166,57,4.124,61,1.681,63,4.124,64,0.009,65,0.011,66,0.009,105,3.709,348,1.618,357,1.169,384,3.718,392,4.358,393,4.124,394,4.124,395,4.754,396,6.094,397,4.754,398,4.124,399,5.287,400,4.754,401,4.754,402,4.754,403,4.754,404,4.754]],["title/injectables/AuthService.html",[30,0.428,384,1.933]],["body/injectables/AuthService.html",[3,0.089,4,0.102,5,0.089,7,0.272,8,0.779,10,0.747,13,1.097,15,0.599,16,0.015,17,0.391,18,0.495,19,0.553,21,2.33,22,1.994,24,0.412,30,0.495,31,0.226,34,1.859,35,1.213,36,1.385,37,1.323,38,0.102,39,0.241,44,1.454,61,2.062,64,0.006,65,0.008,66,0.006,67,3.824,68,0.916,70,2.113,88,2.667,113,1.974,115,1.781,322,4.173,331,2.199,362,1.454,368,2.789,380,4.673,382,3.952,384,2.237,387,2.667,390,2.667,391,2.789,405,2.667,406,5.348,407,4.514,408,5.348,409,5.348,410,5.348,411,5.348,412,5.348,413,5.348,414,4.497,415,4.514,416,4.215,417,3.075,418,3.075,419,3.075,420,3.075,421,3.075,422,3.075,423,3.075,424,3.075,425,3.075,426,2.798,427,2.667,428,3.075,429,3.075,430,3.075,431,2.399,432,6.956,433,3.075,434,3.522,435,2.993,436,3.075,437,4.514,438,1.708,439,3.075,440,3.075,441,3.075,442,3.075,443,2.399,444,3.075,445,3.075,446,4.514,447,3.075,448,1.792,449,4.514,450,4.514,451,4.514,452,3.075]],["title/modules/CoreModule.html",[216,0.923,230,2.418]],["body/modules/CoreModule.html",[3,0.119,4,0.136,5,0.119,16,0.015,24,0.454,31,0.301,38,0.136,39,0.321,64,0.008,65,0.01,66,0.008,76,4.464,95,2.953,96,2.932,97,5.15,100,2.138,181,1.047,213,2.829,216,0.97,218,1.488,219,1.551,220,2.576,221,1.688,222,2.576,223,2.468,230,5.005,242,2.277,243,1.688,244,1.688,246,1.764,249,1.688,255,2.277,344,4.464,346,3.199,453,3.556,454,3.556,455,3.556,456,3.556,457,4.464,458,4.464,459,4.464,460,4.464,461,4.464,462,4.099,463,2.609,464,3.199,465,2.932,466,3.199,467,2.932,468,3.199,469,2.932,470,3.199,471,2.932,472,3.199,473,4.099]],["title/pipes/CustomDatePipe.html",[474,2.79,475,2.587]],["body/pipes/CustomDatePipe.html",[3,0.15,4,0.171,5,0.15,13,0.787,15,1.009,16,0.015,17,0.889,18,0.568,19,0.931,22,1.485,24,0.433,31,0.38,38,0.171,39,0.405,40,1.429,41,2.229,61,1.429,64,0.009,65,0.012,66,0.009,70,1.668,157,2.133,241,3.649,249,2.133,348,1.375,357,1.274,391,2.701,474,4.601,475,4.266,476,5.18,477,4.494,478,5.02,479,5.18,480,6.433,481,6.997,482,5.18,483,6.433,484,6.433,485,4.494,486,4.64,487,5.18,488,5.18,489,5.18,490,5.18,491,5.18,492,4.494,493,4.494]],["title/injectables/DateService.html",[30,0.428,486,2.587]],["body/injectables/DateService.html",[3,0.134,4,0.153,5,0.134,7,0.408,8,1.031,10,0.764,13,1.066,15,0.899,16,0.015,17,0.586,18,0.656,19,0.829,21,2.222,22,1.901,24,0.393,30,0.656,31,0.339,36,2.078,37,1.986,38,0.153,39,0.361,41,1.986,44,1.486,61,1.649,64,0.008,65,0.011,66,0.008,68,1.375,113,2.003,368,2.407,431,3.602,486,3.965,494,4.004,495,6.632,496,4.743,497,6.632,498,4.615,499,4.937,500,5.979,501,4.615,502,5.81,503,4.615,504,4.615,505,4.004,506,4.615,507,4.615,508,4.276,509,7.015,510,4.615,511,4.615]],["title/injectables/DefaultErrorHandler.html",[30,0.428,76,2.418]],["body/injectables/DefaultErrorHandler.html",[3,0.111,4,0.127,5,0.111,7,0.34,8,0.914,10,0.877,13,0.992,15,1.179,16,0.015,17,0.769,18,0.716,19,1.088,24,0.449,29,1.734,30,0.581,31,0.283,34,2.494,35,1.519,38,0.127,39,0.301,40,1.062,44,1.24,60,2.625,61,1.461,64,0.007,65,0.01,66,0.007,68,1.147,70,2.276,76,3.284,79,1.817,95,2.574,96,4.891,97,4.891,98,3.078,100,2.763,115,1.519,344,4.043,345,3.08,348,1.406,350,2.915,355,3.985,357,1.303,358,2.915,360,2.915,362,1.706,381,3.341,457,4.572,458,4.572,459,4.572,460,4.572,461,4.488,465,2.754,467,2.754,469,2.754,471,2.754,512,2.008,513,6.056,514,3.851,515,6.523,516,5.298,517,3.851,518,3.851,519,3.005,520,3.851,521,3.851,522,5.298,523,3.851,524,3.851,525,3.851]],["title/injectables/GlobalErrorHandler.html",[30,0.428,276,2.79]],["body/injectables/GlobalErrorHandler.html",[3,0.147,4,0.168,5,0.147,7,0.449,10,0.841,13,0.967,15,1.238,16,0.015,17,0.808,18,0.558,19,1.143,24,0.411,30,0.698,31,0.373,38,0.168,39,0.398,40,1.402,41,2.188,44,2.048,64,0.009,65,0.012,66,0.009,68,1.514,95,2.005,117,4.961,270,3.499,271,3.371,276,4.547,278,5.414,330,2.863,345,3.124,348,1.688,352,3.603,357,1.25,363,2.797,364,2.797,438,1.923,512,2.651,526,6.358,527,3.966,528,5.083,529,6.358,530,5.083,531,3.966,532,5.083,533,3.966]],["title/components/HeaderComponent.html",[149,0.997,188,1.476]],["body/components/HeaderComponent.html",[3,0.082,4,0.094,5,0.082,7,0.251,8,0.733,10,0.469,13,1.056,15,0.552,16,0.015,17,0.72,18,0.666,19,0.51,20,1.975,21,1.709,22,1.624,24,0.377,31,0.208,38,0.094,39,0.222,40,1.173,51,2.624,61,1.173,64,0.005,65,0.008,66,0.005,70,1.643,85,0.845,149,1.303,150,1.073,151,1.83,152,1.277,153,1.277,154,1.277,155,1.277,157,1.168,158,3.224,159,3.197,160,1.915,162,1.915,180,1.277,181,0.725,182,1.915,183,1.915,184,1.073,185,2.551,186,1.277,187,1.277,188,2.143,189,1.277,190,1.073,191,1.277,192,1.073,193,1.221,194,1.277,195,1.03,196,1.277,197,1.03,198,1.277,199,1.03,200,1.277,201,1.03,202,1.277,203,1.073,204,1.277,205,1.03,206,1.168,207,1.277,208,1.073,209,1.277,210,1.03,211,1.221,212,1.221,213,1.03,214,1.221,215,1.277,241,3.623,281,2.029,348,1.129,357,0.698,380,3.762,384,3.507,388,2.461,438,1.609,448,3.537,493,2.461,534,2.461,535,2.407,536,5.1,537,4.252,538,5.1,539,5.1,540,3.648,541,5.1,542,5.1,543,2.674,544,2.837,545,4.252,546,2.837,547,4.252,548,2.837,549,2.837,550,4.212,551,2.837,552,2.837,553,2.461,554,3.689,555,2.461,556,2.461,557,2.461,558,2.214,559,2.214,560,2.214,561,2.029,562,2.837,563,2.837,564,2.837,565,2.461,566,2.837,567,2.82,568,2.837,569,3.041,570,5.1,571,2.214,572,2.837,573,2.837,574,2.461,575,2.837,576,4.421,577,4.915,578,4.736,579,3.689,580,3.689,581,4.252,582,2.029,583,2.029,584,2.029,585,3.382,586,5.1,587,2.837,588,2.837,589,2.837,590,2.837,591,2.837,592,2.214,593,2.837,594,2.837,595,2.837,596,2.837,597,3.689,598,2.461,599,2.837,600,2.837,601,2.837,602,2.837]],["title/modules/HeaderModule.html",[216,0.923,231,2.418]],["body/modules/HeaderModule.html",[3,0.132,4,0.15,5,0.132,16,0.015,24,0.454,31,0.334,32,1.355,33,1.355,38,0.15,39,0.356,51,1.874,64,0.008,65,0.011,66,0.008,86,1.409,181,1.162,188,2.995,190,2.929,216,1.077,218,1.652,219,1.721,220,2.712,221,1.874,222,1.874,223,2.599,231,4.932,237,4.322,242,2.439,243,1.874,244,1.874,246,2.549,249,1.874,255,2.439,263,3.089,463,2.795,603,3.947,604,3.947,605,4.549,606,3.947,607,4.549,608,4.622,609,2.82,610,3.671,611,5.139,612,5.139,613,4.549,614,3.55,615,4.549,616,4.549]],["title/components/HeaderTitleComponent.html",[149,0.997,190,1.476]],["body/components/HeaderTitleComponent.html",[3,0.097,4,0.111,5,0.097,7,0.297,8,0.832,10,0.932,13,0.935,16,0.015,17,0.715,18,0.37,20,1.681,21,1.128,22,0.965,24,0.334,31,0.247,38,0.111,39,0.264,40,1.33,51,3.034,64,0.006,65,0.009,66,0.006,85,1.003,113,1.128,149,1.439,150,1.274,151,2.075,152,1.517,153,1.517,154,1.517,155,1.517,157,1.387,158,3.316,159,3.294,160,2.171,162,2.171,180,1.517,181,0.861,182,2.171,183,2.171,184,1.274,185,2.769,186,1.517,187,1.517,188,1.274,189,1.517,190,2.327,191,1.517,192,1.274,193,1.449,194,1.517,195,1.223,196,1.517,197,1.223,198,1.517,199,1.223,200,1.517,201,1.223,202,1.517,203,1.274,204,1.517,205,1.223,206,1.387,207,1.517,208,1.274,209,1.517,210,1.223,211,1.449,212,1.449,213,1.223,214,1.449,215,1.517,348,1.28,357,1.186,438,2.131,535,2.658,543,2.902,553,2.922,554,2.922,555,2.922,556,2.922,557,2.922,558,2.628,578,4.395,614,5.078,617,5.646,618,2.922,619,4.799,620,5.633,621,4.822,622,5.633,623,6.15,624,4.822,625,3.368,626,3.368,627,6.508,628,2.922,629,3.368,630,3.368,631,5.633,632,3.368,633,3.368,634,3.368,635,3.368,636,3.368,637,3.368,638,3.368,639,3.368,640,3.368,641,3.368,642,3.368,643,5.633,644,5.633,645,3.368,646,4.887,647,3.368,648,4.887,649,6.771,650,4.822]],["title/components/HelpDialogComponent.html",[149,0.997,192,1.476]],["body/components/HelpDialogComponent.html",[3,0.113,4,0.129,5,0.113,7,0.346,8,0.924,10,1.011,13,0.929,16,0.015,17,0.776,18,0.429,20,1.868,24,0.317,31,0.287,38,0.129,39,0.306,40,1.478,51,1.612,64,0.007,65,0.01,66,0.007,85,1.166,149,1.561,150,1.481,151,2.306,152,1.763,153,1.763,154,1.763,155,1.763,157,1.612,158,3.388,159,3.371,160,2.412,162,2.412,180,1.763,181,1,182,2.412,183,2.412,184,1.481,185,2.958,186,1.763,187,1.763,188,1.481,189,1.763,190,1.481,191,1.763,192,2.485,193,3.187,194,1.763,195,1.421,196,1.763,197,1.421,198,1.763,199,1.421,200,1.763,201,1.421,202,1.763,203,1.481,204,1.763,205,1.421,206,1.612,207,1.763,208,1.481,209,1.763,210,1.421,211,1.685,212,1.685,213,1.421,214,1.685,215,1.763,348,1.422,357,0.963,362,1.725,438,2.027,535,2.883,543,3.1,646,4.648,651,5.125,652,5.125,653,3.396,654,5.357,655,6.108,656,5.357,657,6.108,658,5.357,659,3.914,660,5.357,661,5.357,662,4.181,663,3.914,664,5.357]],["title/modules/HelpDialogModule.html",[216,0.923,232,2.418]],["body/modules/HelpDialogModule.html",[3,0.144,4,0.165,5,0.144,16,0.015,24,0.441,31,0.366,32,1.487,33,1.487,38,0.165,39,0.391,64,0.009,65,0.012,66,0.009,86,1.545,181,1.275,192,3.033,193,2.147,216,1.181,218,1.812,219,1.888,220,2.833,221,2.055,222,2.055,223,2.714,232,4.781,242,2.588,243,2.055,244,2.055,246,2.147,249,2.055,255,2.588,263,3.277,463,2.966,610,3.895,651,3.894,652,3.894,665,4.329,666,4.329,667,4.329,668,4.99,669,4.904,670,4.99]],["title/components/HomeComponent.html",[149,0.997,195,1.417]],["body/components/HomeComponent.html",[3,0.124,4,0.142,5,0.124,7,0.379,10,1.059,13,0.867,16,0.015,17,0.813,24,0.338,31,0.315,38,0.142,39,0.336,40,1.573,51,1.768,64,0.008,65,0.01,66,0.008,85,1.279,149,1.636,150,1.624,151,2.454,152,1.933,153,1.933,154,1.933,155,1.933,157,1.768,158,3.429,159,3.414,160,2.568,162,2.568,180,1.933,181,1.097,182,2.568,183,2.568,184,1.624,185,3.071,186,1.933,187,1.933,188,1.624,189,1.933,190,1.624,191,1.933,192,1.624,193,1.848,194,1.933,195,2.476,196,1.933,197,1.559,198,1.933,199,1.559,200,1.933,201,1.559,202,1.933,203,1.624,204,1.933,205,1.559,206,1.768,207,1.933,208,1.624,209,1.933,210,1.559,211,1.848,212,1.848,213,1.559,214,1.848,215,1.933,323,4.449,348,1.514,357,1.056,438,2.157,535,3.021,543,3.219,671,3.725,672,6.402,673,5.702,674,4.293,675,4.293]],["title/modules/HomeModule.html",[216,0.923,233,2.418]],["body/modules/HomeModule.html",[3,0.155,4,0.177,5,0.155,16,0.015,24,0.42,31,0.392,38,0.177,39,0.418,64,0.01,65,0.012,66,0.01,181,1.364,195,2.805,216,1.264,218,1.939,219,2.02,220,2.921,221,2.199,222,2.199,223,2.107,233,4.79,242,2.699,243,2.199,244,2.199,246,2.298,249,2.199,255,2.699,463,3.093,676,4.632,677,4.632,678,5.339,679,5.339]],["title/interfaces/IExportLog.html",[334,2.035,680,1.208]],["body/interfaces/IExportLog.html",[3,0.111,4,0.127,5,0.111,7,0.339,8,0.913,16,0.015,18,0.862,19,1.404,38,0.175,64,0.007,65,0.01,66,0.007,113,2.773,334,2.759,362,2.099,680,1.639,681,1.814,682,2.999,683,5.333,684,5.333,685,5.333,686,5.333,687,4.532,688,4.532,689,4.532,690,4.532,691,4.236,692,4.532,693,3.761,694,4.236,695,4.532,696,4.532,697,5.333,698,4.057,699,2.382]],["title/interfaces/IExportUser.html",[680,1.208,700,2.418]],["body/interfaces/IExportUser.html",[3,0.14,4,0.16,5,0.14,7,0.426,8,1.061,16,0.015,17,0.936,18,0.84,24,0.286,38,0.203,64,0.009,65,0.011,66,0.009,113,2.66,298,5.27,362,2.297,435,4.73,680,1.906,681,2.277,693,4.055,698,4.369,700,3.814,701,3.766,702,5.75,703,5.75,704,4.567,705,3.585,706,4.187,707,2.991]],["title/interfaces/IHttpErrorResponseHandler.html",[98,1.841,680,1.208]],["body/interfaces/IHttpErrorResponseHandler.html",[3,0.15,4,0.171,5,0.15,7,0.458,13,0.978,15,1.253,16,0.014,17,0.817,18,0.706,19,1.156,24,0.381,29,2.333,34,2.882,35,2.044,38,0.171,60,3.188,64,0.009,65,0.012,66,0.009,79,3.302,95,2.969,98,3.036,99,5.46,345,3.151,347,4.042,348,1.708,350,3.54,355,4.28,357,1.582,358,3.54,360,3.54,362,2.072,680,1.604,681,2.444,708,5.18,709,5.18]],["title/interfaces/IJWT.html",[416,2.79,680,1.208]],["body/interfaces/IJWT.html",[3,0.153,4,0.175,5,0.153,7,0.468,8,1.125,16,0.015,18,0.831,24,0.314,38,0.175,64,0.01,65,0.012,66,0.01,113,2.665,399,6.398,416,4.664,426,4.571,434,5.755,680,1.64,681,2.499,698,3.889,704,4.571,710,4.594,711,7.375,712,7.375,713,5.295]],["title/interfaces/ILanguage.html",[680,1.208,714,2.587]],["body/interfaces/ILanguage.html",[3,0.167,4,0.191,5,0.167,7,0.51,8,1.186,16,0.014,17,0.965,18,0.754,38,0.191,64,0.011,65,0.013,66,0.011,113,2.637,680,1.789,681,2.726,714,4.558,715,5.011,716,5.927]],["title/interfaces/ILog.html",[680,1.208,699,2.418]],["body/interfaces/ILog.html",[3,0.114,4,0.131,5,0.114,7,0.349,8,0.931,16,0.015,18,0.865,38,0.178,64,0.007,65,0.01,66,0.007,113,2.777,334,2.062,362,2.124,680,1.671,681,1.866,682,3.086,683,5.387,684,5.387,685,5.387,686,5.387,687,4.578,688,4.578,689,4.578,690,4.578,691,4.279,692,4.578,693,3.799,694,4.279,695,4.578,696,4.578,697,5.387,698,4.085,699,3.344]],["title/interfaces/ILogFilter.html",[680,1.208,717,2.587]],["body/interfaces/ILogFilter.html",[3,0.167,4,0.19,5,0.167,7,0.509,8,1.184,16,0.014,18,0.753,38,0.19,64,0.011,65,0.013,66,0.011,113,2.455,362,2.36,680,1.784,681,2.718,694,4.703,696,5.032,717,4.55,718,4.996,719,4.996]],["title/interfaces/IPermission.html",[680,1.208,705,2.274]],["body/interfaces/IPermission.html",[3,0.167,4,0.191,5,0.167,7,0.51,8,1.186,16,0.014,17,0.965,18,0.754,38,0.191,64,0.011,65,0.013,66,0.011,113,2.459,680,1.789,681,2.726,693,4.18,698,4.038,705,4.006,720,5.011]],["title/interfaces/IPrimeNgBase.html",[550,2.418,680,1.208]],["body/interfaces/IPrimeNgBase.html",[3,0.163,4,0.186,5,0.163,7,0.497,8,1.167,16,0.014,18,0.796,19,1.215,22,2.158,38,0.186,64,0.01,65,0.012,66,0.01,113,2.621,550,4.193,567,4.992,569,5.384,680,1.741,681,2.654,721,4.878,722,4.878]],["title/interfaces/IUser.html",[680,1.208,707,2.418]],["body/interfaces/IUser.html",[3,0.142,4,0.162,5,0.142,7,0.434,8,1.073,16,0.015,17,0.941,18,0.83,24,0.291,38,0.206,64,0.009,65,0.011,66,0.009,113,2.63,298,5.298,362,2.312,435,3.258,680,1.927,681,2.318,693,4.077,698,4.321,700,3.045,701,3.834,702,5.781,703,5.781,704,4.592,705,4.184,706,4.262,707,3.857]],["title/components/ImprintComponent.html",[149,0.997,197,1.417]],["body/components/ImprintComponent.html",[3,0.091,4,0.103,5,0.091,7,0.276,10,0.894,13,0.695,16,0.015,17,0.686,20,2.825,24,0.271,31,0.23,38,0.103,39,0.245,40,1.262,51,1.289,64,0.006,65,0.008,66,0.006,85,0.933,149,1.381,150,1.184,151,1.968,152,1.41,153,1.41,154,1.41,155,1.41,157,1.289,158,3.278,159,3.254,160,2.059,162,2.059,180,1.41,181,0.8,182,2.059,183,2.059,184,1.184,185,2.676,186,1.41,187,1.41,188,1.184,189,1.41,190,1.184,191,1.41,192,1.184,193,1.347,194,1.41,195,1.137,196,1.41,197,2.158,198,1.41,199,1.137,200,1.41,201,1.137,202,1.41,203,1.184,204,1.41,205,1.137,206,1.289,207,1.41,208,1.184,209,1.41,210,1.137,211,1.347,212,1.347,213,1.137,214,1.347,215,1.41,326,3.968,348,1.214,357,0.77,438,1.73,535,2.55,543,2.805,582,2.239,583,2.239,584,2.239,585,2.076,619,5.901,662,2.443,723,2.716,724,5.404,725,4.573,726,3.13,727,3.13,728,4.573,729,4.573,730,3.968,731,4.573,732,3.968,733,4.573,734,4.573,735,3.968,736,7.427,737,7.427,738,3.033,739,3.968,740,3.968,741,5.944,742,5.944,743,5.944,744,5.156,745,3.968,746,2.716,747,2.716,748,2.716]],["title/modules/ImprintModule.html",[216,0.923,234,2.418]],["body/modules/ImprintModule.html",[3,0.146,4,0.166,5,0.146,16,0.015,24,0.442,31,0.369,32,1.498,33,1.498,38,0.166,39,0.394,64,0.009,65,0.012,66,0.009,86,1.558,181,1.285,197,2.914,216,1.19,218,1.826,219,1.903,220,2.843,221,2.071,222,2.071,223,2.724,234,4.79,242,2.601,243,2.071,244,2.071,246,2.164,249,2.071,255,2.601,263,3.293,463,2.981,749,4.363,750,4.363,751,4.363,752,5.029,753,5.479,754,5.029]],["title/injectables/LanguageConfig.html",[30,0.428,241,2.035]],["body/injectables/LanguageConfig.html",[3,0.094,4,0.108,5,0.094,7,0.288,8,0.812,10,0.779,11,2.543,12,2.765,13,1.126,15,0.635,16,0.015,17,0.769,18,0.735,19,0.586,20,2.112,21,2.243,22,1.919,24,0.327,30,0.517,31,0.239,32,0.971,33,0.971,38,0.183,39,0.255,44,1.951,50,1.793,55,5.055,61,1.772,64,0.006,65,0.009,66,0.006,68,0.971,70,2.411,113,1.578,241,2.456,380,3.427,438,1.233,496,3.954,540,4.595,565,2.827,714,5.115,716,5.013,755,2.543,756,5.529,757,4.595,758,5.529,759,5.529,760,5.529,761,5.529,762,5.529,763,3.259,764,3.259,765,3.259,766,3.259,767,3.259,768,3.259,769,3.259,770,4.709,771,3.259,772,3.259,773,3.259,774,3.259,775,4.315,776,3.675,777,3.259,778,4.085,779,4.085,780,2.827,781,2.827,782,3.259,783,3.259,784,3.259,785,3.259,786,3.259,787,3.259,788,3.259,789,3.259,790,3.259,791,3.259,792,4.709,793,3.259,794,3.259,795,3.259,796,3.259,797,3.259,798,3.259,799,3.259,800,3.259,801,3.259]],["title/injectables/LocalStorageService.html",[30,0.428,499,2.587]],["body/injectables/LocalStorageService.html",[3,0.112,4,0.128,5,0.112,7,0.341,8,0.915,10,0.639,13,1.04,15,0.751,16,0.015,17,0.49,18,0.423,19,0.693,21,2.187,22,2.027,24,0.387,30,0.582,31,0.283,36,1.738,37,1.661,38,0.128,39,0.302,41,1.661,44,1.709,61,1.463,64,0.007,65,0.01,66,0.007,68,1.15,70,1.953,113,2.369,270,2.919,271,2.559,330,1.738,334,2.766,342,4.731,352,3.338,443,3.011,448,2.249,496,2.76,499,4.33,508,3.794,519,4.14,527,3.011,531,3.011,533,3.011,687,2.559,688,2.559,689,2.559,690,2.559,691,2.392,692,2.559,694,2.392,695,2.559,802,6.136,803,3.011,804,5.664,805,5.26,806,5.664,807,5.664,808,3.348,809,3.859,810,3.859,811,3.859,812,3.859,813,3.011,814,3.348,815,3.011,816,4.603,817,5.26,818,3.859,819,5.26,820,5.26,821,3.859,822,3.859,823,3.348,824,3.348,825,4.603,826,3.348,827,3.348]],["title/components/LoggingComponent.html",[149,0.997,199,1.417]],["body/components/LoggingComponent.html",[3,0.047,4,0.054,5,0.047,7,0.313,8,0.473,10,0.454,12,1.784,13,1.127,15,0.318,16,0.015,17,0.526,18,0.69,19,0.294,20,2.238,21,2.37,22,2.043,24,0.364,31,0.12,32,0.487,33,0.487,38,0.054,39,0.128,40,0.756,44,1.609,51,0.673,61,1.464,64,0.003,65,0.005,66,0.003,70,2.103,85,0.487,86,0.506,113,1.547,115,2.197,149,0.905,150,0.619,151,1.18,152,0.736,153,0.736,154,0.736,155,0.736,157,0.673,158,2.855,159,2.811,160,1.235,162,1.235,180,0.736,181,0.418,182,1.235,183,1.235,184,0.619,185,1.866,186,0.736,187,0.736,188,0.619,189,0.736,190,0.619,191,0.736,192,0.619,193,0.704,194,0.736,195,0.594,196,0.736,197,0.594,198,0.736,199,1.505,200,0.736,201,0.594,202,0.736,203,0.619,204,0.736,205,0.594,206,0.673,207,0.736,208,0.619,209,0.736,210,0.594,211,0.704,212,0.704,213,0.594,214,0.704,215,0.736,241,2.768,281,1.169,330,0.736,335,1.276,348,0.728,357,0.402,391,2.407,414,3.52,431,2.139,438,1.34,478,2.139,499,3.52,508,1.961,535,1.671,543,1.956,550,4.596,559,1.276,560,1.276,567,4.565,569,4.869,571,2.139,576,2.139,683,1.276,684,1.276,685,1.276,686,1.276,687,1.084,688,1.084,689,1.084,690,1.084,691,1.013,692,1.084,693,0.9,694,2.569,695,1.084,696,1.818,697,1.276,699,3.097,717,1.818,738,2.348,828,1.418,829,2.742,830,3.541,831,2.742,832,4.617,833,4.617,834,3.541,835,4.617,836,3.541,837,3.541,838,3.541,839,3.541,840,3.541,841,4.144,842,3.541,843,3.541,844,3.541,845,3.541,846,3.541,847,3.596,848,3.541,849,3.541,850,3.541,851,3.541,852,3.541,853,3.541,854,3.541,855,3.072,856,3.541,857,3.541,858,3.541,859,1.635,860,3.573,861,2.742,862,1.635,863,1.635,864,1.635,865,1.635,866,1.635,867,1.635,868,1.635,869,1.635,870,1.635,871,1.635,872,1.635,873,1.635,874,2.742,875,1.635,876,4.005,877,1.635,878,1.635,879,1.635,880,1.635,881,1.635,882,1.635,883,1.635,884,1.635,885,1.635,886,1.635,887,1.635,888,1.635,889,1.635,890,1.635,891,1.418,892,1.418,893,1.635,894,1.635,895,1.635,896,1.418,897,2.742,898,2.742,899,1.635,900,1.635,901,1.635,902,1.635,903,1.635,904,1.635,905,1.418,906,1.635,907,1.635,908,1.635,909,1.635,910,1.635,911,1.635,912,1.635,913,1.635,914,1.635,915,1.635,916,1.418,917,2.379,918,1.635,919,1.418,920,1.635,921,2.742,922,1.635,923,1.635,924,1.635,925,1.635,926,1.635,927,1.635,928,1.635,929,1.635,930,1.635,931,1.635,932,1.635,933,1.635,934,1.635,935,1.635,936,1.635,937,1.635,938,1.635,939,1.635,940,1.635,941,1.635,942,1.635,943,1.635,944,1.635,945,2.742,946,1.635,947,1.635,948,1.635,949,1.635,950,1.635,951,2.742,952,1.635,953,1.635,954,1.635,955,1.635,956,1.635,957,1.635,958,1.635,959,1.635,960,1.635,961,2.742,962,1.635,963,2.742,964,2.742,965,2.742,966,4.144,967,4.996]],["title/modules/LoggingModule.html",[216,0.923,235,2.418]],["body/modules/LoggingModule.html",[3,0.14,4,0.16,5,0.14,16,0.015,24,0.46,31,0.356,32,1.445,33,1.445,38,0.16,39,0.38,64,0.009,65,0.011,66,0.009,86,1.502,181,1.239,199,2.739,216,1.148,218,1.761,219,1.835,220,2.796,221,1.998,222,1.998,223,2.435,235,4.676,242,2.542,243,1.998,244,1.998,246,2.087,249,1.998,255,2.542,263,3.219,463,2.913,608,4.817,609,3.006,610,3.826,669,4.817,968,4.208,969,4.208,970,4.85,971,6.173,972,5.355,973,6.173,974,6.173,975,6.173,976,6.173,977,4.85,978,3.597,979,4.208,980,4.85]],["title/injectables/LoggingService.html",[30,0.428,860,2.79]],["body/injectables/LoggingService.html",[3,0.133,4,0.151,5,0.133,7,0.405,8,1.027,10,0.758,13,1.064,15,0.892,16,0.015,17,0.582,18,0.503,19,0.823,21,2.214,22,1.895,24,0.429,30,0.653,31,0.336,34,2.722,35,1.808,36,2.063,37,1.972,38,0.151,39,0.359,41,1.972,61,1.823,64,0.008,65,0.011,66,0.008,67,4.33,68,1.365,115,1.808,331,3.277,335,3.576,336,3.576,337,3.975,362,1.476,693,3.275,696,4.383,698,2.522,699,2.84,717,3.946,855,5.734,860,4.256,891,3.975,892,3.975,905,5.163,981,3.975,982,6.609,983,6.609,984,4.582,985,4.582,986,4.582,987,4.582,988,4.582,989,4.582]],["title/components/LoginComponent.html",[149,0.997,201,1.417]],["body/components/LoginComponent.html",[3,0.08,4,0.092,5,0.08,7,0.245,8,0.721,10,0.691,13,1.086,15,0.814,16,0.015,17,0.763,18,0.552,19,0.751,21,1.876,22,1.605,24,0.374,31,0.203,38,0.092,39,0.217,40,1.152,51,1.141,64,0.005,65,0.008,66,0.005,70,2.359,85,0.825,149,1.285,150,1.048,151,1.798,152,1.248,153,1.248,154,1.248,155,1.248,157,1.141,158,3.211,159,3.183,160,1.881,162,1.881,180,1.248,181,0.708,182,1.881,183,1.881,184,1.048,185,2.521,186,1.248,187,1.248,188,1.048,189,1.248,190,1.048,191,1.248,192,1.048,193,1.192,194,1.248,195,1.006,196,1.248,197,1.006,198,1.248,199,1.006,200,1.248,201,2.033,202,1.248,203,1.048,204,1.248,205,1.006,206,1.141,207,1.248,208,1.048,209,1.248,210,1.006,211,1.192,212,1.192,213,1.006,214,1.192,215,1.248,322,4.688,348,1.109,357,1.477,368,1.445,382,3.82,384,3.129,391,2.178,394,2.404,434,3.26,435,2.77,438,2.48,535,2.373,543,2.642,561,1.982,609,1.717,990,2.404,991,5.029,992,5.029,993,4.178,994,5.029,995,5.599,996,5.599,997,4.178,998,5.599,999,3.624,1000,5.029,1001,5.029,1002,4.363,1003,6.555,1004,4.063,1005,2.771,1006,2.771,1007,2.771,1008,4.857,1009,4.178,1010,3.624,1011,3.624,1012,2.771,1013,2.771,1014,2.771,1015,4.178,1016,5.599,1017,2.771,1018,2.771,1019,2.771,1020,2.771,1021,2.771,1022,5.029,1023,2.771,1024,4.857,1025,2.771,1026,2.404,1027,2.771,1028,2.771,1029,2.771,1030,4.178,1031,2.771,1032,2.771,1033,2.771,1034,4.178,1035,4.178,1036,2.771,1037,2.771,1038,2.771,1039,2.771,1040,2.771,1041,2.771,1042,2.771,1043,2.771,1044,2.771,1045,2.771,1046,2.771,1047,2.771,1048,2.771]],["title/modules/LoginModule.html",[216,0.923,236,2.274]],["body/modules/LoginModule.html",[3,0.144,4,0.165,5,0.144,16,0.015,24,0.45,31,0.365,32,1.483,33,1.483,38,0.165,39,0.389,64,0.009,65,0.011,66,0.009,86,1.541,181,1.272,201,2.91,216,1.178,218,1.807,219,1.883,220,2.83,221,2.05,222,2.05,223,2.711,236,4.493,242,2.584,243,2.05,244,2.05,246,2.142,249,2.05,255,2.584,263,3.272,463,2.961,609,3.085,610,3.889,1049,4.318,1050,4.318,1051,4.318,1052,4.977,1053,6.274,1054,5.443,1055,4.977]],["title/injectables/LoginService.html",[30,0.428,1004,2.418]],["body/injectables/LoginService.html",[3,0.157,4,0.18,5,0.157,7,0.48,8,1.142,10,1.183,13,1.007,16,0.015,21,1.819,22,1.557,24,0.322,30,0.727,31,0.398,36,2.445,37,2.337,38,0.18,39,0.425,50,2.988,64,0.01,65,0.012,66,0.01,68,1.618,775,5.576,776,5.168,1004,4.105,1056,4.711,1057,7.146,1058,5.431,1059,5.431,1060,5.431,1061,5.431]],["title/injectables/MethodNotAllowedErrorHandler.html",[30,0.428,457,2.418]],["body/injectables/MethodNotAllowedErrorHandler.html",[3,0.108,4,0.123,5,0.108,7,0.329,8,0.893,10,0.857,12,2.56,13,1.027,15,1.252,16,0.015,17,0.858,18,0.741,19,1.155,20,2.074,24,0.44,29,1.677,30,0.568,31,0.273,32,1.109,33,1.109,34,2.45,35,1.469,38,0.123,39,0.291,40,1.027,44,1.199,60,2.565,61,1.774,64,0.007,65,0.009,66,0.007,68,1.109,70,2.356,77,3.15,79,1.757,85,2.084,86,1.153,90,1.845,91,2.049,92,1.845,93,1.677,94,1.941,95,2.666,98,2.442,100,1.941,115,1.469,133,2.17,330,1.677,345,3.15,348,1.374,349,3.208,350,2.848,351,2.17,352,3.386,354,3.208,355,4.14,357,1.463,358,2.848,360,2.848,362,1.667,363,2.049,364,2.049,365,2.469,367,3.208,368,1.941,369,2.308,370,2.308,371,2.308,372,2.308,373,2.308,457,3.208,464,5.458,465,5.002,512,1.941,1062,3.432,1063,2.469,1064,2.469,1065,2.469,1066,3.723,1067,3.723,1068,3.723]],["title/components/NavigationComponent.html",[149,0.997,203,1.476]],["body/components/NavigationComponent.html",[3,0.154,4,0.083,5,0.073,7,0.221,8,0.667,10,0.64,11,1.955,12,2.287,13,0.923,15,0.488,16,0.015,17,0.675,18,0.583,19,0.45,20,1.349,21,0.839,22,0.718,24,0.397,31,0.184,32,0.746,33,0.746,38,0.083,39,0.196,40,1.067,51,1.946,64,0.005,65,0.007,66,0.005,70,1.711,85,0.746,86,0.776,149,1.207,150,0.948,151,1.665,152,1.128,153,1.128,154,1.128,155,1.128,157,1.032,158,3.151,159,3.12,160,1.742,162,1.742,180,1.128,181,0.64,182,1.742,183,1.742,184,0.948,185,2.393,186,1.128,187,1.128,188,0.948,189,1.128,190,0.948,191,1.128,192,0.948,193,1.078,194,1.128,195,0.91,196,1.128,197,0.91,198,1.128,199,0.91,200,1.128,201,0.91,202,1.128,203,2.01,204,1.128,205,0.91,206,1.032,207,1.128,208,0.948,209,1.128,210,0.91,211,1.078,212,1.078,213,0.91,214,1.078,215,1.128,241,3.3,281,1.792,323,1.955,327,1.792,348,1.027,357,0.616,362,1.246,380,2.929,382,3.687,384,3.394,391,3.165,426,1.553,438,1.788,448,3.347,535,2.23,543,2.508,561,1.792,567,4.026,577,3.356,578,4.147,579,4.099,580,3.356,582,1.792,583,3.379,584,3.379,585,4.026,592,4.737,597,3.356,598,3.356,648,3.356,876,6.406,896,2.173,916,5.49,917,6.14,919,5.266,1004,3.922,1011,2.173,1026,2.173,1069,2.173,1070,3.868,1071,4.725,1072,3.868,1073,4.725,1074,4.725,1075,4.725,1076,3.868,1077,2.505,1078,2.505,1079,2.505,1080,2.505,1081,2.173,1082,2.173,1083,4.725,1084,2.173,1085,2.505,1086,2.505,1087,6.07,1088,2.505,1089,1.955,1090,2.505,1091,2.505,1092,2.505,1093,2.505,1094,2.505,1095,2.505,1096,2.505,1097,2.505,1098,2.505,1099,2.505,1100,2.505,1101,2.505,1102,2.505,1103,2.505,1104,3.868,1105,3.868,1106,3.868,1107,5.314,1108,3.868,1109,2.505,1110,2.505,1111,3.868,1112,2.505,1113,2.505]],["title/modules/NavigationModule.html",[216,0.923,237,2.274]],["body/modules/NavigationModule.html",[3,0.143,4,0.164,5,0.143,16,0.015,24,0.44,31,0.363,32,1.475,33,1.475,38,0.164,39,0.387,64,0.009,65,0.011,66,0.009,86,1.533,181,1.265,203,3.03,216,1.172,218,1.798,219,1.873,220,2.823,221,2.039,222,2.039,223,2.704,237,4.487,242,2.575,243,2.039,244,2.039,246,2.131,249,2.039,255,2.575,263,3.261,463,2.951,610,3.876,612,5.425,1114,4.295,1115,4.295,1116,4.295,1117,4.951,1118,6.254,1119,6.254,1120,4.951]],["title/injectables/NoConnectionErrorHandler.html",[30,0.428,458,2.418]],["body/injectables/NoConnectionErrorHandler.html",[3,0.108,4,0.124,5,0.108,7,0.33,8,0.895,10,0.859,12,2.566,13,1.029,15,1.254,16,0.015,17,0.859,18,0.742,19,1.157,20,2.079,24,0.44,29,1.683,30,0.569,31,0.274,32,1.114,33,1.114,34,2.455,35,1.475,38,0.124,39,0.293,40,1.031,44,1.204,60,2.572,61,1.777,64,0.007,65,0.01,66,0.007,68,1.114,70,2.358,77,3.154,79,1.764,85,2.086,86,1.158,90,1.852,91,2.057,92,1.852,93,1.683,94,1.949,95,2.67,98,2.449,100,1.949,115,2.048,133,2.178,330,1.683,345,3.154,348,1.378,349,3.217,350,2.856,351,2.178,352,3.39,354,3.217,355,4.143,357,1.466,358,2.856,360,2.856,362,1.671,363,2.057,364,2.057,367,3.217,368,1.949,369,2.317,370,2.317,371,2.317,372,2.317,373,2.317,458,3.217,466,5.465,467,5.009,512,1.949,1062,3.442,1063,2.479,1064,2.479,1065,2.479,1121,3.738,1122,3.738]],["title/injectables/NotFoundErrorHandler.html",[30,0.428,459,2.418]],["body/injectables/NotFoundErrorHandler.html",[3,0.108,4,0.123,5,0.108,7,0.329,8,0.893,10,0.857,12,2.56,13,1.027,15,1.252,16,0.015,17,0.858,18,0.741,19,1.155,20,2.074,24,0.44,29,1.677,30,0.568,31,0.273,32,1.109,33,1.109,34,2.45,35,1.469,38,0.123,39,0.291,40,1.027,44,1.199,60,2.565,61,1.774,64,0.007,65,0.009,66,0.007,68,1.109,70,2.356,77,3.15,79,1.757,85,2.084,86,1.153,90,1.845,91,2.049,92,1.845,93,1.677,94,1.941,95,2.666,98,2.442,100,1.941,115,1.469,133,2.17,330,1.677,345,3.15,348,1.374,349,3.208,350,2.848,351,2.17,352,3.386,354,3.208,355,4.14,357,1.463,358,2.848,360,2.848,362,1.667,363,2.049,364,2.049,365,2.469,367,3.208,368,1.941,369,2.308,370,2.308,371,2.308,372,2.308,373,2.308,459,3.208,468,5.458,469,5.002,512,1.941,1062,3.432,1063,2.469,1064,2.469,1065,2.469,1123,3.723,1124,3.723,1125,3.723]],["title/modules/PipeModule.html",[216,0.923,978,2.274]],["body/modules/PipeModule.html",[3,0.156,4,0.179,5,0.156,16,0.014,24,0.391,31,0.396,38,0.179,39,0.423,64,0.01,65,0.012,66,0.01,181,1.38,216,1.278,218,1.961,219,2.043,220,2.936,221,2.224,222,2.224,223,2.812,242,2.718,243,2.224,244,2.224,255,2.718,475,5.372,478,4.214,978,4.572,1126,4.685,1127,4.685,1128,4.685,1129,5.4]],["title/components/PrivacyPolicyComponent.html",[149,0.997,205,1.417]],["body/components/PrivacyPolicyComponent.html",[3,0.029,4,0.033,5,0.029,7,0.089,10,0.403,13,0.273,16,0.015,17,0.309,20,2.85,24,0.106,31,0.074,38,0.033,39,0.078,40,0.495,51,0.413,64,0.002,65,0.003,66,0.002,85,0.299,149,0.621,150,0.379,151,0.772,152,0.451,153,0.451,154,0.451,155,0.451,157,0.413,158,2.438,159,2.382,160,0.807,162,0.807,180,0.451,181,0.256,182,0.807,183,0.807,184,0.379,185,1.333,186,0.451,187,0.451,188,0.379,189,0.451,190,0.379,191,0.451,192,0.379,193,0.431,194,0.451,195,0.364,196,0.451,197,0.364,198,0.451,199,0.364,200,0.451,201,0.364,202,0.451,203,0.379,204,0.451,205,1.075,206,3.361,207,0.451,208,0.379,209,0.451,210,0.364,211,0.431,212,0.431,213,0.364,214,0.431,215,0.451,319,1.74,327,2.117,348,0.476,357,0.246,438,0.678,535,1.148,543,1.397,582,0.717,583,0.717,584,0.717,585,0.665,619,5.58,662,0.782,691,1.111,730,1.555,732,1.555,735,1.555,738,5.147,739,6.153,740,4.538,744,2.568,745,1.555,746,0.87,747,0.87,748,0.87,847,5.02,1008,6.944,1130,1.898,1131,0.87,1132,2.432,1133,1.793,1134,1.002,1135,1.002,1136,1.793,1137,1.793,1138,1.793,1139,1.793,1140,1.793,1141,2.96,1142,1.793,1143,1.793,1144,1.793,1145,5.998,1146,6.881,1147,1.793,1148,5.998,1149,5.998,1150,4.858,1151,4.858,1152,4.858,1153,4.858,1154,4.389,1155,3.781,1156,3.781,1157,3.781,1158,3.781,1159,5.786,1160,2.96,1161,2.96,1162,7.822,1163,1.793,1164,7.808,1165,2.96,1166,2.96,1167,1.793,1168,3.781,1169,5.998,1170,5.534,1171,5.534,1172,4.389,1173,3.808,1174,3.781,1175,3.781,1176,3.781,1177,4.858,1178,3.781,1179,3.781,1180,4.389,1181,2.96,1182,2.96,1183,2.96,1184,1.793,1185,1.793,1186,2.96]],["title/modules/PrivacyPolicyModule.html",[216,0.923,238,2.418]],["body/modules/PrivacyPolicyModule.html",[3,0.147,4,0.168,5,0.147,16,0.015,24,0.443,31,0.372,32,1.51,33,1.51,38,0.168,39,0.397,64,0.009,65,0.012,66,0.009,86,1.57,181,1.295,205,2.917,206,2.088,216,1.2,218,1.841,219,1.918,220,2.854,221,2.088,222,2.088,223,2.734,238,4.798,242,2.614,243,2.088,244,2.088,246,2.182,249,2.088,255,2.614,263,3.31,319,3.626,320,4.398,463,2.995,753,5.507,1130,3.956,1187,4.398,1188,4.398,1189,4.398,1190,5.07]],["title/injectables/RouternavigationService.html",[30,0.428,382,2.274]],["body/injectables/RouternavigationService.html",[3,0.129,4,0.147,5,0.129,7,0.392,10,0.735,13,1.142,15,0.865,16,0.015,17,0.564,18,0.488,19,0.798,24,0.345,30,0.64,31,0.326,36,2.001,37,1.912,38,0.147,39,0.348,41,1.912,64,0.008,65,0.011,66,0.008,68,1.324,115,2.833,314,3.178,327,3.178,348,1.548,357,1.812,382,3.399,438,2.788,1191,3.855,1192,6.913,1193,6.913,1194,6.913,1195,6.913,1196,6.913,1197,6.913,1198,4.443,1199,7.369,1200,4.443,1201,4.443,1202,4.443,1203,4.443,1204,4.443,1205,4.443,1206,4.443,1207,4.443,1208,7.369,1209,4.443,1210,4.443,1211,4.443,1212,4.443,1213,4.443,1214,4.443]],["title/directives/SecuredDirective.html",[184,1.476,213,1.417]],["body/directives/SecuredDirective.html",[3,0.137,4,0.157,5,0.137,7,0.419,10,1.007,13,1.021,15,1.185,16,0.015,17,0.773,18,0.737,19,1.093,24,0.398,31,0.348,38,0.157,39,0.371,64,0.009,65,0.011,66,0.009,70,2.164,157,1.953,158,2.618,184,2.302,212,2.041,213,2.209,214,3.227,357,1.166,384,3.779,398,4.114,426,3.771,427,4.114,438,1.794,704,2.939,999,5.278,1024,5.278,1215,4.114,1216,6.084,1217,4.742,1218,7.499,1219,6.718,1220,7.087,1221,4.742,1222,6.084,1223,4.742,1224,4.742,1225,4.742,1226,4.742,1227,4.742,1228,4.742]],["title/injectables/ServerSideErrorHandler.html",[30,0.428,460,2.418]],["body/injectables/ServerSideErrorHandler.html",[3,0.108,4,0.123,5,0.108,7,0.329,8,0.893,10,0.857,12,2.56,13,1.027,15,1.252,16,0.015,17,0.858,18,0.741,19,1.155,20,2.074,24,0.44,29,1.677,30,0.568,31,0.273,32,1.109,33,1.109,34,2.45,35,1.469,38,0.123,39,0.291,40,1.027,44,1.199,60,2.565,61,1.774,64,0.007,65,0.009,66,0.007,68,1.109,70,2.356,77,3.15,79,1.757,85,2.084,86,1.153,90,1.845,91,2.049,92,1.845,93,1.677,94,1.941,95,2.666,98,2.442,100,1.941,115,1.469,133,2.17,330,1.677,345,3.15,348,1.374,349,3.208,350,2.848,351,2.17,352,3.386,354,3.208,355,4.14,357,1.463,358,2.848,360,2.848,362,1.667,363,2.049,364,2.049,365,2.469,367,3.208,368,1.941,369,2.308,370,2.308,371,2.308,372,2.308,373,2.308,460,3.208,470,5.458,471,5.002,512,1.941,1062,3.432,1063,2.469,1064,2.469,1065,2.469,1229,3.723,1230,3.23,1231,3.23]],["title/injectables/SessionStorageService.html",[30,0.428,414,2.587]],["body/injectables/SessionStorageService.html",[3,0.114,4,0.13,5,0.114,7,0.348,8,0.928,10,0.652,13,1.048,15,0.767,16,0.015,17,0.5,18,0.432,19,0.708,21,2.206,22,2.04,24,0.39,30,0.59,31,0.289,36,1.774,37,1.695,38,0.13,39,0.308,41,1.695,44,1.733,61,1.484,64,0.007,65,0.01,66,0.007,68,1.173,70,1.973,113,2.384,270,2.961,271,2.612,330,1.774,334,2.805,342,4.198,352,3.358,414,4.367,443,3.073,448,2.295,496,2.817,508,3.848,519,4.198,527,3.073,531,3.073,533,3.073,687,2.612,688,2.612,689,2.612,690,2.612,691,2.441,692,2.612,694,2.441,695,2.612,803,3.073,804,5.713,805,5.316,806,5.316,807,5.713,808,3.417,813,3.073,814,3.417,815,3.073,816,4.668,817,4.668,819,4.668,820,4.668,823,3.417,824,3.417,825,4.668,826,3.417,827,3.417,1232,6.174,1233,3.938,1234,3.938,1235,3.938,1236,3.938,1237,3.938,1238,3.938,1239,3.938]],["title/components/ToastMessageComponent.html",[149,0.997,208,1.476]],["body/components/ToastMessageComponent.html",[3,0.114,4,0.13,5,0.114,7,0.346,10,0.888,13,0.816,15,0.764,16,0.015,17,0.835,18,0.43,19,0.705,24,0.389,31,0.288,38,0.13,39,0.307,40,1.48,51,1.615,64,0.007,65,0.01,66,0.007,70,1.728,77,3.201,85,1.822,86,1.215,92,3.522,93,2.753,94,2.045,149,1.562,150,1.484,151,2.309,152,1.766,153,1.766,154,1.766,155,1.766,157,1.615,158,3.389,159,3.372,160,2.416,162,2.416,180,1.766,181,1.002,182,2.416,183,2.416,184,1.484,185,2.96,186,1.766,187,1.766,188,1.484,189,1.766,190,1.484,191,1.766,192,1.484,193,1.688,194,1.766,195,1.424,196,1.766,197,1.424,198,1.766,199,1.424,200,1.766,201,1.424,202,1.766,203,1.484,204,1.766,205,1.424,206,1.615,207,1.766,208,2.487,209,1.766,210,1.424,211,1.688,212,1.688,213,1.424,214,1.688,215,1.766,267,6.313,348,1.424,351,2.286,357,0.964,438,2.03,535,2.886,543,3.102,1240,4.373,1241,3.403,1242,5.365,1243,6.114,1244,5.365,1245,3.922,1246,3.922,1247,3.922,1248,3.922]],["title/modules/ToastMessageModule.html",[216,0.923,239,2.418]],["body/modules/ToastMessageModule.html",[3,0.147,4,0.168,5,0.147,16,0.015,24,0.431,31,0.373,38,0.168,39,0.398,64,0.009,65,0.012,66,0.009,92,2.519,93,2.289,181,1.299,208,3.041,216,1.203,218,1.846,219,1.923,220,2.857,221,2.093,222,2.093,223,2.737,239,4.801,242,2.618,243,2.093,244,2.093,246,2.188,249,2.093,255,2.618,463,3,1240,3.635,1249,4.41,1250,4.41,1251,4.41,1252,5.083,1253,6.358,1254,5.083,1255,5.083]],["title/injectables/ToastMessageService.html",[30,0.428,77,1.757]],["body/injectables/ToastMessageService.html",[3,0.128,4,0.147,5,0.128,7,0.392,8,1.005,10,1.076,13,1.05,16,0.015,21,2.179,22,1.864,24,0.385,30,0.639,31,0.325,36,1.996,37,1.908,38,0.147,39,0.347,50,2.439,64,0.008,65,0.011,66,0.008,68,1.321,77,2.622,85,2.137,86,1.373,93,3.231,101,3.459,103,3.846,113,2.314,134,4.544,141,5.39,144,5.39,147,4.544,148,5.052,775,5.075,776,4.544,1240,5.131,1256,3.846,1257,6.504,1258,6.504,1259,6.504,1260,4.433,1261,4.433,1262,4.433,1263,4.433,1264,4.433,1265,4.433,1266,4.433,1267,4.433,1268,5.824,1269,4.433,1270,4.433]],["title/injectables/TranslateErrorHandler.html",[30,0.428,279,2.79]],["body/injectables/TranslateErrorHandler.html",[3,0.14,4,0.16,5,0.14,7,0.428,10,0.803,13,0.938,15,1.202,16,0.015,17,0.784,18,0.677,19,1.109,24,0.447,30,0.677,31,0.356,32,1.445,33,1.445,38,0.16,39,0.38,40,1.338,41,2.087,44,1.988,55,4.414,60,3.059,61,1.338,64,0.009,65,0.011,66,0.009,68,1.445,116,3.785,261,5.355,270,4.151,271,3.217,279,4.414,280,5.298,330,2.78,334,3.219,345,3.057,348,1.639,357,1.193,363,2.669,364,2.669,485,4.208,512,2.529,757,3.469,815,3.785,1271,4.85,1272,4.85,1273,6.173,1274,7.147,1275,4.85,1276,4.85,1277,4.85,1278,4.85,1279,4.85,1280,4.85]],["title/injectables/UserService.html",[30,0.428,1281,2.79]],["body/injectables/UserService.html",[3,0.119,4,0.136,5,0.119,7,0.362,8,0.954,10,0.678,13,1.095,15,1.218,16,0.015,17,0.794,18,0.686,19,1.124,21,2.096,22,1.793,24,0.414,30,0.607,31,0.301,34,3.082,35,1.617,36,1.846,37,1.764,38,0.136,39,0.321,41,1.764,61,1.928,64,0.008,65,0.01,66,0.008,67,4.197,68,1.221,72,5.427,331,2.932,336,3.199,348,1.468,357,1.359,391,3.262,700,4.563,704,2.541,705,2.389,707,2.541,1089,4.881,1281,3.954,1282,3.556,1283,6.255,1284,6.255,1285,5.528,1286,4.796,1287,4.099,1288,5.528,1289,4.099,1290,5.528,1291,4.099,1292,4.099,1293,4.099,1294,4.099,1295,3.556,1296,3.556,1297,4.099,1298,4.099,1299,4.099,1300,5.528,1301,4.796,1302,4.099]],["title/components/UsersettingsComponent.html",[149,0.997,210,1.417]],["body/components/UsersettingsComponent.html",[3,0.048,4,0.054,5,0.048,7,0.314,8,0.475,10,0.456,12,1.79,13,1.118,15,0.692,16,0.015,17,0.676,18,0.705,19,0.639,20,2.427,21,2.154,22,1.976,24,0.381,31,0.121,32,0.49,33,0.49,38,0.054,39,0.129,40,0.76,44,1.614,51,0.677,61,1.383,64,0.003,65,0.005,66,0.003,70,2.38,77,2.397,85,0.49,92,0.815,93,0.741,94,0.858,95,0.649,113,0.923,115,0.649,149,0.909,150,0.622,151,1.186,152,0.741,153,0.741,154,0.741,155,0.741,157,0.677,158,2.859,159,2.816,160,1.241,162,1.241,180,0.741,181,0.42,182,1.241,183,1.241,184,0.622,185,1.873,186,0.741,187,0.741,188,0.622,189,0.741,190,0.622,191,0.741,192,0.622,193,0.708,194,0.741,195,0.597,196,0.741,197,0.597,198,0.741,199,0.597,200,0.741,201,0.597,202,0.741,203,0.622,204,0.741,205,0.597,206,0.677,207,0.741,208,0.622,209,0.741,210,1.51,211,1.53,212,0.708,213,0.597,214,0.708,215,0.741,298,1.176,348,0.732,357,1.309,362,0.53,380,2.204,384,2.97,391,2.613,426,1.02,435,1.091,438,2.112,448,0.959,486,3.324,492,1.427,502,4.357,505,1.427,535,1.678,543,1.963,550,3.985,559,1.284,560,1.284,561,1.176,567,2.358,569,3.313,571,2.15,574,1.427,576,3.246,585,1.091,592,1.284,693,0.905,698,1.516,700,2.204,702,1.284,703,1.284,704,1.02,705,2.072,707,3.985,738,1.091,1002,3.085,1004,3.3,1010,1.427,1081,1.427,1082,1.427,1084,1.427,1089,3.911,1281,3.807,1286,3.609,1295,1.427,1296,1.427,1301,3.609,1303,1.427,1304,3.556,1305,2.756,1306,3.556,1307,3.556,1308,3.556,1309,4.633,1310,3.556,1311,2.756,1312,3.556,1313,3.556,1314,3.556,1315,3.556,1316,3.556,1317,3.556,1318,3.556,1319,3.556,1320,3.556,1321,3.556,1322,4.16,1323,4.16,1324,2.756,1325,4.16,1326,4.16,1327,2.756,1328,1.645,1329,2.756,1330,1.645,1331,1.645,1332,2.756,1333,1.645,1334,1.645,1335,1.645,1336,1.645,1337,2.756,1338,1.645,1339,1.645,1340,1.645,1341,1.645,1342,1.645,1343,1.645,1344,1.645,1345,1.645,1346,1.645,1347,1.645,1348,2.756,1349,1.645,1350,1.645,1351,1.645,1352,1.645,1353,1.645,1354,1.645,1355,1.645,1356,1.645,1357,1.645,1358,1.645,1359,1.645,1360,1.645,1361,2.756,1362,1.645,1363,1.645,1364,1.645,1365,1.645,1366,4.633,1367,1.645,1368,1.645,1369,1.645,1370,2.756,1371,2.756,1372,1.645,1373,2.756,1374,1.645,1375,1.645,1376,2.756,1377,5.323,1378,2.756,1379,1.645,1380,1.645,1381,3.556,1382,1.645,1383,1.645,1384,1.645,1385,1.645,1386,1.645,1387,1.645,1388,1.645,1389,1.645,1390,1.645,1391,1.645,1392,1.645,1393,1.645,1394,1.645,1395,1.645,1396,1.645,1397,3.556,1398,1.645,1399,3.556,1400,1.645,1401,3.556,1402,1.645,1403,1.645,1404,1.645,1405,1.645,1406,1.645,1407,1.645,1408,1.645,1409,1.645,1410,2.756,1411,1.645,1412,2.756,1413,1.645,1414,2.756,1415,2.756,1416,2.756,1417,1.645,1418,1.645,1419,1.645,1420,1.645,1421,1.645]],["title/modules/UsersettingsModule.html",[216,0.923,240,2.418]],["body/modules/UsersettingsModule.html",[3,0.137,4,0.156,5,0.137,16,0.015,24,0.457,31,0.347,32,1.409,33,1.409,38,0.156,39,0.37,64,0.009,65,0.011,66,0.009,86,1.465,181,1.209,210,2.721,216,1.119,218,1.717,219,1.79,220,2.763,221,1.948,222,1.948,223,1.866,236,4.367,240,4.785,242,2.502,243,1.948,244,1.948,246,2.614,249,1.948,255,2.502,263,3.167,463,2.867,608,4.74,609,2.932,610,3.765,611,5.27,669,4.74,972,5.27,978,3.54,979,4.104,1054,5.27,1422,4.104,1423,4.104,1424,4.73,1425,4.73,1426,6.074,1427,6.074,1428,6.074,1429,4.73,1430,4.73]],["title/injectables/ValidationErrorHandler.html",[30,0.428,461,2.418]],["body/injectables/ValidationErrorHandler.html",[3,0.109,4,0.125,5,0.109,7,0.333,8,0.9,10,0.864,12,2.576,13,1.032,15,1.258,16,0.015,17,0.862,18,0.745,19,1.161,20,2.087,24,0.441,29,1.696,30,0.573,31,0.276,32,1.122,33,1.122,34,2.465,35,1.486,38,0.125,39,0.295,40,1.039,44,1.213,60,2.586,61,1.783,64,0.007,65,0.01,66,0.007,68,1.122,70,2.363,77,3.161,79,1.778,85,2.092,86,1.167,90,1.867,91,2.073,92,1.867,93,1.696,94,1.964,95,2.677,98,2.463,100,1.964,115,1.486,133,2.195,330,1.696,345,3.161,348,1.385,349,3.234,350,2.871,351,2.195,352,3.397,354,3.234,355,4.15,357,1.472,358,2.871,360,2.871,362,1.681,363,2.073,364,2.073,365,2.498,367,3.234,368,1.964,369,2.335,370,2.335,371,2.335,372,2.335,373,2.335,461,3.234,472,5.478,512,1.964,1062,3.46,1063,2.498,1064,2.498,1065,2.498,1230,3.268,1231,3.268,1431,3.767]],["title/coverage.html",[1432,4.638]],["body/coverage.html",[0,3.091,1,1.847,5,0.075,6,2.241,16,0.015,18,0.283,30,0.84,50,1.421,64,0.005,65,0.007,66,0.005,67,1.505,69,3.091,76,1.601,77,1.163,79,1.219,90,1.963,93,1.783,95,1.563,96,1.847,98,1.219,99,2.016,104,2.016,149,1.821,150,0.977,156,2.241,184,0.977,188,0.977,190,0.977,192,0.977,195,0.938,197,0.938,199,0.938,201,0.938,203,0.977,205,0.938,208,0.977,210,0.938,213,0.938,241,1.347,245,2.016,270,1.421,272,2.016,274,2.833,276,1.847,278,2.016,279,1.847,280,2.016,282,2.016,284,1.713,288,2.016,289,5.053,305,2.016,319,1.847,329,2.241,334,1.347,344,1.601,345,3.25,346,2.016,347,3.091,376,2.016,378,2.241,379,2.241,382,1.505,384,1.28,392,1.847,393,2.241,405,2.241,414,1.713,416,1.847,448,4.772,457,1.601,458,1.601,459,1.601,460,1.601,461,1.601,464,2.016,465,1.847,466,2.016,467,1.847,468,2.016,469,1.847,470,2.016,471,1.847,472,2.016,474,1.847,475,1.713,477,2.241,486,1.713,494,2.241,499,1.713,512,3.442,534,2.241,540,1.847,550,1.601,614,2.016,617,2.241,618,2.241,651,2.016,652,2.016,653,2.241,671,2.241,680,2.139,682,3.091,699,1.601,700,1.601,701,3.091,705,1.505,707,1.601,710,2.241,714,1.713,715,2.241,717,1.713,718,2.241,719,2.241,720,2.241,721,2.241,722,2.241,723,2.241,755,3.759,757,1.847,802,2.241,803,3.091,828,2.241,860,1.847,981,2.241,990,2.241,1004,1.601,1056,2.241,1069,2.241,1130,2.016,1131,2.241,1191,2.241,1215,2.241,1232,2.241,1240,2.833,1241,2.241,1256,2.241,1281,1.847,1282,2.241,1303,2.241,1432,2.241,1433,2.583,1434,2.583,1435,2.583,1436,2.583,1437,7.425,1438,7.364,1439,3.091,1440,3.091,1441,2.016,1442,6.907,1443,6.768,1444,6.397,1445,4.179,1446,4.179,1447,2.241,1448,2.241,1449,2.241,1450,3.961,1451,3.961,1452,3.961,1453,3.961,1454,4.817,1455,2.241,1456,2.241,1457,2.583,1458,2.583,1459,2.583,1460,2.241,1461,2.583,1462,2.241,1463,2.241,1464,3.436,1465,2.241,1466,2.241,1467,2.583,1468,2.583]],["title/dependencies.html",[219,1.777,1469,3.248]],["body/dependencies.html",[16,0.015,31,0.348,32,1.813,33,1.413,35,1.871,64,0.009,65,0.011,66,0.009,86,1.469,167,3.7,168,3.7,170,4.114,175,4.351,219,1.794,249,1.953,257,5.278,265,4.114,266,4.114,314,3.391,558,3.7,609,2.939,628,4.114,1470,7.801,1471,4.742,1472,4.742,1473,4.742,1474,4.742,1475,4.742,1476,4.742,1477,4.742,1478,7.087,1479,4.742,1480,4.742,1481,4.742,1482,4.742,1483,4.742,1484,4.742,1485,4.742,1486,4.742,1487,4.742,1488,4.742,1489,4.742,1490,6.084,1491,4.742,1492,4.742,1493,4.742,1494,4.742,1495,4.742,1496,4.742,1497,4.742,1498,4.742,1499,4.742,1500,4.742,1501,4.742,1502,4.742,1503,4.742,1504,4.742,1505,4.742,1506,4.742,1507,4.742,1508,4.742,1509,4.742]],["title/miscellaneous/enumerations.html",[1510,2.013,1511,4.076]],["body/miscellaneous/enumerations.html",[3,0.199,7,0.389,16,0.015,22,2.334,64,0.008,65,0.011,66,0.008,85,1.727,95,2.718,101,4.524,341,5.029,426,3.593,502,4.524,813,4.524,1510,2.729,1511,3.819,1512,4.402,1513,5.797,1514,4.402,1515,4.402,1516,4.402,1517,5.797,1518,4.402,1519,4.402,1520,5.797,1521,5.797,1522,4.402,1523,5.797,1524,7.35,1525,7.35,1526,7.35,1527,4.402,1528,6.888,1529,5.797,1530,4.402,1531,5.797,1532,5.797,1533,4.402,1534,4.402,1535,4.402,1536,4.402,1537,4.402,1538,4.402,1539,4.402,1540,4.402,1541,4.402,1542,6.482,1543,4.402,1544,5.797,1545,5.797,1546,5.797,1547,4.402,1548,4.402]],["title/miscellaneous/functions.html",[1510,2.013,1549,4.076]],["body/miscellaneous/functions.html",[7,0.438,15,1.447,16,0.015,17,0.944,18,0.545,19,1.335,20,1.731,55,4.48,64,0.009,65,0.011,66,0.009,79,2.343,85,1.479,95,2.471,116,3.874,134,4.888,141,4.888,144,4.888,147,4.888,245,3.874,274,4.48,290,4.307,305,4.888,334,3.266,345,2.235,352,2.956,357,1.688,362,2.017,1439,3.874,1440,4.888,1441,4.888,1445,4.307,1446,6.253,1447,5.434,1448,5.434,1449,5.434,1510,3.077,1549,4.307,1550,4.307,1551,6.863,1552,4.964,1553,4.964,1554,4.964,1555,4.964,1556,6.264,1557,4.964]],["title/index.html",[7,0.345,1558,3.385]],["body/index.html",[16,0.015,64,0.005,65,0.008,66,0.005,68,0.881,76,3.239,150,2.533,151,1.272,181,0.755,184,1.118,188,2.533,190,2.187,192,2.533,195,1.898,197,2.431,199,1.898,201,2.431,203,2.533,205,2.431,208,2.533,210,1.898,213,2.431,216,0.699,217,5.723,218,1.073,219,1.118,220,1.217,221,1.217,222,1.217,223,1.166,224,2.564,225,2.564,226,2.564,227,2.564,228,2.564,229,3.466,230,4.81,231,4.55,232,4.009,233,3.828,234,4.009,235,3.828,236,3.902,237,3.902,238,4.009,239,4.009,240,4.15,241,2.725,242,1.806,243,1.217,244,1.217,313,2.114,344,3.239,376,2.306,453,2.564,454,2.564,455,2.564,456,2.564,457,3.239,458,3.239,459,3.239,460,3.239,461,3.239,474,2.114,475,4.44,603,2.564,604,2.564,606,2.564,665,2.564,666,2.564,667,2.564,676,2.564,677,2.564,681,1.395,738,3.466,749,2.564,750,2.564,751,2.564,968,2.564,969,2.564,978,3.598,1049,2.564,1050,2.564,1051,2.564,1114,2.564,1115,2.564,1116,2.564,1126,2.564,1127,2.564,1128,2.564,1187,2.564,1188,2.564,1189,2.564,1249,2.564,1250,2.564,1251,2.564,1422,2.564,1423,2.564,1558,2.564,1559,2.955,1560,2.955,1561,2.955,1562,2.955,1563,2.955]],["title/modules.html",[218,1.941]],["body/modules.html",[16,0.012,64,0.009,65,0.012,66,0.009,171,4.494,175,5.785,217,3.704,218,1.881,229,3.435,230,3.211,231,3.211,232,3.211,233,3.211,234,3.211,235,3.211,236,3.018,237,3.018,238,3.211,239,3.211,240,3.211,978,3.018,1564,8.089,1565,8.089,1566,8.116,1567,5.18]],["title/routes.html",[313,3.823]],["body/routes.html",[16,0.013,64,0.012,65,0.013,66,0.012,313,4.559]],["title/miscellaneous/variables.html",[1510,2.013,1568,4.076]],["body/miscellaneous/variables.html",[1,2.754,7,0.34,12,1.657,16,0.015,17,0.769,18,0.831,21,2.508,22,2.146,50,2.119,64,0.007,65,0.01,66,0.007,69,3.005,90,3.232,104,4.134,105,3.005,106,3.341,107,3.341,115,2.789,230,2.387,231,2.387,232,2.387,233,2.387,234,2.387,235,2.387,236,2.244,237,2.244,238,2.387,239,2.387,240,2.387,272,4.134,274,3.789,282,4.134,288,4.134,303,5.254,304,3.341,306,3.341,307,4.596,352,1.817,391,2.763,392,2.754,540,3.789,714,4.536,716,4.726,755,3.005,757,3.789,778,4.596,779,4.596,780,3.341,781,3.341,978,2.244,1173,5.254,1439,3.005,1440,4.134,1441,3.005,1455,3.341,1456,4.596,1460,3.341,1462,3.341,1463,3.341,1464,3.341,1465,4.596,1466,4.596,1510,2.387,1550,3.341,1568,3.341,1569,3.851,1570,5.298,1571,5.298,1572,3.851,1573,3.851,1574,3.851,1575,3.851,1576,3.851,1577,6.056,1578,3.851,1579,3.851,1580,5.298,1581,5.298,1582,3.851,1583,5.298,1584,3.851,1585,5.298,1586,3.851,1587,5.298]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":448,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LocalStorageService.html":{},"components/NavigationComponent.html":{},"injectables/SessionStorageService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":1484,"title":{},"body":{"dependencies.html":{}}}],["0.10.3",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["0.3",{"_index":602,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.7.4",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1437,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1458,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1457,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1450,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1451,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1436,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":1461,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1438,"title":{},"body":{"coverage.html":{}}}],["0/30",{"_index":1459,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1452,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1444,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1443,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1454,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1453,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":738,"title":{},"body":{"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UsersettingsComponent.html":{},"index.html":{}}}],["1.1.0",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["1.1.11",{"_index":1476,"title":{},"body":{"dependencies.html":{}}}],["1.1.20150312",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["1.1.8",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["1.3.7",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":1562,"title":{},"body":{"index.html":{}}}],["10000",{"_index":148,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{}}}],["10deg",{"_index":635,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["10px",{"_index":600,"title":{},"body":{"components/HeaderComponent.html":{}}}],["11em",{"_index":1421,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["12",{"_index":1560,"title":{},"body":{"index.html":{}}}],["12.1.2",{"_index":1482,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":1559,"title":{},"body":{"index.html":{}}}],["1rem",{"_index":664,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["2",{"_index":739,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["2.0.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["2.9.3",{"_index":1486,"title":{},"body":{"dependencies.html":{}}}],["21",{"_index":1561,"title":{},"body":{"index.html":{}}}],["3",{"_index":740,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["3.6.5",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":633,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["3px",{"_index":599,"title":{},"body":{"components/HeaderComponent.html":{}}}],["3vh",{"_index":748,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["4",{"_index":1147,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["4.0.0",{"_index":1483,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1478,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1431,"title":{},"body":{"injectables/ValidationErrorHandler.html":{}}}],["403",{"_index":366,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["404",{"_index":1123,"title":{},"body":{"injectables/NotFoundErrorHandler.html":{}}}],["405",{"_index":1066,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{}}}],["500",{"_index":1229,"title":{},"body":{"injectables/ServerSideErrorHandler.html":{}}}],["50vw",{"_index":1348,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["6.5.5",{"_index":1499,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":1563,"title":{},"body":{"index.html":{}}}],["9.0.6",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["9.1.6",{"_index":1470,"title":{},"body":{"dependencies.html":{}}}],["9.2.3",{"_index":1472,"title":{},"body":{"dependencies.html":{}}}],["a.label).join",{"_index":944,"title":{},"body":{"components/LoggingComponent.html":{}}}],["accessors",{"_index":1216,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["active",{"_index":1107,"title":{},"body":{"components/NavigationComponent.html":{}}}],["activetoken",{"_index":406,"title":{},"body":{"injectables/AuthService.html":{}}}],["actual_component",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["add",{"_index":49,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["addlanguageheaderinterceptor",{"_index":1,"title":{"interceptors/AddLanguageHeaderInterceptor.html":{}},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["addon",{"_index":1418,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["address",{"_index":729,"title":{},"body":{"components/ImprintComponent.html":{}}}],["admin",{"_index":1546,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["align",{"_index":580,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["allowed",{"_index":465,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"coverage.html":{}}}],["angular",{"_index":824,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["angular/animations",{"_index":558,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":1471,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":249,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":29,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["angular/common/locales/de",{"_index":252,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/common/locales/en",{"_index":254,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/compiler",{"_index":1473,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":609,"title":{},"body":{"modules/HeaderModule.html":{},"modules/LoggingModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"modules/UsersettingsModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":314,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"injectables/RouternavigationService.html":{},"dependencies.html":{}}}],["angular/service",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":553,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{}}}],["animate('500ms",{"_index":643,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["animations",{"_index":628,"title":{},"body":{"components/HeaderTitleComponent.html":{},"dependencies.html":{}}}],["anypermission",{"_index":214,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["anypermission(permissions",{"_index":1225,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["api.service",{"_index":429,"title":{},"body":{"injectables/AuthService.html":{}}}],["api_url",{"_index":1581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiservice",{"_index":67,"title":{"injectables/ApiService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LoggingService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["app",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["app.component",{"_index":269,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["app.service",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{}}}],["app_base_href",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["app_initializer",{"_index":1576,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appcomponent",{"_index":150,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["appinitializerfactory",{"_index":1441,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["appinitializerfactory(translate",{"_index":1553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["appinitializerproviders",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["application.title",{"_index":650,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["application/json",{"_index":107,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":217,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["approutingmodule",{"_index":229,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["appservice",{"_index":270,"title":{"injectables/AppService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"coverage.html":{}}}],["appservice.log(log",{"_index":533,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["arg0",{"_index":683,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{}}}],["arg1",{"_index":684,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{}}}],["arg2",{"_index":685,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{}}}],["arg3",{"_index":686,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{}}}],["args",{"_index":481,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["array.isarray(data",{"_index":1043,"title":{},"body":{"components/LoginComponent.html":{}}}],["assets/i18n",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["auth",{"_index":381,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/DefaultErrorHandler.html":{}}}],["auth.service",{"_index":386,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["autherrorhandler",{"_index":515,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["autherrorresponsehandler",{"_index":344,"title":{"injectables/AuthErrorResponseHandler.html":{}},"body":{"injectables/AuthErrorResponseHandler.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["authguard",{"_index":285,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authguardservice",{"_index":284,"title":{"guards/AuthGuardService.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":392,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authresult",{"_index":437,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresult.token",{"_index":439,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":384,"title":{"injectables/AuthService.html":{}},"body":{"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"directives/SecuredDirective.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["available",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules.html":{}}}],["availablepermissions",{"_index":1306,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["backend",{"_index":340,"title":{},"body":{"injectables/AppService.html":{}}}],["background",{"_index":577,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["base.model",{"_index":560,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{}}}],["base.model.ts",{"_index":722,"title":{},"body":{"interfaces/IPrimeNgBase.html":{},"coverage.html":{}}}],["base_href",{"_index":1583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["black",{"_index":593,"title":{},"body":{"components/HeaderComponent.html":{}}}],["body",{"_index":130,"title":{},"body":{"injectables/ApiService.html":{}}}],["bold",{"_index":596,"title":{},"body":{"components/HeaderComponent.html":{}}}],["boolean",{"_index":362,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/DefaultErrorHandler.html":{},"components/HelpDialogComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IUser.html":{},"injectables/LoggingService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["bottom",{"_index":662,"title":{},"body":{"components/HelpDialogComponent.html":{},"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["box",{"_index":598,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["browse",{"_index":1566,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":259,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":795,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["browsermodule",{"_index":256,"title":{},"body":{"modules/AppModule.html":{}}}],["buttonmodule",{"_index":610,"title":{},"body":{"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/UsersettingsModule.html":{}}}],["cacheable",{"_index":114,"title":{},"body":{"injectables/ApiService.html":{}}}],["callerclass",{"_index":687,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["callerfilename",{"_index":688,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["callerline",{"_index":689,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["callermethod",{"_index":690,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["canactivate",{"_index":324,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuardService.html":{}}}],["card",{"_index":746,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["cardmodule",{"_index":753,"title":{},"body":{"modules/ImprintModule.html":{},"modules/PrivacyPolicyModule.html":{}}}],["catch",{"_index":342,"title":{},"body":{"injectables/AppService.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["catcherror",{"_index":87,"title":{},"body":{"injectables/ApiService.html":{}}}],["catcherror((error",{"_index":124,"title":{},"body":{"injectables/ApiService.html":{}}}],["center",{"_index":581,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changeableuser",{"_index":1307,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["changed",{"_index":1185,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["changedateformat",{"_index":1308,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["changes",{"_index":1018,"title":{},"body":{"components/LoginComponent.html":{}}}],["changes.loginname.currentvalue",{"_index":1033,"title":{},"body":{"components/LoginComponent.html":{}}}],["changes?.loginname?.currentvalue",{"_index":1031,"title":{},"body":{"components/LoginComponent.html":{}}}],["changes?.loginnamedisabled?.currentvalue",{"_index":1034,"title":{},"body":{"components/LoginComponent.html":{}}}],["chart.js",{"_index":1485,"title":{},"body":{"dependencies.html":{}}}],["checks",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":39,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{}}}],["classlist.js",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["clone",{"_index":47,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["cloned",{"_index":57,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["clonedrequest",{"_index":52,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["closable",{"_index":1556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["cluster_appmodule",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_providers",{"_index":228,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_coremodule",{"_index":453,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_declarations",{"_index":454,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_exports",{"_index":455,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_coremodule_providers",{"_index":456,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["cluster_headermodule",{"_index":603,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_headermodule_declarations",{"_index":604,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_headermodule_exports",{"_index":606,"title":{},"body":{"modules/HeaderModule.html":{},"index.html":{}}}],["cluster_headermodule_imports",{"_index":605,"title":{},"body":{"modules/HeaderModule.html":{}}}],["cluster_helpdialogmodule",{"_index":665,"title":{},"body":{"modules/HelpDialogModule.html":{},"index.html":{}}}],["cluster_helpdialogmodule_declarations",{"_index":666,"title":{},"body":{"modules/HelpDialogModule.html":{},"index.html":{}}}],["cluster_helpdialogmodule_exports",{"_index":667,"title":{},"body":{"modules/HelpDialogModule.html":{},"index.html":{}}}],["cluster_homemodule",{"_index":676,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_homemodule_declarations",{"_index":677,"title":{},"body":{"modules/HomeModule.html":{},"index.html":{}}}],["cluster_imprintmodule",{"_index":749,"title":{},"body":{"modules/ImprintModule.html":{},"index.html":{}}}],["cluster_imprintmodule_declarations",{"_index":750,"title":{},"body":{"modules/ImprintModule.html":{},"index.html":{}}}],["cluster_imprintmodule_exports",{"_index":751,"title":{},"body":{"modules/ImprintModule.html":{},"index.html":{}}}],["cluster_loggingmodule",{"_index":968,"title":{},"body":{"modules/LoggingModule.html":{},"index.html":{}}}],["cluster_loggingmodule_declarations",{"_index":969,"title":{},"body":{"modules/LoggingModule.html":{},"index.html":{}}}],["cluster_loginmodule",{"_index":1049,"title":{},"body":{"modules/LoginModule.html":{},"index.html":{}}}],["cluster_loginmodule_declarations",{"_index":1050,"title":{},"body":{"modules/LoginModule.html":{},"index.html":{}}}],["cluster_loginmodule_exports",{"_index":1051,"title":{},"body":{"modules/LoginModule.html":{},"index.html":{}}}],["cluster_navigationmodule",{"_index":1114,"title":{},"body":{"modules/NavigationModule.html":{},"index.html":{}}}],["cluster_navigationmodule_declarations",{"_index":1115,"title":{},"body":{"modules/NavigationModule.html":{},"index.html":{}}}],["cluster_navigationmodule_exports",{"_index":1116,"title":{},"body":{"modules/NavigationModule.html":{},"index.html":{}}}],["cluster_pipemodule",{"_index":1126,"title":{},"body":{"modules/PipeModule.html":{},"index.html":{}}}],["cluster_pipemodule_declarations",{"_index":1127,"title":{},"body":{"modules/PipeModule.html":{},"index.html":{}}}],["cluster_pipemodule_exports",{"_index":1128,"title":{},"body":{"modules/PipeModule.html":{},"index.html":{}}}],["cluster_privacypolicymodule",{"_index":1187,"title":{},"body":{"modules/PrivacyPolicyModule.html":{},"index.html":{}}}],["cluster_privacypolicymodule_declarations",{"_index":1188,"title":{},"body":{"modules/PrivacyPolicyModule.html":{},"index.html":{}}}],["cluster_privacypolicymodule_exports",{"_index":1189,"title":{},"body":{"modules/PrivacyPolicyModule.html":{},"index.html":{}}}],["cluster_toastmessagemodule",{"_index":1249,"title":{},"body":{"modules/ToastMessageModule.html":{},"index.html":{}}}],["cluster_toastmessagemodule_declarations",{"_index":1250,"title":{},"body":{"modules/ToastMessageModule.html":{},"index.html":{}}}],["cluster_toastmessagemodule_exports",{"_index":1251,"title":{},"body":{"modules/ToastMessageModule.html":{},"index.html":{}}}],["cluster_usersettingsmodule",{"_index":1422,"title":{},"body":{"modules/UsersettingsModule.html":{},"index.html":{}}}],["cluster_usersettingsmodule_declarations",{"_index":1423,"title":{},"body":{"modules/UsersettingsModule.html":{},"index.html":{}}}],["cluster_usersettingsmodule_imports",{"_index":1424,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["col.label",{"_index":966,"title":{},"body":{"components/LoggingComponent.html":{}}}],["color",{"_index":578,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/NavigationComponent.html":{}}}],["command",{"_index":919,"title":{},"body":{"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["commonmodule",{"_index":463,"title":{},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{}}}],["compodoc/compodoc",{"_index":1475,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":149,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["components",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"index.html":{}}}],["confirmation",{"_index":1165,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["connection",{"_index":467,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"coverage.html":{}}}],["consent",{"_index":1175,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["console.log('sending",{"_index":339,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log('sw",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":44,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["constructor(apiservice",{"_index":331,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/LoggingService.html":{},"injectables/UserService.html":{}}}],["constructor(appservice",{"_index":1271,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["constructor(auth",{"_index":383,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["constructor(authservice",{"_index":394,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["constructor(dateservice",{"_index":1328,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["constructor(http",{"_index":74,"title":{},"body":{"injectables/ApiService.html":{}}}],["constructor(injector",{"_index":527,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["constructor(languageconfig",{"_index":544,"title":{},"body":{"components/HeaderComponent.html":{}}}],["constructor(localstorageservice",{"_index":498,"title":{},"body":{"injectables/DateService.html":{}}}],["constructor(loggingservice",{"_index":859,"title":{},"body":{"components/LoggingComponent.html":{}}}],["constructor(private",{"_index":41,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/RouternavigationService.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{}}}],["constructor(public",{"_index":388,"title":{},"body":{"guards/AuthGuardService.html":{},"components/HeaderComponent.html":{}}}],["constructor(router",{"_index":1198,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["constructor(swupdate",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(templateref",{"_index":1217,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["constructor(toastmessageservice",{"_index":351,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["constructor(translate",{"_index":11,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/LanguageConfig.html":{},"components/NavigationComponent.html":{}}}],["constructor(validationerrorhandler",{"_index":514,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["contenttypejson",{"_index":104,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["contenttypejson).pipe",{"_index":132,"title":{},"body":{"injectables/ApiService.html":{}}}],["context",{"_index":1465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contextmenumodule",{"_index":971,"title":{},"body":{"modules/LoggingModule.html":{}}}],["core",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["core/app",{"_index":273,"title":{},"body":{"modules/AppModule.html":{}}}],["core/error",{"_index":277,"title":{},"body":{"modules/AppModule.html":{}}}],["core/language.config",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["core/models/enum/date",{"_index":1358,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["core/models/enum/permission.enum",{"_index":1081,"title":{},"body":{"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["core/models/enum/toast",{"_index":1264,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["core/models/log",{"_index":891,"title":{},"body":{"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["core/models/log.model",{"_index":335,"title":{},"body":{"injectables/AppService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["core/models/permission.model",{"_index":1295,"title":{},"body":{"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["core/models/primeng",{"_index":559,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{}}}],["core/models/user.model",{"_index":1296,"title":{},"body":{"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["core/pipes/pipe.module",{"_index":979,"title":{},"body":{"modules/LoggingModule.html":{},"modules/UsersettingsModule.html":{}}}],["core/security/http",{"_index":283,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/api.service",{"_index":336,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggingService.html":{},"injectables/UserService.html":{}}}],["core/services/auth",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["core/services/auth.service",{"_index":561,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["core/services/date.service",{"_index":1359,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["core/services/local",{"_index":893,"title":{},"body":{"components/LoggingComponent.html":{}}}],["core/services/routernavigation.service",{"_index":1026,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["core/services/session",{"_index":894,"title":{},"body":{"components/LoggingComponent.html":{}}}],["coremodule",{"_index":230,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["coverage",{"_index":1432,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createlog",{"_index":1447,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createlog(error",{"_index":1554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtoasterror",{"_index":1448,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtoasterror(error",{"_index":1555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtranslationlog",{"_index":1449,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslationlog(params",{"_index":1557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["curr.isocode",{"_index":801,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["current",{"_index":756,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["customdate",{"_index":478,"title":{},"body":{"pipes/CustomDatePipe.html":{},"components/LoggingComponent.html":{},"modules/PipeModule.html":{}}}],["customdatepipe",{"_index":475,"title":{"pipes/CustomDatePipe.html":{}},"body":{"pipes/CustomDatePipe.html":{},"modules/PipeModule.html":{},"coverage.html":{},"index.html":{}}}],["cyclic",{"_index":110,"title":{},"body":{"injectables/ApiService.html":{}}}],["d",{"_index":1524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["data",{"_index":1008,"title":{},"body":{"components/LoginComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["date",{"_index":691,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/SessionStorageService.html":{}}}],["date.now",{"_index":443,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["dateformat",{"_index":502,"title":{},"body":{"injectables/DateService.html":{},"components/UsersettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["dateformat.short",{"_index":511,"title":{},"body":{"injectables/DateService.html":{}}}],["dateformats",{"_index":1309,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["dateformats.push",{"_index":1364,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["datepipe",{"_index":483,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["dateservice",{"_index":486,"title":{"injectables/DateService.html":{}},"body":{"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["de",{"_index":781,"title":{},"body":{"injectables/LanguageConfig.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["deep",{"_index":584,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["default",{"_index":21,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavigationComponent.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["defaulterrorhandler",{"_index":76,"title":{"injectables/DefaultErrorHandler.html":{}},"body":{"injectables/ApiService.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["defaultlanguage",{"_index":757,"title":{},"body":{"injectables/LanguageConfig.html":{},"injectables/TranslateErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultlanguage.isocode",{"_index":1277,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["defined",{"_index":13,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["dependencies",{"_index":219,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":111,"title":{},"body":{"injectables/ApiService.html":{}}}],["deps",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":745,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["detail",{"_index":144,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{},"miscellaneous/functions.html":{}}}],["dialog",{"_index":654,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["dialog'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["dialog.component",{"_index":670,"title":{},"body":{"modules/HelpDialogModule.html":{}}}],["dialog.component.html",{"_index":656,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["dialog.component.scss",{"_index":655,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["dialog.component.ts",{"_index":653,"title":{},"body":{"components/HelpDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:13",{"_index":659,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["dialog.component.ts:9",{"_index":658,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["dialog.module.ts",{"_index":668,"title":{},"body":{"modules/HelpDialogModule.html":{}}}],["dialog/help",{"_index":652,"title":{},"body":{"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"coverage.html":{}}}],["dialogmodule",{"_index":669,"title":{},"body":{"modules/HelpDialogModule.html":{},"modules/LoggingModule.html":{},"modules/UsersettingsModule.html":{}}}],["dialogvisible",{"_index":657,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["directive",{"_index":184,"title":{"directives/SecuredDirective.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["directives",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["disableusernameifdisabledflagtrue",{"_index":995,"title":{},"body":{"components/LoginComponent.html":{}}}],["disclaimer",{"_index":1180,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["document.location.reload",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":1433,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["dropdown",{"_index":586,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dropdownmodule",{"_index":611,"title":{},"body":{"modules/HeaderModule.html":{},"modules/UsersettingsModule.html":{}}}],["dynamic",{"_index":1474,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":819,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["ease",{"_index":644,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["edit",{"_index":1090,"title":{},"body":{"components/NavigationComponent.html":{}}}],["eeee",{"_index":1531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["element",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["emailaddress",{"_index":702,"title":{},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"components/UsersettingsComponent.html":{}}}],["emit",{"_index":1257,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["emiterror",{"_index":1258,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["emitlogin",{"_index":1057,"title":{},"body":{"injectables/LoginService.html":{}}}],["emitsuccess",{"_index":1259,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["emittoastcacheddata",{"_index":71,"title":{},"body":{"injectables/ApiService.html":{}}}],["en",{"_index":779,"title":{},"body":{"injectables/LanguageConfig.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"components/UsersettingsComponent.html":{}}}],["enableusernameifdisabled",{"_index":996,"title":{},"body":{"components/LoginComponent.html":{}}}],["encryption",{"_index":1158,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["enum/permission.enum",{"_index":713,"title":{},"body":{"interfaces/IJWT.html":{}}}],["enumerations",{"_index":1511,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":90,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.base_href",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.production",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.show_errors",{"_index":371,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["environments/environment",{"_index":91,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["erasure",{"_index":1169,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["error",{"_index":95,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["error.cached.detail",{"_index":145,"title":{},"body":{"injectables/ApiService.html":{}}}],["error.cached.summary",{"_index":142,"title":{},"body":{"injectables/ApiService.html":{}}}],["error.handler",{"_index":97,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{}}}],["error.handler.ts",{"_index":512,"title":{},"body":{"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["error.handler.ts:10",{"_index":530,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error.handler.ts:13",{"_index":1275,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["error.handler.ts:14",{"_index":1062,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["error.handler.ts:15",{"_index":516,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["error.handler.ts:22",{"_index":1065,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["error.handler.ts:26",{"_index":1064,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["error.handler.ts:35",{"_index":517,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["error.handler.ts:39",{"_index":1063,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["error.handler.ts:43",{"_index":518,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["error.handler.ts:6",{"_index":528,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["error.handler.ts:9",{"_index":1272,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["error.status",{"_index":365,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["errorhandler",{"_index":117,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{}}}],["errorhandler.handle(error",{"_index":129,"title":{},"body":{"injectables/ApiService.html":{}}}],["errormessage",{"_index":1323,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["event",{"_index":571,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{}}}],["event.collapsed",{"_index":961,"title":{},"body":{"components/LoggingComponent.html":{}}}],["event.value",{"_index":574,"title":{},"body":{"components/HeaderComponent.html":{},"components/UsersettingsComponent.html":{}}}],["eventemitter",{"_index":775,"title":{},"body":{"injectables/LanguageConfig.html":{},"injectables/LoginService.html":{},"injectables/ToastMessageService.html":{}}}],["exception",{"_index":823,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["exception.message",{"_index":825,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["exception.tostring",{"_index":826,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["expiresat",{"_index":711,"title":{},"body":{"interfaces/IJWT.html":{}}}],["export",{"_index":38,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{}}}],["exports",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["extends",{"_index":489,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["failed",{"_index":343,"title":{},"body":{"injectables/AppService.html":{}}}],["false",{"_index":391,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":569,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IPrimeNgBase.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{}}}],["fieldsetmodule",{"_index":972,"title":{},"body":{"modules/LoggingModule.html":{},"modules/UsersettingsModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["filter",{"_index":905,"title":{},"body":{"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["filter.model",{"_index":892,"title":{},"body":{"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["filter.model.ts",{"_index":719,"title":{},"body":{"interfaces/ILogFilter.html":{},"coverage.html":{}}}],["filterdialogvisible",{"_index":832,"title":{},"body":{"components/LoggingComponent.html":{}}}],["filterlevelcollapsed",{"_index":833,"title":{},"body":{"components/LoggingComponent.html":{}}}],["filterlevelcollapsedevent",{"_index":834,"title":{},"body":{"components/LoggingComponent.html":{}}}],["filterseencollapsed",{"_index":835,"title":{},"body":{"components/LoggingComponent.html":{}}}],["filterseencollapsedevent",{"_index":836,"title":{},"body":{"components/LoggingComponent.html":{}}}],["fixed",{"_index":661,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["focus",{"_index":1108,"title":{},"body":{"components/NavigationComponent.html":{}}}],["font",{"_index":594,"title":{},"body":{"components/HeaderComponent.html":{}}}],["form",{"_index":1161,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["format",{"_index":509,"title":{},"body":{"injectables/DateService.html":{}}}],["format.enum",{"_index":505,"title":{},"body":{"injectables/DateService.html":{},"components/UsersettingsComponent.html":{}}}],["format.enum.ts",{"_index":1513,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["formattedmessage",{"_index":692,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["formbuilder",{"_index":1003,"title":{},"body":{"components/LoginComponent.html":{}}}],["formgroup",{"_index":1022,"title":{},"body":{"components/LoginComponent.html":{}}}],["formsmodule",{"_index":608,"title":{},"body":{"modules/HeaderModule.html":{},"modules/LoggingModule.html":{},"modules/UsersettingsModule.html":{}}}],["found",{"_index":469,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"coverage.html":{}}}],["fromlocalstorage",{"_index":758,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["full",{"_index":1530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fullcalendar/core",{"_index":1477,"title":{},"body":{"dependencies.html":{}}}],["fullcalendar/daygrid",{"_index":1479,"title":{},"body":{"dependencies.html":{}}}],["fullcalendar/interaction",{"_index":1480,"title":{},"body":{"dependencies.html":{}}}],["fullcalendar/timegrid",{"_index":1481,"title":{},"body":{"dependencies.html":{}}}],["fulldate",{"_index":1536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fulltime",{"_index":1540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["function",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["functions",{"_index":1549,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["general.translation",{"_index":744,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["generatemessage",{"_index":349,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["generatemessage(error",{"_index":354,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["generator.namespace",{"_index":364,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["generator.namespace.ts",{"_index":1446,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getall",{"_index":72,"title":{},"body":{"injectables/ApiService.html":{},"injectables/UserService.html":{}}}],["getalllevels",{"_index":982,"title":{},"body":{"injectables/LoggingService.html":{}}}],["getallpermissions",{"_index":1283,"title":{},"body":{"injectables/UserService.html":{}}}],["getbrowserlanguage",{"_index":759,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["getformat",{"_index":495,"title":{},"body":{"injectables/DateService.html":{}}}],["getfromlist",{"_index":760,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["getlevels",{"_index":837,"title":{},"body":{"components/LoggingComponent.html":{}}}],["getlogs",{"_index":983,"title":{},"body":{"injectables/LoggingService.html":{}}}],["getme",{"_index":1284,"title":{},"body":{"injectables/UserService.html":{}}}],["gettokenheadername",{"_index":407,"title":{},"body":{"injectables/AuthService.html":{}}}],["gettokenvalue",{"_index":408,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusername",{"_index":409,"title":{},"body":{"injectables/AuthService.html":{}}}],["getvalue",{"_index":804,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["globalerrorhandler",{"_index":276,"title":{"injectables/GlobalErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["graph",{"_index":1567,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":376,"title":{"guards/AuthGuardService.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["guard.service",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["guard.service.ts",{"_index":379,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["guard.service.ts:7",{"_index":385,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["guards",{"_index":377,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["h:mm",{"_index":1521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["h:mm:ss",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["handle",{"_index":60,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["handle(error",{"_index":358,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["handle(params",{"_index":1273,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["handleerror",{"_index":526,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handleerror(error",{"_index":529,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["handler",{"_index":523,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["handler.handle(error",{"_index":525,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["handler.matches(error",{"_index":524,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["handlers",{"_index":513,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["handlers/auth",{"_index":346,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"modules/CoreModule.html":{},"coverage.html":{}}}],["handlers/default",{"_index":96,"title":{},"body":{"injectables/ApiService.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"coverage.html":{}}}],["handlers/global",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"injectables/GlobalErrorHandler.html":{},"coverage.html":{}}}],["handlers/i",{"_index":99,"title":{},"body":{"injectables/ApiService.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"coverage.html":{}}}],["handlers/log",{"_index":1445,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["handlers/method",{"_index":464,"title":{},"body":{"modules/CoreModule.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"coverage.html":{}}}],["handlers/no",{"_index":466,"title":{},"body":{"modules/CoreModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"coverage.html":{}}}],["handlers/not",{"_index":468,"title":{},"body":{"modules/CoreModule.html":{},"injectables/NotFoundErrorHandler.html":{},"coverage.html":{}}}],["handlers/server",{"_index":470,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ServerSideErrorHandler.html":{},"coverage.html":{}}}],["handlers/translate",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"injectables/TranslateErrorHandler.html":{},"coverage.html":{}}}],["handlers/validation",{"_index":472,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["hasanypermission",{"_index":410,"title":{},"body":{"injectables/AuthService.html":{}}}],["haspermissionusermanagement",{"_index":1310,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["header",{"_index":51,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["header'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["header.component",{"_index":616,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":537,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":536,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headeranimationstate",{"_index":622,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["headercomponent",{"_index":188,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["headermodule",{"_index":231,"title":{"modules/HeaderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["headername",{"_index":399,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/IJWT.html":{}}}],["headers",{"_index":105,"title":{},"body":{"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{},"miscellaneous/variables.html":{}}}],["headertitlecomponent",{"_index":190,"title":{"components/HeaderTitleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["help",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["help.doesntexist",{"_index":660,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["helpdialogcomponent",{"_index":192,"title":{"components/HelpDialogComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["helpdialogmodule",{"_index":232,"title":{"modules/HelpDialogModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HelpDialogModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["highlight",{"_index":590,"title":{},"body":{"components/HeaderComponent.html":{}}}],["home",{"_index":323,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{},"components/NavigationComponent.html":{}}}],["home'},{'name",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["home.component",{"_index":679,"title":{},"body":{"modules/HomeModule.html":{}}}],["home.component.html",{"_index":673,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.scss",{"_index":672,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":315,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":195,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["homemodule",{"_index":233,"title":{"modules/HomeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HomeModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["homenavigate",{"_index":1192,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["host",{"_index":582,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["html",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["http",{"_index":79,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["http://localhost:8181/lifemanagement/api",{"_index":1586,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":1587,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":75,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":355,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["httpevent",{"_index":25,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":26,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["httpheaders",{"_index":83,"title":{},"body":{"injectables/ApiService.html":{}}}],["httpheaders({'content",{"_index":106,"title":{},"body":{"injectables/ApiService.html":{},"miscellaneous/variables.html":{}}}],["httpinterceptor",{"_index":27,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["httpinterceptorproviders",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpparams",{"_index":84,"title":{},"body":{"injectables/ApiService.html":{}}}],["httprequest",{"_index":28,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["https://michibaum.ch/lifemanagement/api",{"_index":1582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":916,"title":{},"body":{"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["id",{"_index":693,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/ILog.html":{},"interfaces/IPermission.html":{},"interfaces/IUser.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/UsersettingsComponent.html":{}}}],["identifier",{"_index":1434,"title":{},"body":{"coverage.html":{}}}],["iexportlog",{"_index":334,"title":{"interfaces/IExportLog.html":{}},"body":{"injectables/AppService.html":{},"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["iexportuser",{"_index":700,"title":{"interfaces/IExportUser.html":{}},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["ihttperrorresponsehandler",{"_index":98,"title":{"interfaces/IHttpErrorResponseHandler.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["ijwt",{"_index":416,"title":{"interfaces/IJWT.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IJWT.html":{},"coverage.html":{}}}],["ilanguage",{"_index":714,"title":{"interfaces/ILanguage.html":{}},"body":{"interfaces/ILanguage.html":{},"injectables/LanguageConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ilog",{"_index":699,"title":{"interfaces/ILog.html":{}},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"coverage.html":{}}}],["ilogfilter",{"_index":717,"title":{"interfaces/ILogFilter.html":{}},"body":{"interfaces/ILogFilter.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"coverage.html":{}}}],["implements",{"_index":40,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"pipes/CustomDatePipe.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["import",{"_index":24,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{}}}],["important",{"_index":592,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["imports",{"_index":246,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{}}}],["impress.contact",{"_index":728,"title":{},"body":{"components/ImprintComponent.html":{}}}],["impress.copyrights",{"_index":742,"title":{},"body":{"components/ImprintComponent.html":{}}}],["impress.disclaimer",{"_index":736,"title":{},"body":{"components/ImprintComponent.html":{}}}],["impress.email",{"_index":734,"title":{},"body":{"components/ImprintComponent.html":{}}}],["impress.source",{"_index":743,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint",{"_index":326,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ImprintComponent.html":{}}}],["imprint'},{'name",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["imprint.component",{"_index":754,"title":{},"body":{"modules/ImprintModule.html":{}}}],["imprint.component.html",{"_index":725,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint.component.scss",{"_index":724,"title":{},"body":{"components/ImprintComponent.html":{}}}],["imprint/imprint.component",{"_index":316,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imprintcomponent",{"_index":197,"title":{"components/ImprintComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["imprintmodule",{"_index":234,"title":{"modules/ImprintModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ImprintModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["imprintnavigate",{"_index":1193,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/enumerations.html":{}}}],["information",{"_index":1146,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["initcols",{"_index":838,"title":{},"body":{"components/LoggingComponent.html":{}}}],["initdateformats",{"_index":1311,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["initfromlocalstorage",{"_index":839,"title":{},"body":{"components/LoggingComponent.html":{}}}],["initializer",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["initlanguages",{"_index":538,"title":{},"body":{"components/HeaderComponent.html":{}}}],["initlogcontextmenuitems",{"_index":840,"title":{},"body":{"components/LoggingComponent.html":{}}}],["initselecteddateformat",{"_index":1312,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["initselectedlanguage",{"_index":539,"title":{},"body":{"components/HeaderComponent.html":{}}}],["injectable",{"_index":30,"title":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"injectables/ValidationErrorHandler.html":{}},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"injectables/ValidationErrorHandler.html":{},"index.html":{}}}],["injector",{"_index":352,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["input",{"_index":1024,"title":{},"body":{"components/LoginComponent.html":{},"directives/SecuredDirective.html":{}}}],["inputgroup",{"_index":1417,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["inputs",{"_index":999,"title":{},"body":{"components/LoginComponent.html":{},"directives/SecuredDirective.html":{}}}],["inputswitchmodule",{"_index":973,"title":{},"body":{"modules/LoggingModule.html":{}}}],["inputtextmodule",{"_index":1054,"title":{},"body":{"modules/LoginModule.html":{},"modules/UsersettingsModule.html":{}}}],["instantiate",{"_index":109,"title":{},"body":{"injectables/ApiService.html":{}}}],["instead",{"_index":58,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["intercept",{"_index":9,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["intercept(req",{"_index":396,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":0,"title":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":2,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{}}}],["interceptors.ts",{"_index":1456,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":680,"title":{"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{}},"body":{"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["interfaces",{"_index":681,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"index.html":{}}}],["ipermission",{"_index":705,"title":{"interfaces/IPermission.html":{}},"body":{"interfaces/IExportUser.html":{},"interfaces/IPermission.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["iprimengbase",{"_index":550,"title":{"interfaces/IPrimeNgBase.html":{}},"body":{"components/HeaderComponent.html":{},"interfaces/IPrimeNgBase.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["isloggedin",{"_index":411,"title":{},"body":{"injectables/AuthService.html":{}}}],["isocode",{"_index":716,"title":{},"body":{"interfaces/ILanguage.html":{},"injectables/LanguageConfig.html":{},"miscellaneous/variables.html":{}}}],["item.label",{"_index":576,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoggingComponent.html":{},"components/UsersettingsComponent.html":{}}}],["item.ui",{"_index":589,"title":{},"body":{"components/HeaderComponent.html":{}}}],["items",{"_index":588,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iuser",{"_index":707,"title":{"interfaces/IUser.html":{}},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["js",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["json.parse(json.stringify(user",{"_index":1380,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["json.parse(this.sessionstorageservice.getvalue('jwt",{"_index":433,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(authresult",{"_index":441,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(x",{"_index":123,"title":{},"body":{"injectables/ApiService.html":{}}}],["key",{"_index":816,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["label",{"_index":567,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/IPrimeNgBase.html":{},"components/LoggingComponent.html":{},"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["lang.isocode",{"_index":570,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lang.name",{"_index":568,"title":{},"body":{"components/HeaderComponent.html":{}}}],["language",{"_index":55,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/LanguageConfig.html":{},"injectables/TranslateErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["language.config",{"_index":485,"title":{},"body":{"pipes/CustomDatePipe.html":{},"injectables/TranslateErrorHandler.html":{}}}],["language.english",{"_index":778,"title":{},"body":{"injectables/LanguageConfig.html":{},"miscellaneous/variables.html":{}}}],["language.german",{"_index":780,"title":{},"body":{"injectables/LanguageConfig.html":{},"miscellaneous/variables.html":{}}}],["language.isocode",{"_index":787,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["languagechanged",{"_index":782,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["languageconfig",{"_index":241,"title":{"injectables/LanguageConfig.html":{}},"body":{"modules/AppModule.html":{},"pipes/CustomDatePipe.html":{},"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"components/NavigationComponent.html":{},"coverage.html":{},"index.html":{}}}],["languageiso",{"_index":770,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["languages",{"_index":540,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lastlogin",{"_index":703,"title":{},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"components/UsersettingsComponent.html":{}}}],["law",{"_index":1178,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["left",{"_index":648,"title":{},"body":{"components/HeaderTitleComponent.html":{},"components/NavigationComponent.html":{}}}],["legend",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["length",{"_index":139,"title":{},"body":{"injectables/ApiService.html":{}}}],["level",{"_index":694,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["levelarray",{"_index":912,"title":{},"body":{"components/LoggingComponent.html":{}}}],["levelarray.map((level",{"_index":914,"title":{},"body":{"components/LoggingComponent.html":{}}}],["levels",{"_index":841,"title":{},"body":{"components/LoggingComponent.html":{}}}],["li1",{"_index":1150,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li2",{"_index":1151,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li3",{"_index":1152,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li4",{"_index":1153,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li5",{"_index":1154,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li6",{"_index":1166,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["li7",{"_index":1167,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["liability",{"_index":737,"title":{},"body":{"components/ImprintComponent.html":{}}}],["life",{"_index":147,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{},"miscellaneous/functions.html":{}}}],["lifemanagement",{"_index":1584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line",{"_index":138,"title":{},"body":{"injectables/ApiService.html":{}}}],["line:max",{"_index":137,"title":{},"body":{"injectables/ApiService.html":{}}}],["link",{"_index":1106,"title":{},"body":{"components/NavigationComponent.html":{}}}],["link.ui",{"_index":1105,"title":{},"body":{"components/NavigationComponent.html":{}}}],["links",{"_index":741,"title":{},"body":{"components/ImprintComponent.html":{}}}],["loader",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadusers",{"_index":1313,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["loadvisibleselectedcolumns",{"_index":842,"title":{},"body":{"components/LoggingComponent.html":{}}}],["local",{"_index":506,"title":{},"body":{"injectables/DateService.html":{}}}],["localede",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["localeen",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage.getitem('languageiso",{"_index":1276,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["localstorage.getitem(json.stringify({path",{"_index":126,"title":{},"body":{"injectables/ApiService.html":{}}}],["localstorage.getitem(localstoragekey",{"_index":821,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(this.localstoragekey",{"_index":798,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["localstorage.removeitem(key",{"_index":822,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(json.stringify({path",{"_index":122,"title":{},"body":{"injectables/ApiService.html":{}}}],["localstorage.setitem(key",{"_index":818,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(this.localstoragekey",{"_index":786,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["localstoragedateformat",{"_index":1366,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["localstoragekey",{"_index":496,"title":{},"body":{"injectables/DateService.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["localstoragekeyvisibleselectedcolumns",{"_index":843,"title":{},"body":{"components/LoggingComponent.html":{}}}],["localstorageservice",{"_index":499,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/DateService.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"coverage.html":{}}}],["localstoragestring",{"_index":945,"title":{},"body":{"components/LoggingComponent.html":{}}}],["localstoragestring.length).split",{"_index":949,"title":{},"body":{"components/LoggingComponent.html":{}}}],["localstoragestring.substring(0",{"_index":948,"title":{},"body":{"components/LoggingComponent.html":{}}}],["localstoragevalue",{"_index":125,"title":{},"body":{"injectables/ApiService.html":{}}}],["log",{"_index":330,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["log.arg0",{"_index":927,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.arg1",{"_index":928,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.arg2",{"_index":929,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.arg3",{"_index":930,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.callerclass",{"_index":932,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.callerfilename",{"_index":931,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.callerline",{"_index":934,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.callermethod",{"_index":933,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.choosecolumns",{"_index":964,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.date",{"_index":922,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.formattedmessage",{"_index":923,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.id",{"_index":921,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.level",{"_index":925,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.loggername",{"_index":924,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.seen",{"_index":935,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.seen).subscribe",{"_index":937,"title":{},"body":{"components/LoggingComponent.html":{}}}],["log.threadname",{"_index":926,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logcontextmenuitems",{"_index":844,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logexception",{"_index":805,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["logfilterdialoghide",{"_index":845,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logfilterdialogshow",{"_index":846,"title":{},"body":{"components/LoggingComponent.html":{}}}],["loggenerator",{"_index":363,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/GlobalErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["loggenerator.createlog(error",{"_index":532,"title":{},"body":{"injectables/GlobalErrorHandler.html":{}}}],["loggenerator.createtoasterror",{"_index":373,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["loggenerator.createtoasterror(error",{"_index":372,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["loggenerator.createtranslationlog(params",{"_index":1278,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["loggername",{"_index":695,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["logging",{"_index":829,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logging'},{'name",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["logging.component",{"_index":980,"title":{},"body":{"modules/LoggingModule.html":{}}}],["logging.component.html",{"_index":831,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logging.component.scss",{"_index":830,"title":{},"body":{"components/LoggingComponent.html":{}}}],["logging.service",{"_index":895,"title":{},"body":{"components/LoggingComponent.html":{}}}],["loggingcomponent",{"_index":199,"title":{"components/LoggingComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingmodule",{"_index":235,"title":{"modules/LoggingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggingModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["loggingservice",{"_index":860,"title":{"injectables/LoggingService.html":{}},"body":{"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"coverage.html":{}}}],["login",{"_index":322,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["login'},{'name",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["login.component",{"_index":1055,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.component.html",{"_index":993,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":992,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.service",{"_index":1027,"title":{},"body":{"components/LoginComponent.html":{}}}],["login/login.component",{"_index":317,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["login/login.module",{"_index":1429,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["login/login.service",{"_index":1082,"title":{},"body":{"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["logincomponent",{"_index":201,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["logindialogwidth",{"_index":1314,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["loginemitter",{"_index":1060,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginform",{"_index":994,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginmodalvisible",{"_index":1315,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["loginmodule",{"_index":236,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["loginname",{"_index":1000,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginnamedisabled",{"_index":1001,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginnavigate",{"_index":1194,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["loginservice",{"_index":1004,"title":{"injectables/LoginService.html":{}},"body":{"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["loglevel",{"_index":813,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.warn",{"_index":827,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["logmanagement",{"_index":325,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["logmanagementnavigate",{"_index":1195,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["logout",{"_index":412,"title":{},"body":{"injectables/AuthService.html":{}}}],["logs",{"_index":847,"title":{},"body":{"components/LoggingComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["logs/logging.component",{"_index":318,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["long",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longdate",{"_index":1535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["longtime",{"_index":1539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["m/d/yy",{"_index":1520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["margin",{"_index":747,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["matches",{"_index":350,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["matches(error",{"_index":360,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["matching",{"_index":65,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":1522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mediumdate",{"_index":1534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mediumtime",{"_index":1538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["menuitem",{"_index":876,"title":{},"body":{"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["menumodule",{"_index":1118,"title":{},"body":{"modules/NavigationModule.html":{}}}],["message",{"_index":85,"title":{},"body":{"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AuthErrorResponseHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["message.component",{"_index":1255,"title":{},"body":{"modules/ToastMessageModule.html":{}}}],["message.component.html",{"_index":1244,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["message.component.scss",{"_index":1243,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["message.component.ts",{"_index":1241,"title":{},"body":{"components/ToastMessageComponent.html":{},"coverage.html":{}}}],["message.component.ts:10",{"_index":1245,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["message.component.ts:21",{"_index":1246,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["message.module.ts",{"_index":1252,"title":{},"body":{"modules/ToastMessageModule.html":{}}}],["message.service",{"_index":94,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["message.service.ts",{"_index":1256,"title":{},"body":{"injectables/ToastMessageService.html":{},"coverage.html":{}}}],["message.service.ts:10",{"_index":1260,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["message.service.ts:14",{"_index":1261,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["message.service.ts:18",{"_index":1263,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["message.service.ts:29",{"_index":1262,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["message/toast",{"_index":93,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["messageservice",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"components/ToastMessageComponent.html":{}}}],["metadata",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"pipes/CustomDatePipe.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["method",{"_index":519,"title":{},"body":{"injectables/DefaultErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["methodnotallowederrorhandler",{"_index":457,"title":{"injectables/MethodNotAllowedErrorHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["methods",{"_index":348,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"pipes/CustomDatePipe.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["middle",{"_index":627,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["min",{"_index":1419,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["miscellaneous",{"_index":1510,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missingtranslationhandler",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"injectables/TranslateErrorHandler.html":{}}}],["missingtranslationhandlerparams",{"_index":1274,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["mmm",{"_index":1523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mmmm",{"_index":1528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["models/enum/date",{"_index":504,"title":{},"body":{"injectables/DateService.html":{}}}],["models/enum/loglevel.enum",{"_index":814,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["models/enum/permission.enum",{"_index":427,"title":{},"body":{"injectables/AuthService.html":{},"directives/SecuredDirective.html":{}}}],["models/enum/toast",{"_index":102,"title":{},"body":{"injectables/ApiService.html":{}}}],["models/jwt.model",{"_index":428,"title":{},"body":{"injectables/AuthService.html":{}}}],["models/language.model",{"_index":777,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["models/log.model",{"_index":815,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{}}}],["module",{"_index":216,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["modules",{"_index":218,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{},"modules.html":{}}}],["multi",{"_index":1577,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multiselectmodule",{"_index":974,"title":{},"body":{"modules/LoggingModule.html":{}}}],["mymodules",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["myuserid",{"_index":1316,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["name",{"_index":17,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/ILanguage.html":{},"interfaces/IPermission.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":1070,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation'},{'name",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["navigation.component",{"_index":1120,"title":{},"body":{"modules/NavigationModule.html":{}}}],["navigation.component.html",{"_index":1072,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation.component.scss",{"_index":1071,"title":{},"body":{"components/NavigationComponent.html":{}}}],["navigation/navigation.module",{"_index":613,"title":{},"body":{"modules/HeaderModule.html":{}}}],["navigationcomponent",{"_index":203,"title":{"components/NavigationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["navigationmodule",{"_index":237,"title":{"modules/NavigationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/NavigationModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["navitems",{"_index":1073,"title":{},"body":{"components/NavigationComponent.html":{}}}],["needed",{"_index":450,"title":{},"body":{"injectables/AuthService.html":{}}}],["needslogin",{"_index":1317,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["new",{"_index":50,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LoginService.html":{},"injectables/ToastMessageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":1318,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["next",{"_index":43,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"interceptors/AuthInterceptor.html":{}}}],["next.handle(cloned",{"_index":404,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next.handle(clonedrequest",{"_index":62,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["next.handle(req",{"_index":63,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["ng",{"_index":583,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["ngmodule",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{}}}],["ngonchanges",{"_index":997,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngonchanges(changes",{"_index":1015,"title":{},"body":{"components/LoginComponent.html":{}}}],["ngoninit",{"_index":543,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["ngx",{"_index":32,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"dependencies.html":{}}}],["noconnectionerrorhandler",{"_index":458,"title":{"injectables/NoConnectionErrorHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["none",{"_index":1111,"title":{},"body":{"components/NavigationComponent.html":{}}}],["notfounderrorhandler",{"_index":459,"title":{"injectables/NotFoundErrorHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["null",{"_index":368,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["number",{"_index":698,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IJWT.html":{},"interfaces/ILog.html":{},"interfaces/IPermission.html":{},"interfaces/IUser.html":{},"injectables/LoggingService.html":{},"components/UsersettingsComponent.html":{}}}],["object",{"_index":1173,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(dateformat",{"_index":1363,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["observable",{"_index":34,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/LoggingService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/UserService.html":{},"injectables/ValidationErrorHandler.html":{}}}],["observableme",{"_index":1368,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["observableme.subscribe((value",{"_index":1370,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["of(json.parse(localstoragevalue",{"_index":128,"title":{},"body":{"injectables/ApiService.html":{}}}],["officer",{"_index":1183,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["onchanges",{"_index":991,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":535,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["onloginsuccess",{"_index":1002,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersettingsComponent.html":{}}}],["optional",{"_index":19,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IPrimeNgBase.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["original",{"_index":59,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["out",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["outline",{"_index":1109,"title":{},"body":{"components/NavigationComponent.html":{}}}],["output",{"_index":776,"title":{},"body":{"injectables/LanguageConfig.html":{},"injectables/LoginService.html":{},"injectables/ToastMessageService.html":{}}}],["overview",{"_index":1558,"title":{"index.html":{}},"body":{"index.html":{}}}],["owned",{"_index":451,"title":{},"body":{"injectables/AuthService.html":{}}}],["owner.address",{"_index":731,"title":{},"body":{"components/ImprintComponent.html":{}}}],["owner.city",{"_index":732,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["owner.country",{"_index":733,"title":{},"body":{"components/ImprintComponent.html":{}}}],["owner.domain",{"_index":1144,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["owner.email",{"_index":1142,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["owner.name",{"_index":730,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["owner.phone",{"_index":1141,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["package",{"_index":1469,"title":{"dependencies.html":{}},"body":{}}],["panel",{"_index":587,"title":{},"body":{"components/HeaderComponent.html":{}}}],["parameters",{"_index":15,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":116,"title":{},"body":{"injectables/ApiService.html":{},"injectables/TranslateErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["params.key",{"_index":1280,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["params}).pipe",{"_index":120,"title":{},"body":{"injectables/ApiService.html":{}}}],["pass",{"_index":56,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["password",{"_index":435,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"components/LoginComponent.html":{},"components/UsersettingsComponent.html":{}}}],["passwordmodule",{"_index":1426,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["path",{"_index":112,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppRoutingModule.html":{}}}],["permission",{"_index":1401,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["permission.id",{"_index":1402,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["permission.model",{"_index":706,"title":{},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{}}}],["permission.name",{"_index":1415,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["permissionenum",{"_index":426,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IJWT.html":{},"components/NavigationComponent.html":{},"directives/SecuredDirective.html":{},"components/UsersettingsComponent.html":{},"miscellaneous/enumerations.html":{}}}],["permissionenum.admin",{"_index":1096,"title":{},"body":{"components/NavigationComponent.html":{}}}],["permissions",{"_index":704,"title":{},"body":{"interfaces/IExportUser.html":{},"interfaces/IJWT.html":{},"interfaces/IUser.html":{},"directives/SecuredDirective.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["permissionsneeded",{"_index":446,"title":{},"body":{"injectables/AuthService.html":{}}}],["permissionsneeded.length",{"_index":447,"title":{},"body":{"injectables/AuthService.html":{}}}],["personal",{"_index":1149,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["pi",{"_index":917,"title":{},"body":{"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["picklistmodule",{"_index":1427,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["pipe",{"_index":474,"title":{"pipes/CustomDatePipe.html":{}},"body":{"pipes/CustomDatePipe.html":{},"coverage.html":{},"index.html":{}}}],["pipemodule",{"_index":978,"title":{"modules/PipeModule.html":{}},"body":{"modules/LoggingModule.html":{},"modules/PipeModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["pipes",{"_index":476,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["pipetransform",{"_index":484,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["policy",{"_index":327,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{}}}],["policy'},{'name",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["policy.component",{"_index":320,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PrivacyPolicyModule.html":{}}}],["policy.component.html",{"_index":1133,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.scss",{"_index":1132,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts",{"_index":1131,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"coverage.html":{}}}],["policy.component.ts:12",{"_index":1135,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.component.ts:8",{"_index":1134,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.contact",{"_index":1160,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.cookies",{"_index":1155,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.copyrights",{"_index":1179,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.general",{"_index":1145,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.last",{"_index":1184,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.modifications",{"_index":1181,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.module.ts",{"_index":1190,"title":{},"body":{"modules/PrivacyPolicyModule.html":{}}}],["policy.privacy",{"_index":1136,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.processing",{"_index":1148,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.questions",{"_index":1182,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.responsible",{"_index":1137,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.rights",{"_index":1162,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.server",{"_index":1159,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.source",{"_index":1186,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy.ssl",{"_index":1156,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["policy/privacy",{"_index":319,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"coverage.html":{}}}],["polyfill",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["portability",{"_index":1172,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["position",{"_index":663,"title":{},"body":{"components/HelpDialogComponent.html":{}}}],["postall",{"_index":73,"title":{},"body":{"injectables/ApiService.html":{}}}],["power",{"_index":1102,"title":{},"body":{"components/NavigationComponent.html":{}}}],["primeflex",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":86,"title":{},"body":{"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/ImprintModule.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"dependencies.html":{}}}],["primeng/button",{"_index":977,"title":{},"body":{"modules/LoggingModule.html":{}}}],["primeng/toast",{"_index":1254,"title":{},"body":{"modules/ToastMessageModule.html":{}}}],["primengbase.value.id",{"_index":1393,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["privacy",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["privacypolicycomponent",{"_index":205,"title":{"components/PrivacyPolicyComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["privacypolicymodule",{"_index":238,"title":{"modules/PrivacyPolicyModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PrivacyPolicyModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["privacypolicynavigate",{"_index":1196,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["private",{"_index":70,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DefaultErrorHandler.html":{},"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["processing",{"_index":1171,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["production",{"_index":1580,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["protection",{"_index":1177,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["provide",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":36,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/LoginService.html":{},"injectables/RouternavigationService.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/UserService.html":{}}}],["provider",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["provider.ts",{"_index":1440,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["public",{"_index":380,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{},"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["pure",{"_index":488,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["quill",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1053,"title":{},"body":{"modules/LoginModule.html":{}}}],["rectification",{"_index":1168,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["refresh",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["registerimmediately",{"_index":301,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localede",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["registerlocaledata(localeen",{"_index":295,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationstrategy",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["reload",{"_index":173,"title":{},"body":{"components/AppComponent.html":{}}}],["remove",{"_index":140,"title":{},"body":{"injectables/ApiService.html":{}}}],["removeitem",{"_index":806,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["replaceuserinusers",{"_index":1324,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["replaceuserinusers(user",{"_index":1332,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["req",{"_index":42,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"interceptors/AuthInterceptor.html":{}}}],["req.clone",{"_index":402,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["req.clone({headers",{"_index":53,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["req.headers.set('accept",{"_index":54,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["req.headers.set(headername",{"_index":403,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request",{"_index":48,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["require",{"_index":1466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1578,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["response.handler",{"_index":100,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["response.handler.ts",{"_index":347,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"coverage.html":{}}}],["response.handler.ts:14",{"_index":353,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["response.handler.ts:22",{"_index":361,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["response.handler.ts:26",{"_index":359,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["response.handler.ts:39",{"_index":356,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["response.handler.ts:5",{"_index":709,"title":{},"body":{"interfaces/IHttpErrorResponseHandler.html":{}}}],["response.handler.ts:6",{"_index":708,"title":{},"body":{"interfaces/IHttpErrorResponseHandler.html":{}}}],["restriction",{"_index":1170,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["result",{"_index":64,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":66,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":61,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["returns",{"_index":357,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"pipes/CustomDatePipe.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["rgba",{"_index":601,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rgba(0,123,255,0",{"_index":1112,"title":{},"body":{"components/NavigationComponent.html":{}}}],["right",{"_index":646,"title":{},"body":{"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{}}}],["root",{"_index":37,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"injectables/LocalStorageService.html":{},"injectables/LoggingService.html":{},"injectables/LoginService.html":{},"injectables/RouternavigationService.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["rotate",{"_index":634,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["rotate(0deg",{"_index":638,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["rotate(10deg",{"_index":641,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["router",{"_index":1199,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["routermodule",{"_index":312,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routernavigation.service",{"_index":387,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["routernavigationservice",{"_index":382,"title":{"injectables/RouternavigationService.html":{}},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"injectables/RouternavigationService.html":{},"coverage.html":{}}}],["routes",{"_index":313,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":311,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["rowdata[col.field",{"_index":967,"title":{},"body":{"components/LoggingComponent.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"injectables/DefaultErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/LoggingService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/UserService.html":{},"injectables/ValidationErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/internal/operators/tap",{"_index":425,"title":{},"body":{"injectables/AuthService.html":{}}}],["rxjs/operators",{"_index":89,"title":{},"body":{"injectables/ApiService.html":{}}}],["save",{"_index":1285,"title":{},"body":{"injectables/UserService.html":{}}}],["save(user",{"_index":1288,"title":{},"body":{"injectables/UserService.html":{}}}],["savepermissions",{"_index":1286,"title":{},"body":{"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["savepermissions(user",{"_index":1290,"title":{},"body":{"injectables/UserService.html":{}}}],["saveuser",{"_index":1325,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["search",{"_index":918,"title":{},"body":{"components/LoggingComponent.html":{}}}],["searchlog.id",{"_index":939,"title":{},"body":{"components/LoggingComponent.html":{}}}],["searchlogs",{"_index":848,"title":{},"body":{"components/LoggingComponent.html":{}}}],["secureddirective",{"_index":213,"title":{"directives/SecuredDirective.html":{}},"body":{"components/AppComponent.html":{},"modules/CoreModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["security/secured.directive",{"_index":473,"title":{},"body":{"modules/CoreModule.html":{}}}],["see_logs",{"_index":1545,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["seen",{"_index":696,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["seeninputswitch",{"_index":849,"title":{},"body":{"components/LoggingComponent.html":{}}}],["selecteddateformat",{"_index":1319,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["selecteddateformat?.label",{"_index":1416,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["selecteditem.label",{"_index":965,"title":{},"body":{"components/LoggingComponent.html":{}}}],["selectedlanguage",{"_index":541,"title":{},"body":{"components/HeaderComponent.html":{}}}],["selectedlevels",{"_index":850,"title":{},"body":{"components/LoggingComponent.html":{}}}],["selectedlog",{"_index":851,"title":{},"body":{"components/LoggingComponent.html":{}}}],["selecteduser",{"_index":1320,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["selectlanguage",{"_index":542,"title":{},"body":{"components/HeaderComponent.html":{}}}],["selector",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["sendloginrequest",{"_index":998,"title":{},"body":{"components/LoginComponent.html":{}}}],["server",{"_index":520,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["serversideerrorhandler",{"_index":460,"title":{"injectables/ServerSideErrorHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["service",{"_index":1242,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["service'},{'name",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["services/auth.service",{"_index":398,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"directives/SecuredDirective.html":{}}}],["services/date.service",{"_index":487,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["serviceworkermodule",{"_index":260,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["session",{"_index":430,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.getitem(localstoragekey",{"_index":1238,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["sessionstorage.removeitem(key",{"_index":1239,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["sessionstorage.setitem(key",{"_index":1237,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["sessionstoragekeyfilterdialogvisible",{"_index":852,"title":{},"body":{"components/LoggingComponent.html":{}}}],["sessionstoragekeyfilterlevelcollapsed",{"_index":853,"title":{},"body":{"components/LoggingComponent.html":{}}}],["sessionstoragekeyfilterseencollapsed",{"_index":854,"title":{},"body":{"components/LoggingComponent.html":{}}}],["sessionstorageservice",{"_index":414,"title":{"injectables/SessionStorageService.html":{}},"body":{"injectables/AuthService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{},"coverage.html":{}}}],["set",{"_index":1224,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["setanypermission(permissions",{"_index":1223,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["setformat",{"_index":497,"title":{},"body":{"injectables/DateService.html":{}}}],["setinitlanguage",{"_index":761,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["setitems",{"_index":1074,"title":{},"body":{"components/NavigationComponent.html":{}}}],["setkeyandvalue",{"_index":807,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["setlanguage",{"_index":762,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["setseen",{"_index":855,"title":{},"body":{"components/LoggingComponent.html":{},"injectables/LoggingService.html":{}}}],["setsession",{"_index":413,"title":{},"body":{"injectables/AuthService.html":{}}}],["severity",{"_index":134,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{},"miscellaneous/functions.html":{}}}],["severity.enum",{"_index":103,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{}}}],["severity.enum.ts",{"_index":1517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shadow",{"_index":597,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["short",{"_index":1519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shortdate",{"_index":1533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["shorttime",{"_index":1537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["show_errors",{"_index":1585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":471,"title":{},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"coverage.html":{}}}],["sidebarmodule",{"_index":612,"title":{},"body":{"modules/HeaderModule.html":{},"modules/NavigationModule.html":{}}}],["sidebarvisible",{"_index":1075,"title":{},"body":{"components/NavigationComponent.html":{}}}],["simplechanges",{"_index":1016,"title":{},"body":{"components/LoginComponent.html":{}}}],["skiplocationchange",{"_index":1208,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["slidemenu",{"_index":1104,"title":{},"body":{"components/NavigationComponent.html":{}}}],["slidemenumodule",{"_index":1119,"title":{},"body":{"modules/NavigationModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"modules/CoreModule.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"components/HomeComponent.html":{},"modules/HomeModule.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"components/ImprintComponent.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PipeModule.html":{},"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{}}}],["spec\\.ts",{"_index":1579,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spot",{"_index":1138,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["src/.../api.service.ts",{"_index":1569,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":1550,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../app.module.ts",{"_index":1552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../date",{"_index":1512,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":1572,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1573,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http",{"_index":1574,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../language.config.ts",{"_index":1571,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../log",{"_index":1551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loglevel.enum.ts",{"_index":1514,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../modules.ts",{"_index":1575,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../permission.enum.ts",{"_index":1515,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../test.ts",{"_index":1570,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../toast",{"_index":1516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":310,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/app.service.ts",{"_index":329,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app/app.service.ts:11",{"_index":333,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/app.service.ts:8",{"_index":332,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app/core/add_language_header.interceptor.ts",{"_index":6,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"coverage.html":{}}}],["src/app/core/add_language_header.interceptor.ts:13",{"_index":23,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["src/app/core/add_language_header.interceptor.ts:9",{"_index":14,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["src/app/core/app",{"_index":1439,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/core.module.ts",{"_index":462,"title":{},"body":{"modules/CoreModule.html":{}}}],["src/app/core/error",{"_index":345,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/language.config.ts",{"_index":755,"title":{},"body":{"injectables/LanguageConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/language.config.ts:24",{"_index":771,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:25",{"_index":769,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:26",{"_index":764,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:27",{"_index":765,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:29",{"_index":763,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:32",{"_index":774,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:40",{"_index":773,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:47",{"_index":772,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:63",{"_index":767,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:68",{"_index":766,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/language.config.ts:75",{"_index":768,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["src/app/core/models/enum/date",{"_index":1518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/enum/loglevel.enum.ts",{"_index":1541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/enum/permission.enum.ts",{"_index":1543,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/enum/toast",{"_index":1547,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/core/models/jwt.model.ts",{"_index":710,"title":{},"body":{"interfaces/IJWT.html":{},"coverage.html":{}}}],["src/app/core/models/language.model.ts",{"_index":715,"title":{},"body":{"interfaces/ILanguage.html":{},"coverage.html":{}}}],["src/app/core/models/log",{"_index":718,"title":{},"body":{"interfaces/ILogFilter.html":{},"coverage.html":{}}}],["src/app/core/models/log.model.ts",{"_index":682,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"coverage.html":{}}}],["src/app/core/models/permission.model.ts",{"_index":720,"title":{},"body":{"interfaces/IPermission.html":{},"coverage.html":{}}}],["src/app/core/models/primeng",{"_index":721,"title":{},"body":{"interfaces/IPrimeNgBase.html":{},"coverage.html":{}}}],["src/app/core/models/user.model.ts",{"_index":701,"title":{},"body":{"interfaces/IExportUser.html":{},"interfaces/IUser.html":{},"coverage.html":{}}}],["src/app/core/pipes/customdate.ts",{"_index":477,"title":{},"body":{"pipes/CustomDatePipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/customdate.ts:16",{"_index":482,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["src/app/core/pipes/pipe.module.ts",{"_index":1129,"title":{},"body":{"modules/PipeModule.html":{}}}],["src/app/core/security/auth.interceptor.ts",{"_index":393,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/core/security/auth.interceptor.ts:11",{"_index":397,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/security/auth.interceptor.ts:7",{"_index":395,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/core/security/http",{"_index":1455,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/security/secured.directive.ts",{"_index":1215,"title":{},"body":{"directives/SecuredDirective.html":{},"coverage.html":{}}}],["src/app/core/security/secured.directive.ts:16",{"_index":1222,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["src/app/core/security/secured.directive.ts:8",{"_index":1221,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["src/app/core/services/api.service.ts",{"_index":69,"title":{},"body":{"injectables/ApiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/api.service.ts:19",{"_index":78,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:27",{"_index":81,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:53",{"_index":82,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/api.service.ts:63",{"_index":80,"title":{},"body":{"injectables/ApiService.html":{}}}],["src/app/core/services/auth",{"_index":378,"title":{},"body":{"guards/AuthGuardService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":405,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:15",{"_index":415,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:25",{"_index":422,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:29",{"_index":424,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:36",{"_index":423,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:42",{"_index":421,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:47",{"_index":417,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:52",{"_index":418,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:57",{"_index":420,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:74",{"_index":419,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/date.service.ts",{"_index":494,"title":{},"body":{"injectables/DateService.html":{},"coverage.html":{}}}],["src/app/core/services/date.service.ts:10",{"_index":500,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:14",{"_index":503,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/date.service.ts:18",{"_index":501,"title":{},"body":{"injectables/DateService.html":{}}}],["src/app/core/services/local",{"_index":802,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/services/routernavigation.service.ts",{"_index":1191,"title":{},"body":{"injectables/RouternavigationService.html":{},"coverage.html":{}}}],["src/app/core/services/routernavigation.service.ts:11",{"_index":1201,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:15",{"_index":1202,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:19",{"_index":1206,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:23",{"_index":1204,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:27",{"_index":1203,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:31",{"_index":1205,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/routernavigation.service.ts:7",{"_index":1200,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["src/app/core/services/session",{"_index":1232,"title":{},"body":{"injectables/SessionStorageService.html":{},"coverage.html":{}}}],["src/app/header/header",{"_index":617,"title":{},"body":{"components/HeaderTitleComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts",{"_index":534,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:14",{"_index":551,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:15",{"_index":545,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:17",{"_index":547,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:19",{"_index":546,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:24",{"_index":548,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:30",{"_index":552,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:36",{"_index":549,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.module.ts",{"_index":607,"title":{},"body":{"modules/HeaderModule.html":{}}}],["src/app/help",{"_index":651,"title":{},"body":{"components/HelpDialogComponent.html":{},"modules/HelpDialogModule.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts",{"_index":671,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:12",{"_index":675,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:8",{"_index":674,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.module.ts",{"_index":678,"title":{},"body":{"modules/HomeModule.html":{}}}],["src/app/imprint/imprint.component.ts",{"_index":723,"title":{},"body":{"components/ImprintComponent.html":{},"coverage.html":{}}}],["src/app/imprint/imprint.component.ts:12",{"_index":727,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/imprint/imprint.component.ts:8",{"_index":726,"title":{},"body":{"components/ImprintComponent.html":{}}}],["src/app/imprint/imprint.module.ts",{"_index":752,"title":{},"body":{"modules/ImprintModule.html":{}}}],["src/app/login/login.component.ts",{"_index":990,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/login/login.component.ts:12",{"_index":1005,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:26",{"_index":1023,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:28",{"_index":1006,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:30",{"_index":1007,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:32",{"_index":1012,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:38",{"_index":1019,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:40",{"_index":1017,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:54",{"_index":1021,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:60",{"_index":1020,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:74",{"_index":1013,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.component.ts:80",{"_index":1014,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/login/login.module.ts",{"_index":1052,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/app/login/login.service.ts",{"_index":1056,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/app/login/login.service.ts:12",{"_index":1059,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/login/login.service.ts:8",{"_index":1058,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/app/logs/logging.component.ts",{"_index":828,"title":{},"body":{"components/LoggingComponent.html":{},"coverage.html":{}}}],["src/app/logs/logging.component.ts:103",{"_index":887,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:114",{"_index":889,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:120",{"_index":873,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:132",{"_index":870,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:138",{"_index":865,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:142",{"_index":867,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:146",{"_index":878,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:150",{"_index":879,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:19",{"_index":880,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:21",{"_index":888,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:22",{"_index":890,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:23",{"_index":884,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:25",{"_index":872,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:26",{"_index":883,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:28",{"_index":875,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:29",{"_index":882,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:31",{"_index":877,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:33",{"_index":863,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:34",{"_index":885,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:36",{"_index":864,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:37",{"_index":886,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:39",{"_index":866,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:40",{"_index":861,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:54",{"_index":862,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:62",{"_index":881,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:67",{"_index":868,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:77",{"_index":871,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.component.ts:83",{"_index":869,"title":{},"body":{"components/LoggingComponent.html":{}}}],["src/app/logs/logging.module.ts",{"_index":970,"title":{},"body":{"modules/LoggingModule.html":{}}}],["src/app/logs/logging.service.ts",{"_index":981,"title":{},"body":{"injectables/LoggingService.html":{},"coverage.html":{}}}],["src/app/logs/logging.service.ts:10",{"_index":984,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/logs/logging.service.ts:13",{"_index":986,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/logs/logging.service.ts:17",{"_index":985,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/logs/logging.service.ts:21",{"_index":987,"title":{},"body":{"injectables/LoggingService.html":{}}}],["src/app/modules.ts",{"_index":1460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/navigation/navigation.component.ts",{"_index":1069,"title":{},"body":{"components/NavigationComponent.html":{},"coverage.html":{}}}],["src/app/navigation/navigation.component.ts:17",{"_index":1079,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:18",{"_index":1076,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:22",{"_index":1078,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:36",{"_index":1077,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.component.ts:40",{"_index":1080,"title":{},"body":{"components/NavigationComponent.html":{}}}],["src/app/navigation/navigation.module.ts",{"_index":1117,"title":{},"body":{"modules/NavigationModule.html":{}}}],["src/app/privacy",{"_index":1130,"title":{},"body":{"components/PrivacyPolicyComponent.html":{},"modules/PrivacyPolicyModule.html":{},"coverage.html":{}}}],["src/app/toast",{"_index":1240,"title":{},"body":{"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"injectables/ToastMessageService.html":{},"coverage.html":{}}}],["src/app/usersettings/user.service.ts",{"_index":1282,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/usersettings/user.service.ts:10",{"_index":1287,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/user.service.ts:15",{"_index":1292,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/user.service.ts:19",{"_index":1293,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/user.service.ts:23",{"_index":1294,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/user.service.ts:27",{"_index":1289,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/user.service.ts:31",{"_index":1291,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/usersettings/usersettings.component.ts",{"_index":1303,"title":{},"body":{"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["src/app/usersettings/usersettings.component.ts:100",{"_index":1338,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:111",{"_index":1335,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:125",{"_index":1333,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:134",{"_index":1356,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:146",{"_index":1352,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:155",{"_index":1336,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:162",{"_index":1330,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:169",{"_index":1334,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:21",{"_index":1343,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:22",{"_index":1354,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:24",{"_index":1344,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:25",{"_index":1357,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:26",{"_index":1355,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:27",{"_index":1351,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:28",{"_index":1340,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:30",{"_index":1341,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:31",{"_index":1353,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:33",{"_index":1350,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:34",{"_index":1349,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:35",{"_index":1329,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:39",{"_index":1339,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:50",{"_index":1331,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:58",{"_index":1345,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:71",{"_index":1342,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:75",{"_index":1346,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.component.ts:86",{"_index":1347,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["src/app/usersettings/usersettings.module.ts",{"_index":1425,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":1462,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/styles",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["src/test.ts",{"_index":1464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["state",{"_index":554,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{}}}],["state('left",{"_index":630,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["state('middle",{"_index":636,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["state('right",{"_index":639,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["statements",{"_index":1435,"title":{},"body":{"coverage.html":{}}}],["storage.service",{"_index":431,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DateService.html":{},"components/LoggingComponent.html":{}}}],["storage.service.ts",{"_index":803,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:13",{"_index":1236,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["storage.service.ts:14",{"_index":812,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:21",{"_index":1233,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["storage.service.ts:22",{"_index":809,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:30",{"_index":1235,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["storage.service.ts:31",{"_index":811,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:34",{"_index":1234,"title":{},"body":{"injectables/SessionStorageService.html":{}}}],["storage.service.ts:39",{"_index":810,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:9",{"_index":808,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["string",{"_index":113,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{},"injectables/DateService.html":{},"components/HeaderTitleComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"components/UsersettingsComponent.html":{}}}],["stringarray",{"_index":947,"title":{},"body":{"components/LoggingComponent.html":{}}}],["stringarray.map((value",{"_index":950,"title":{},"body":{"components/LoggingComponent.html":{}}}],["style",{"_index":555,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{}}}],["style({transform",{"_index":631,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["styles",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["styleurls",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["subjects.right",{"_index":1164,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["subjects.title",{"_index":1163,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["subscribe",{"_index":1042,"title":{},"body":{"components/LoginComponent.html":{}}}],["success",{"_index":341,"title":{},"body":{"injectables/AppService.html":{},"miscellaneous/enumerations.html":{}}}],["successmessage",{"_index":1326,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["summary",{"_index":141,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{},"miscellaneous/functions.html":{}}}],["super(languageconfig.current.isocode",{"_index":490,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["super.transform(value",{"_index":491,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["support",{"_index":1564,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1565,"title":{},"body":{"modules.html":{}}}],["swupdate",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["table",{"_index":1468,"title":{},"body":{"coverage.html":{}}}],["tablecols",{"_index":856,"title":{},"body":{"components/LoggingComponent.html":{}}}],["tablemodule",{"_index":975,"title":{},"body":{"modules/LoggingModule.html":{}}}],["tableobject",{"_index":951,"title":{},"body":{"components/LoggingComponent.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1467,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":88,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthService.html":{}}}],["template",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["templateref",{"_index":1218,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["templateurl",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["text",{"_index":579,"title":{},"body":{"components/HeaderComponent.html":{},"components/NavigationComponent.html":{}}}],["this.activetoken",{"_index":432,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activetoken.headername",{"_index":444,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activetoken.permissions",{"_index":449,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activetoken.token",{"_index":445,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.activetoken.username",{"_index":452,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.getall('/logs",{"_index":988,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.apiservice.getall('/logs/levels",{"_index":989,"title":{},"body":{"injectables/LoggingService.html":{}}}],["this.apiservice.getall('/permissions",{"_index":1298,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.getall('/users",{"_index":1297,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.getall('/users/me",{"_index":1299,"title":{},"body":{"injectables/UserService.html":{}}}],["this.apiservice.postall('/login",{"_index":436,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.apiservice.postall('/logs",{"_index":337,"title":{},"body":{"injectables/AppService.html":{},"injectables/LoggingService.html":{}}}],["this.apiservice.postall('/users",{"_index":1300,"title":{},"body":{"injectables/UserService.html":{}}}],["this.appservice.log(log",{"_index":1279,"title":{},"body":{"injectables/TranslateErrorHandler.html":{}}}],["this.auth.isloggedin",{"_index":389,"title":{},"body":{"guards/AuthGuardService.html":{}}}],["this.authservice.gettokenheadername",{"_index":400,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.gettokenvalue",{"_index":401,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this.authservice.getusername",{"_index":1405,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.authservice.hasanypermission([permissionenum.see_logs",{"_index":1095,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authservice.hasanypermission(permissions",{"_index":1226,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["this.authservice.login",{"_index":1039,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.authservice.logout",{"_index":1103,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.authservice.setsession(data",{"_index":1009,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.availablepermissions",{"_index":1383,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.changeableuser",{"_index":1379,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.changeableuser.enabled",{"_index":1407,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.changeableuser.id",{"_index":1403,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.changeableuser.name",{"_index":1404,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.current",{"_index":788,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.dateservice.getformat",{"_index":492,"title":{},"body":{"pipes/CustomDatePipe.html":{},"components/UsersettingsComponent.html":{}}}],["this.dateservice.setformat(event.value",{"_index":1365,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.defaulterrorhandler",{"_index":118,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.defaultlanguage",{"_index":783,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.disableusernameifdisabledflagtrue",{"_index":1038,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.emittoastcacheddata",{"_index":127,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.enableusernameifdisabled",{"_index":1036,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.errormessage",{"_index":1391,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.filterdialogvisible",{"_index":958,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.filterlevelcollapsed",{"_index":954,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.filterseencollapsed",{"_index":956,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.formbuilder.group",{"_index":1029,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fromlocalstorage",{"_index":791,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.generatemessage(error",{"_index":370,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.getbrowserlanguage",{"_index":793,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.getfromlist(browserlanguage",{"_index":797,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.getfromlist(language",{"_index":799,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.getlevels",{"_index":901,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.handlers",{"_index":522,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["this.haspermissionusermanagement",{"_index":1373,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.headeranimationstate",{"_index":649,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["this.http.get(`${environment.api_url}${path",{"_index":119,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.http.post(`${environment.api_url}${path",{"_index":131,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.initcols",{"_index":900,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.initfromlocalstorage",{"_index":904,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.initlanguages",{"_index":562,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.initlogcontextmenuitems",{"_index":898,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.initselectedlanguage",{"_index":564,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.injector.get(appservice",{"_index":531,"title":{},"body":{"injectables/GlobalErrorHandler.html":{},"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["this.injector.get(translateservice",{"_index":369,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.languagechanged.emit(language",{"_index":790,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.languageconfig.current.isocode",{"_index":493,"title":{},"body":{"pipes/CustomDatePipe.html":{},"components/HeaderComponent.html":{}}}],["this.languageconfig.current.name",{"_index":575,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.languageconfig.languagechanged.subscribe",{"_index":896,"title":{},"body":{"components/LoggingComponent.html":{},"components/NavigationComponent.html":{}}}],["this.languageconfig.languages.find((lang",{"_index":573,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.languageconfig.languages.map((lang",{"_index":566,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.languageconfig.setlanguage",{"_index":572,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.languages",{"_index":565,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LanguageConfig.html":{}}}],["this.languages.find((curr",{"_index":800,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.levels",{"_index":913,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.loadvisibleselectedcolumns",{"_index":903,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.localstoragekeyvisibleselectedcolumns",{"_index":942,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.localstorageservice.getvalue(this.localstoragekey",{"_index":510,"title":{},"body":{"injectables/DateService.html":{}}}],["this.localstorageservice.getvalue(this.localstoragekeyvisibleselectedcolumns",{"_index":946,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.localstorageservice.setkeyandvalue",{"_index":941,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.localstorageservice.setkeyandvalue(this.localstoragekey",{"_index":507,"title":{},"body":{"injectables/DateService.html":{}}}],["this.logcontextmenuitems",{"_index":897,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.logexception(e",{"_index":820,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["this.loggingservice.getalllevels().topromise().then((levels",{"_index":911,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.loggingservice.getlogs(filter).topromise().then((logs",{"_index":909,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.loggingservice.setseen(log.id",{"_index":936,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.loginemitter.emit",{"_index":1061,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginform",{"_index":1028,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.disable",{"_index":1035,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.disabled",{"_index":1047,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.controls.username.enable",{"_index":1048,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.reset",{"_index":1045,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.setvalue",{"_index":1032,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.password",{"_index":1041,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginform.value.username",{"_index":1040,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginmodalvisible",{"_index":1361,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.loginnamedisabled",{"_index":1046,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginservice.emitlogin",{"_index":1010,"title":{},"body":{"components/LoginComponent.html":{},"components/UsersettingsComponent.html":{}}}],["this.loginservice.loginemitter.subscribe",{"_index":1084,"title":{},"body":{"components/NavigationComponent.html":{},"components/UsersettingsComponent.html":{}}}],["this.logs",{"_index":910,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.logs.findindex((searchlog",{"_index":938,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.logs.splice(index",{"_index":940,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.messageservice.addall(messages",{"_index":1248,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["this.myuserid",{"_index":1371,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.navitems",{"_index":1085,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.needslogin",{"_index":1388,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.newpassword",{"_index":1381,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.newpassword.length",{"_index":1406,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.onloginsuccess(data",{"_index":1044,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.replaceuserinusers(user",{"_index":1389,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.router.navigate(['/home",{"_index":1207,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.router.navigate(['/imprint",{"_index":1210,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.router.navigate(['/login",{"_index":1213,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.router.navigate(['/logmanagement",{"_index":1212,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.router.navigate(['/privacy",{"_index":1214,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.router.navigate(['/usersettings",{"_index":1211,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["this.routernavigationservice.homenavigate",{"_index":1011,"title":{},"body":{"components/LoginComponent.html":{},"components/NavigationComponent.html":{}}}],["this.routernavigationservice.imprintnavigate",{"_index":1098,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.routernavigationservice.loginnavigate",{"_index":390,"title":{},"body":{"guards/AuthGuardService.html":{},"injectables/AuthService.html":{}}}],["this.routernavigationservice.logmanagementnavigate",{"_index":1093,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.routernavigationservice.privacypolicynavigate",{"_index":1100,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.routernavigationservice.usersettingsnavigate",{"_index":1091,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.seeninputswitch",{"_index":908,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.selecteddateformat",{"_index":1367,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.selectedlanguage",{"_index":563,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.selectedlevels.map((value",{"_index":906,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.selecteduser",{"_index":1395,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.selecteduser.enabled",{"_index":1408,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.sendloginrequest",{"_index":1037,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sessionstorageservice.getvalue(this.sessionstoragekeyfilterdialogvisible",{"_index":959,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sessionstorageservice.getvalue(this.sessionstoragekeyfilterlevelcollapsed",{"_index":955,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sessionstorageservice.getvalue(this.sessionstoragekeyfilterseencollapsed",{"_index":957,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sessionstorageservice.removeitem('jwt",{"_index":442,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionstorageservice.setkeyandvalue('jwt",{"_index":440,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sessionstorageservice.setkeyandvalue(this.sessionstoragekeyfilterdialogvisible",{"_index":963,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sessionstorageservice.setkeyandvalue(this.sessionstoragekeyfilterlevelcollapsed",{"_index":960,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sessionstorageservice.setkeyandvalue(this.sessionstoragekeyfilterseencollapsed",{"_index":962,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.setinitlanguage",{"_index":785,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.setitems",{"_index":1083,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.setlanguage(language",{"_index":792,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.setlanguage(this.languages[0",{"_index":794,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.setseen(this.selectedlog",{"_index":920,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.sidebarvisible",{"_index":1087,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.successmessage",{"_index":1390,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.swupdate.activateupdate().then",{"_index":176,"title":{},"body":{"components/AppComponent.html":{}}}],["this.swupdate.available.subscribe((event",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["this.tablecols",{"_index":899,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.toastmessageemitter.emit",{"_index":1268,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["this.toastmessageemitter.emit(toastmessages",{"_index":1267,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["this.toastmessageservice.emit",{"_index":133,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.toastmessageservice.emiterror",{"_index":1411,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.toastmessageservice.emitsuccess",{"_index":1409,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.toastmessageservice.toastmessageemitter.subscribe((messages",{"_index":1247,"title":{},"body":{"components/ToastMessageComponent.html":{}}}],["this.translate",{"_index":367,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.translate.currentlang",{"_index":46,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["this.translate.getbrowserlang",{"_index":796,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.translate.instant('error.400.message",{"_index":1231,"title":{},"body":{"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.translate.instant('error.400.name",{"_index":1230,"title":{},"body":{"injectables/ServerSideErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{}}}],["this.translate.instant('error.403.message",{"_index":375,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["this.translate.instant('error.403.name",{"_index":374,"title":{},"body":{"injectables/AuthErrorResponseHandler.html":{}}}],["this.translate.instant('error.404.message",{"_index":1125,"title":{},"body":{"injectables/NotFoundErrorHandler.html":{}}}],["this.translate.instant('error.404.name",{"_index":1124,"title":{},"body":{"injectables/NotFoundErrorHandler.html":{}}}],["this.translate.instant('error.405.message",{"_index":1068,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{}}}],["this.translate.instant('error.405.name",{"_index":1067,"title":{},"body":{"injectables/MethodNotAllowedErrorHandler.html":{}}}],["this.translate.instant('error.cached.detail",{"_index":146,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.translate.instant('error.cached.summary",{"_index":143,"title":{},"body":{"injectables/ApiService.html":{}}}],["this.translate.instant('error.noconnection.message",{"_index":1122,"title":{},"body":{"injectables/NoConnectionErrorHandler.html":{}}}],["this.translate.instant('error.noconnection.name",{"_index":1121,"title":{},"body":{"injectables/NoConnectionErrorHandler.html":{}}}],["this.translate.instant('log.seen",{"_index":915,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.translate.instant('navigation.home",{"_index":1086,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('navigation.imprint",{"_index":1097,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('navigation.logout",{"_index":1101,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('navigation.logs",{"_index":1092,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('navigation.privacy",{"_index":1099,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('navigation.usersettings",{"_index":1088,"title":{},"body":{"components/NavigationComponent.html":{}}}],["this.translate.instant('user.updatefailed",{"_index":1412,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.translate.instant('user.updatesuccessfully",{"_index":1410,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.translate.setdefaultlang(defaultlanguage.isocode",{"_index":784,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.translate.use(language.isocode",{"_index":789,"title":{},"body":{"injectables/LanguageConfig.html":{}}}],["this.users.findindex((primengbase",{"_index":1392,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.users.push({label",{"_index":1376,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.users[index",{"_index":1394,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.users[index].value",{"_index":1396,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.userservice.getall().subscribe",{"_index":1374,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.userservice.getallpermissions().subscribe(value",{"_index":1382,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.userservice.getme",{"_index":1369,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.userservice.save(this.toexportuser(this.changeableuser)).subscribe",{"_index":1387,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.userservice.savepermissions(this.toexportuser(this.selecteduser)).subscribe",{"_index":1413,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["this.viewcontainer.clear",{"_index":1228,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["this.viewcontainer.createembeddedview(this.templateref",{"_index":1227,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["this.visibleselectedcolumns",{"_index":902,"title":{},"body":{"components/LoggingComponent.html":{}}}],["this.visibleselectedcolumns.map((a",{"_index":943,"title":{},"body":{"components/LoggingComponent.html":{}}}],["threadname",{"_index":697,"title":{},"body":{"interfaces/IExportLog.html":{},"interfaces/ILog.html":{},"components/LoggingComponent.html":{}}}],["title",{"_index":619,"title":{},"body":{"components/HeaderTitleComponent.html":{},"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["title'},{'name",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["title.component",{"_index":615,"title":{},"body":{"modules/HeaderModule.html":{}}}],["title.component.html",{"_index":621,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["title.component.scss",{"_index":620,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["title.component.ts",{"_index":618,"title":{},"body":{"components/HeaderTitleComponent.html":{},"coverage.html":{}}}],["title.component.ts:21",{"_index":624,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["title.component.ts:25",{"_index":625,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["title.component.ts:28",{"_index":626,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["title/header",{"_index":614,"title":{},"body":{"modules/HeaderModule.html":{},"components/HeaderTitleComponent.html":{},"coverage.html":{}}}],["tls",{"_index":1157,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["toast",{"_index":92,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{}}}],["toastmessagecomponent",{"_index":208,"title":{"components/ToastMessageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"modules/ToastMessageModule.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{},"index.html":{}}}],["toastmessageemitter",{"_index":1265,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["toastmessagemodule",{"_index":239,"title":{"modules/ToastMessageModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ToastMessageModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["toastmessages",{"_index":1266,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["toastmessageservice",{"_index":77,"title":{"injectables/ToastMessageService.html":{}},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/ToastMessageComponent.html":{},"injectables/ToastMessageService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{}}}],["toastmessageseverity",{"_index":101,"title":{},"body":{"injectables/ApiService.html":{},"injectables/ToastMessageService.html":{},"miscellaneous/enumerations.html":{}}}],["toastmessageseverity.error",{"_index":1270,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["toastmessageseverity.success",{"_index":1269,"title":{},"body":{"injectables/ToastMessageService.html":{}}}],["toastmessageseverity.warning",{"_index":135,"title":{},"body":{"injectables/ApiService.html":{}}}],["toastmodule",{"_index":1253,"title":{},"body":{"modules/ToastMessageModule.html":{}}}],["todo",{"_index":108,"title":{},"body":{"injectables/ApiService.html":{}}}],["toexportuser",{"_index":1321,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["togglebuttonmodule",{"_index":1428,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["toggleheaderanimationstate",{"_index":623,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["token",{"_index":712,"title":{},"body":{"interfaces/IJWT.html":{}}}],["tooltipmodule",{"_index":976,"title":{},"body":{"modules/LoggingModule.html":{}}}],["topromise",{"_index":338,"title":{},"body":{"injectables/AppService.html":{}}}],["transform",{"_index":479,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["transform(value",{"_index":480,"title":{},"body":{"pipes/CustomDatePipe.html":{}}}],["transition",{"_index":556,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{}}}],["transition('left",{"_index":642,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["transition('middle",{"_index":645,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["transition('right",{"_index":647,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["translate",{"_index":20,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/ServerSideErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/functions.html":{}}}],["translate/core",{"_index":33,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"modules/AppModule.html":{},"injectables/AuthErrorResponseHandler.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/ImprintModule.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"modules/NavigationModule.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"modules/PrivacyPolicyModule.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/TranslateErrorHandler.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"injectables/ValidationErrorHandler.html":{},"dependencies.html":{}}}],["translate/http",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translateerrorhandler",{"_index":279,"title":{"injectables/TranslateErrorHandler.html":{}},"body":{"modules/AppModule.html":{},"injectables/TranslateErrorHandler.html":{},"coverage.html":{}}}],["translatehttploader",{"_index":264,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":262,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloaderfactory",{"_index":305,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["translateloaderfactory(http",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["translatemodule",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/UsersettingsModule.html":{}}}],["translatemodule.forroot",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":12,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/ServerSideErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["translatex",{"_index":632,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["translatex(0",{"_index":637,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["translatex(30",{"_index":640,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["translate}}{{\"owner.address",{"_index":1139,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["translate}}{{\"owner.city",{"_index":1140,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["translate}}{{\"owner.email",{"_index":735,"title":{},"body":{"components/ImprintComponent.html":{},"components/PrivacyPolicyComponent.html":{}}}],["translate}}{{\"owner.website",{"_index":1143,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["transparent",{"_index":1110,"title":{},"body":{"components/NavigationComponent.html":{}}}],["tree",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["trigger",{"_index":557,"title":{},"body":{"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{}}}],["trigger('slideleftmiddleright",{"_index":629,"title":{},"body":{"components/HeaderTitleComponent.html":{}}}],["true",{"_index":115,"title":{},"body":{"injectables/ApiService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"injectables/AuthService.html":{},"injectables/DefaultErrorHandler.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"injectables/ServerSideErrorHandler.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["true}).then",{"_index":1209,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["try",{"_index":817,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/SessionStorageService.html":{}}}],["tslib",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":136,"title":{},"body":{"injectables/ApiService.html":{}}}],["type",{"_index":18,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"components/AppComponent.html":{},"injectables/AppService.html":{},"injectables/AuthErrorResponseHandler.html":{},"guards/AuthGuardService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"interfaces/IExportLog.html":{},"interfaces/IExportUser.html":{},"interfaces/IHttpErrorResponseHandler.html":{},"interfaces/IJWT.html":{},"interfaces/ILanguage.html":{},"interfaces/ILog.html":{},"interfaces/ILogFilter.html":{},"interfaces/IPermission.html":{},"interfaces/IPrimeNgBase.html":{},"interfaces/IUser.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/MethodNotAllowedErrorHandler.html":{},"components/NavigationComponent.html":{},"injectables/NoConnectionErrorHandler.html":{},"injectables/NotFoundErrorHandler.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"injectables/ServerSideErrorHandler.html":{},"injectables/SessionStorageService.html":{},"components/ToastMessageComponent.html":{},"injectables/TranslateErrorHandler.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ui",{"_index":585,"title":{},"body":{"components/HeaderComponent.html":{},"components/ImprintComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/UsersettingsComponent.html":{}}}],["undefined",{"_index":508,"title":{},"body":{"injectables/DateService.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/SessionStorageService.html":{}}}],["under",{"_index":1176,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["update",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["updated",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["url",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["useclass",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":1089,"title":{},"body":{"components/NavigationComponent.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["user.emailaddress",{"_index":1397,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.enabled",{"_index":1398,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.id",{"_index":1301,"title":{},"body":{"injectables/UserService.html":{},"components/UsersettingsComponent.html":{}}}],["user.lastlogin",{"_index":1399,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.name",{"_index":1377,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.newpassword",{"_index":1414,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.permissions",{"_index":1302,"title":{},"body":{"injectables/UserService.html":{}}}],["user.permissions.map",{"_index":1400,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.permissions.map(value1",{"_index":1385,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user.service",{"_index":1360,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["user_management",{"_index":1544,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["userchanged",{"_index":1327,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["userchanged(event",{"_index":1337,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["userlang",{"_index":45,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{}}}],["username",{"_index":434,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IJWT.html":{},"components/LoginComponent.html":{}}}],["users",{"_index":1322,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["users.foreach((user",{"_index":1375,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["userservice",{"_index":1281,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"coverage.html":{}}}],["usersettings",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["usersettings.component",{"_index":1430,"title":{},"body":{"modules/UsersettingsModule.html":{}}}],["usersettings.component.html",{"_index":1305,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["usersettings.component.scss",{"_index":1304,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["usersettings/usersettings.component",{"_index":321,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["usersettingscomponent",{"_index":210,"title":{"components/UsersettingsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{},"modules/UsersettingsModule.html":{},"coverage.html":{},"index.html":{}}}],["usersettingsmodule",{"_index":240,"title":{"modules/UsersettingsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["usersettingsnavigate",{"_index":1197,"title":{},"body":{"injectables/RouternavigationService.html":{}}}],["usevalue",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["validation",{"_index":521,"title":{},"body":{"injectables/DefaultErrorHandler.html":{}}}],["validationerrorhandler",{"_index":461,"title":{"injectables/ValidationErrorHandler.html":{}},"body":{"modules/CoreModule.html":{},"injectables/DefaultErrorHandler.html":{},"injectables/ValidationErrorHandler.html":{},"coverage.html":{},"index.html":{}}}],["validators",{"_index":1025,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":1030,"title":{},"body":{"components/LoginComponent.html":{}}}],["value",{"_index":22,"title":{},"body":{"interceptors/AddLanguageHeaderInterceptor.html":{},"injectables/ApiService.html":{},"injectables/AppService.html":{},"interceptors/AuthInterceptor.html":{},"injectables/AuthService.html":{},"pipes/CustomDatePipe.html":{},"injectables/DateService.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"interfaces/IPrimeNgBase.html":{},"injectables/LanguageConfig.html":{},"injectables/LocalStorageService.html":{},"components/LoggingComponent.html":{},"injectables/LoggingService.html":{},"components/LoginComponent.html":{},"injectables/LoginService.html":{},"components/NavigationComponent.html":{},"injectables/SessionStorageService.html":{},"injectables/ToastMessageService.html":{},"injectables/UserService.html":{},"components/UsersettingsComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.filter((el",{"_index":1384,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["value.id",{"_index":1372,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["value.label",{"_index":907,"title":{},"body":{"components/LoggingComponent.html":{}}}],["value.length",{"_index":953,"title":{},"body":{"components/LoggingComponent.html":{}}}],["value.name",{"_index":1378,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["value.substr(4",{"_index":952,"title":{},"body":{"components/LoggingComponent.html":{}}}],["value1.id).includes(el.id",{"_index":1386,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["var",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["variable",{"_index":1442,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1568,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["viewcontainer",{"_index":1219,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["viewcontainerref",{"_index":1220,"title":{},"body":{"directives/SecuredDirective.html":{}}}],["visible",{"_index":1094,"title":{},"body":{"components/NavigationComponent.html":{}}}],["visiblecolschanged",{"_index":857,"title":{},"body":{"components/LoggingComponent.html":{}}}],["visibleselectedcolumns",{"_index":858,"title":{},"body":{"components/LoggingComponent.html":{}}}],["visibleselectedcolumnslogs",{"_index":874,"title":{},"body":{"components/LoggingComponent.html":{}}}],["void",{"_index":438,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GlobalErrorHandler.html":{},"components/HeaderComponent.html":{},"components/HeaderTitleComponent.html":{},"components/HelpDialogComponent.html":{},"components/HomeComponent.html":{},"components/ImprintComponent.html":{},"injectables/LanguageConfig.html":{},"components/LoggingComponent.html":{},"components/LoginComponent.html":{},"components/NavigationComponent.html":{},"components/PrivacyPolicyComponent.html":{},"injectables/RouternavigationService.html":{},"directives/SecuredDirective.html":{},"components/ToastMessageComponent.html":{},"components/UsersettingsComponent.html":{}}}],["warn",{"_index":1542,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["warning",{"_index":1548,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["web",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":1113,"title":{},"body":{"components/NavigationComponent.html":{}}}],["weight",{"_index":595,"title":{},"body":{"components/HeaderComponent.html":{}}}],["white",{"_index":591,"title":{},"body":{"components/HeaderComponent.html":{}}}],["width",{"_index":1420,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["window.innerwidth",{"_index":1362,"title":{},"body":{"components/UsersettingsComponent.html":{}}}],["withdraw",{"_index":1174,"title":{},"body":{"components/PrivacyPolicyComponent.html":{}}}],["worker",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":297,"title":{},"body":{"modules/AppModule.html":{}}}],["x",{"_index":121,"title":{},"body":{"injectables/ApiService.html":{}}}],["y",{"_index":1525,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["z",{"_index":1529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["zone.js",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules/HelpDialogModule.html":{},"modules/HomeModule.html":{},"modules/ImprintModule.html":{},"modules/LoggingModule.html":{},"modules/LoginModule.html":{},"modules/NavigationModule.html":{},"modules/PipeModule.html":{},"modules/PrivacyPolicyModule.html":{},"modules/ToastMessageModule.html":{},"modules/UsersettingsModule.html":{},"index.html":{}}}],["zzzz",{"_index":1532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interceptors/AddLanguageHeaderInterceptor.html":{"url":"interceptors/AddLanguageHeaderInterceptor.html","title":"interceptor - AddLanguageHeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AddLanguageHeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/add_language_header.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/add_language_header.interceptor.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/add_language_header.interceptor.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, } from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AddLanguageHeaderInterceptor implements HttpInterceptor {\n\n  constructor(private translate: TranslateService) { }\n\n  intercept = (req: HttpRequest, next: HttpHandler): Observable> => {\n    const userLang = this.translate.currentLang;\n\n    if (userLang) {\n      // Clone the request to add the new header\n      const clonedRequest = req.clone({headers: req.headers.set('Accept-Language', userLang)});\n\n      // Pass the cloned request instead of the original request to the next handle\n      return next.handle(clonedRequest);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiService.html":{"url":"injectables/ApiService.html","title":"injectable - ApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                emitToastCachedData\n                            \n                            \n                                getAll\n                            \n                            \n                                postAll\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, defaultErrorHandler: DefaultErrorHandler, toastMessageService: ToastMessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        defaultErrorHandler\n                                                  \n                                                        \n                                                                        DefaultErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitToastCachedData\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/api.service.ts:53\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {DefaultErrorHandler} from '../error-handlers/default-error.handler';\nimport {IHttpErrorResponseHandler} from '../error-handlers/i-http-error-response.handler';\nimport {ToastMessageSeverity} from '../models/enum/toast-message-severity.enum';\n\nconst contentTypeJson = {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  constructor(\n    private http: HttpClient,\n    private defaultErrorHandler: DefaultErrorHandler,\n    private toastMessageService: ToastMessageService,\n    // private translate: TranslateService // TODO Error: Cannot instantiate cyclic dependency! TranslateService\n  ) { }\n\n  getAll = (\n    path: string,\n    cacheable = true,\n    params: any = new HttpParams(),\n    errorHandler: IHttpErrorResponseHandler = this.defaultErrorHandler\n  ): Observable => {\n    return this.http.get(`${environment.api_url}${path}`, {params}).pipe(\n      tap ( x => {\n        if (cacheable) {\n          localStorage.setItem(JSON.stringify({path, params}), JSON.stringify(x));\n        }\n      }),\n      catchError((error) => {\n        if (cacheable) {\n          const localStorageValue = localStorage.getItem(JSON.stringify({path, params}));\n          if (localStorageValue) {\n            this.emitToastCachedData();\n            return of(JSON.parse(localStorageValue));\n          }\n        }\n        errorHandler.handle(error);\n        return of([]);\n      })\n    );\n  }\n\n  postAll = (\n    path: string,\n    body: any = new HttpParams(),\n    errorHandler: IHttpErrorResponseHandler = this.defaultErrorHandler\n  ): Observable => {\n    return this.http.post(`${environment.api_url}${path}`, body, contentTypeJson).pipe(\n      catchError((error) => errorHandler.handle(error))\n    );\n  }\n\n  private emitToastCachedData = () => {\n    this.toastMessageService.emit([\n      {\n        severity: ToastMessageSeverity.WARNING,\n        // tslint:disable-next-line:max-line-length TODO remove\n        summary: 'error.cached.summary', // this.translate.instant('error.cached.summary') TODO Error: Cannot instantiate cyclic dependency! TranslateService\n        // tslint:disable-next-line:max-line-length TODO remove\n        detail: 'error.cached.detail', // this.translate.instant('error.cached.detail') TODO Error: Cannot instantiate cyclic dependency! TranslateService\n        life: 10000\n      } as Message\n    ]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(swupdate: SwUpdate)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        swupdate\n                                                  \n                                                        \n                                                                        SwUpdate\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport {SwUpdate} from '@angular/service-worker';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(private swupdate: SwUpdate) {\n    // checks if update available\n    this.swupdate.available.subscribe((event: any) => {\n      // reload / refresh the browser\n      this.swupdate.activateUpdate().then(() => document.location.reload());\n      console.log('sw updated');\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                @import \"./src/styles\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHelpDialogModule\n\nHelpDialogModule\n\nAppModule -->\n\nHelpDialogModule->AppModule\n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nImprintModule\n\nImprintModule\n\nAppModule -->\n\nImprintModule->AppModule\n\n\n\n\n\nLoggingModule\n\nLoggingModule\n\nAppModule -->\n\nLoggingModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nAppModule -->\n\nNavigationModule->AppModule\n\n\n\n\n\nPrivacyPolicyModule\n\nPrivacyPolicyModule\n\nAppModule -->\n\nPrivacyPolicyModule->AppModule\n\n\n\n\n\nToastMessageModule\n\nToastMessageModule\n\nAppModule -->\n\nToastMessageModule->AppModule\n\n\n\n\n\nUsersettingsModule\n\nUsersettingsModule\n\nAppModule -->\n\nUsersettingsModule->AppModule\n\n\n\n\n\nLanguageConfig\n\nLanguageConfig\n\nAppModule -->\n\nLanguageConfig->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LanguageConfig\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            CoreModule\n                        \n                        \n                            HeaderModule\n                        \n                        \n                            HelpDialogModule\n                        \n                        \n                            HomeModule\n                        \n                        \n                            ImprintModule\n                        \n                        \n                            LoggingModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            NavigationModule\n                        \n                        \n                            PrivacyPolicyModule\n                        \n                        \n                            ToastMessageModule\n                        \n                        \n                            UsersettingsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {APP_BASE_HREF, registerLocaleData} from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport {HttpClient} from '@angular/common/http';\nimport localeDe from '@angular/common/locales/de';\nimport localeEn from '@angular/common/locales/en';\nimport {ErrorHandler, NgModule} from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport {MissingTranslationHandler, TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {MessageService} from 'primeng';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {AppService} from './app.service';\nimport {appInitializerProviders} from './core/app-initializer-provider';\nimport {GlobalErrorHandler} from './core/error-handlers/global-error.handler';\nimport {TranslateErrorHandler} from './core/error-handlers/translate-error.handler';\nimport {LanguageConfig} from './core/language.config';\nimport {httpInterceptorProviders} from './core/security/http-interceptors';\nimport { AuthGuardService as AuthGuard } from './core/services/auth-guard.service';\nimport {MyModules} from './modules';\n\nexport function TranslateLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\nregisterLocaleData(localeDe);\nregisterLocaleData(localeEn);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production, registrationStrategy: 'registerImmediately' }),\n    BrowserAnimationsModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: TranslateLoaderFactory,\n        deps: [HttpClient],\n      },\n      missingTranslationHandler:\n        {\n          provide: MissingTranslationHandler,\n          useClass: TranslateErrorHandler,\n          deps: [AppService]\n        }\n    }),\n    MyModules\n  ],\n  providers: [\n    LanguageConfig,\n    httpInterceptorProviders,\n    appInitializerProviders,\n    [AuthGuard],\n    MessageService,\n    {\n      provide: ErrorHandler,\n      useClass: GlobalErrorHandler\n    },\n    {\n      provide: APP_BASE_HREF,\n      useValue: environment.base_href\n    }\n  ],\n  bootstrap: [\n    AppComponent\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport { AuthGuardService as AuthGuard } from './core/services/auth-guard.service';\nimport {HomeComponent} from './home/home.component';\nimport {ImprintComponent} from './imprint/imprint.component';\nimport {LoginComponent} from './login/login.component';\nimport {LoggingComponent} from './logs/logging.component';\nimport {PrivacyPolicyComponent} from './privacy-policy/privacy-policy.component';\nimport {UsersettingsComponent} from './usersettings/usersettings.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  }, {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: '',\n    component: HomeComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'logmanagement',\n    component: LoggingComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'usersettings',\n    component: UsersettingsComponent,\n    canActivate: [AuthGuard]\n  }, {\n    path: 'imprint',\n    component: ImprintComponent\n  }, {\n    path: 'privacy-policy',\n    component: PrivacyPolicyComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            log\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.service.ts:11\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {IExportLog} from './core/models/log.model';\nimport {ApiService} from './core/services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n  constructor(private apiService: ApiService) { }\n\n  log = (log: IExportLog) => {\n    this.apiService.postAll('/logs', log)\n      .toPromise()\n      .then(() => {console.log('sending log to backend success'); })\n      .catch(() => {console.log('sending log to backend failed'); });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthErrorResponseHandler.html":{"url":"injectables/AuthErrorResponseHandler.html","title":"injectable - AuthErrorResponseHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthErrorResponseHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/auth-error-response.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/auth-error-response.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/auth-error-response.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/auth-error-response.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/auth-error-response.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/auth-error-response.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class AuthErrorResponseHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return error.status === 403;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.403.name'),\n          message: this.translate.instant('error.403.message')\n        } as Error\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuardService.html":{"url":"guards/AuthGuardService.html","title":"guard - AuthGuardService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/services/auth-guard.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                canActivate\n                            \n                            \n                                    Public\n                                routernavigationService\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, routernavigationService: RouternavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth-guard.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routernavigationService\n                                                  \n                                                        \n                                                                        RouternavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {RouternavigationService} from './routernavigation.service';\n\n@Injectable()\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public auth: AuthService, public routernavigationService: RouternavigationService) {}\n\n  canActivate = (): boolean => {\n    if (!this.auth.isLoggedIn()) {\n      this.routernavigationService.loginNavigate();\n      return false;\n    }\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/security/auth.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/security/auth.interceptor.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/security/auth.interceptor.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AuthService} from '../services/auth.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService ) {}\n\n  intercept(req: HttpRequest,\n            next: HttpHandler): Observable> {\n\n    const headerName = this.authService.getTokenHeaderName();\n    const value = this.authService.getTokenValue();\n\n    if (headerName && value) {\n      const cloned = req.clone({\n        headers: req.headers.set(headerName, value)\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                activeToken\n                            \n                            \n                                    Public\n                                getTokenHeaderName\n                            \n                            \n                                    Public\n                                getTokenValue\n                            \n                            \n                                    Public\n                                getUsername\n                            \n                            \n                                    Public\n                                hasAnyPermission\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                setSession\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, routernavigationService: RouternavigationService, sessionStorageService: SessionStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routernavigationService\n                                                  \n                                                        \n                                                                        RouternavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionStorageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            activeToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IJWT\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTokenHeaderName\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getTokenValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getUsername\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasAnyPermission\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isLoggedIn\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSession\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/auth.service.ts:29\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {tap} from 'rxjs/internal/operators/tap';\nimport {PermissionEnum} from '../models/enum/permission.enum';\nimport {IJWT} from '../models/jwt.model';\nimport {ApiService} from './api.service';\nimport {RouternavigationService} from './routernavigation.service';\nimport {SessionStorageService} from './session-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private activeToken: IJWT;\n\n  constructor(\n    private apiService: ApiService,\n    private routernavigationService: RouternavigationService,\n    private sessionStorageService: SessionStorageService\n  ) {\n    this.activeToken = JSON.parse(this.sessionStorageService.getValue('jwt'));\n  }\n\n  login = (username: string, password: string): Observable => {\n    return this.apiService.postAll('/login', {username, password});\n  }\n\n  setSession = (authResult: IJWT): void => {\n    if (authResult.token) {\n      this.activeToken = authResult;\n      this.sessionStorageService.setKeyAndValue('jwt', JSON.stringify(authResult));\n    }\n  }\n\n  logout = (): void => {\n    this.sessionStorageService.removeItem('jwt');\n    this.activeToken = null;\n    this.routernavigationService.loginNavigate();\n  }\n\n  public isLoggedIn = (): boolean => {\n    if (!this.activeToken) { return false; }\n    return Date.now()  {\n    if (!this.activeToken) { return ''; }\n    return this.activeToken.headerName;\n  }\n\n  public getTokenValue = (): string => {\n    if (!this.activeToken) { return ''; }\n    return this.activeToken.token;\n  }\n\n  public hasAnyPermission = (permissionsNeeded: PermissionEnum[]): boolean => {\n    if (permissionsNeeded.length === 0) { return true; }\n\n    if (this.activeToken == null || this.activeToken.permissions == null) {\n      return false;\n    }\n\n    for (const needed of permissionsNeeded) {\n      for (const owned of this.activeToken.permissions) {\n        if (needed === owned) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public getUsername = (): string => {\n    if (!this.activeToken) { return ''; }\n    return this.activeToken.username;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\n\nSecuredDirective\n\nSecuredDirective\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nSecuredDirective->CoreModule\n\n\n\n\n\nSecuredDirective \n\nSecuredDirective \n\nSecuredDirective  -->\n\nCoreModule->SecuredDirective \n\n\n\n\n\nAuthErrorResponseHandler\n\nAuthErrorResponseHandler\n\nCoreModule -->\n\nAuthErrorResponseHandler->CoreModule\n\n\n\n\n\nDefaultErrorHandler\n\nDefaultErrorHandler\n\nCoreModule -->\n\nDefaultErrorHandler->CoreModule\n\n\n\n\n\nMethodNotAllowedErrorHandler\n\nMethodNotAllowedErrorHandler\n\nCoreModule -->\n\nMethodNotAllowedErrorHandler->CoreModule\n\n\n\n\n\nNoConnectionErrorHandler\n\nNoConnectionErrorHandler\n\nCoreModule -->\n\nNoConnectionErrorHandler->CoreModule\n\n\n\n\n\nNotFoundErrorHandler\n\nNotFoundErrorHandler\n\nCoreModule -->\n\nNotFoundErrorHandler->CoreModule\n\n\n\n\n\nServerSideErrorHandler\n\nServerSideErrorHandler\n\nCoreModule -->\n\nServerSideErrorHandler->CoreModule\n\n\n\n\n\nValidationErrorHandler\n\nValidationErrorHandler\n\nCoreModule -->\n\nValidationErrorHandler->CoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/core.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SecuredDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthErrorResponseHandler\n                        \n                        \n                            DefaultErrorHandler\n                        \n                        \n                            MethodNotAllowedErrorHandler\n                        \n                        \n                            NoConnectionErrorHandler\n                        \n                        \n                            NotFoundErrorHandler\n                        \n                        \n                            ServerSideErrorHandler\n                        \n                        \n                            ValidationErrorHandler\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SecuredDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {AuthErrorResponseHandler} from './error-handlers/auth-error-response.handler';\nimport {DefaultErrorHandler} from './error-handlers/default-error.handler';\nimport {MethodNotAllowedErrorHandler} from './error-handlers/method-not-allowed-error.handler';\nimport {NoConnectionErrorHandler} from './error-handlers/no-connection-error.handler';\nimport {NotFoundErrorHandler} from './error-handlers/not-found-error.handler';\nimport {ServerSideErrorHandler} from './error-handlers/server-side-error.handler';\nimport {ValidationErrorHandler} from './error-handlers/validation-error.handler';\nimport {SecuredDirective} from './security/secured.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  providers: [\n    AuthErrorResponseHandler,\n    DefaultErrorHandler,\n    NoConnectionErrorHandler,\n    ServerSideErrorHandler,\n    ValidationErrorHandler,\n    NotFoundErrorHandler,\n    MethodNotAllowedErrorHandler\n  ],\n  declarations: [\n    SecuredDirective\n  ],\n  exports: [\n    SecuredDirective\n  ]\n})\nexport class CoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CustomDatePipe.html":{"url":"pipes/CustomDatePipe.html","title":"pipe - CustomDatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CustomDatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/CustomDate.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        customDate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: any, ...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/pipes/CustomDate.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {DatePipe} from '@angular/common';\nimport {Pipe, PipeTransform} from '@angular/core';\nimport {LanguageConfig} from '../language.config';\nimport {DateService} from '../services/date.service';\n\n@Pipe({\n  name: 'customDate',\n  pure: false\n})\nexport class CustomDatePipe extends DatePipe implements PipeTransform {\n\n  constructor(private dateService: DateService, private languageConfig: LanguageConfig) {\n    super(languageConfig.current.isoCode);\n  }\n\n  transform(value: any, ...args: any[]): any {\n    return super.transform(value, this.dateService.getFormat(), '', this.languageConfig.current.isoCode);\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DateService.html":{"url":"injectables/DateService.html","title":"injectable - DateService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/date.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getFormat\n                            \n                            \n                                localStorageKey\n                            \n                            \n                                setFormat\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/date.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/date.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dateFormat'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/date.service.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/date.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {DateFormat} from '../models/enum/date-format.enum';\nimport {LocalStorageService} from './local-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateService {\n\n  localStorageKey = 'dateFormat';\n\n  constructor(private localStorageService: LocalStorageService) { }\n\n  setFormat = (dateFormat: DateFormat) => {\n    this.localStorageService.setKeyAndValue(this.localStorageKey, dateFormat);\n  }\n\n  getFormat = (): string | undefined => {\n    const format = this.localStorageService.getValue(this.localStorageKey);\n    if (format === undefined || format === null) {\n      return DateFormat.short;\n    }\n    return format;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultErrorHandler.html":{"url":"injectables/DefaultErrorHandler.html","title":"injectable - DefaultErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DefaultErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/default-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                handlers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(validationErrorHandler: ValidationErrorHandler, authErrorHandler: AuthErrorResponseHandler, serverSideErrorHandler: ServerSideErrorHandler, noConnectionErrorHandler: NoConnectionErrorHandler, notFoundErrorHandler: NotFoundErrorHandler, methodNotAllowedErrorHandler: MethodNotAllowedErrorHandler)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/default-error.handler.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        validationErrorHandler\n                                                  \n                                                        \n                                                                        ValidationErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authErrorHandler\n                                                  \n                                                        \n                                                                        AuthErrorResponseHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        serverSideErrorHandler\n                                                  \n                                                        \n                                                                        ServerSideErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        noConnectionErrorHandler\n                                                  \n                                                        \n                                                                        NoConnectionErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notFoundErrorHandler\n                                                  \n                                                        \n                                                                        NotFoundErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        methodNotAllowedErrorHandler\n                                                  \n                                                        \n                                                                        MethodNotAllowedErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/default-error.handler.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/default-error.handler.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IHttpErrorResponseHandler[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/default-error.handler.ts:15\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AuthErrorResponseHandler} from './auth-error-response.handler';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {MethodNotAllowedErrorHandler} from './method-not-allowed-error.handler';\nimport {NoConnectionErrorHandler} from './no-connection-error.handler';\nimport {NotFoundErrorHandler} from './not-found-error.handler';\nimport {ServerSideErrorHandler} from './server-side-error.handler';\nimport {ValidationErrorHandler} from './validation-error.handler';\n\n@Injectable()\nexport class DefaultErrorHandler implements IHttpErrorResponseHandler {\n\n  handlers: IHttpErrorResponseHandler[];\n\n  constructor(\n    private validationErrorHandler: ValidationErrorHandler,\n    private authErrorHandler: AuthErrorResponseHandler,\n    private serverSideErrorHandler: ServerSideErrorHandler,\n    private noConnectionErrorHandler: NoConnectionErrorHandler,\n    private notFoundErrorHandler: NotFoundErrorHandler,\n    private methodNotAllowedErrorHandler: MethodNotAllowedErrorHandler\n  ) {\n    this.handlers = [\n      validationErrorHandler,\n      authErrorHandler,\n      serverSideErrorHandler,\n      notFoundErrorHandler,\n      methodNotAllowedErrorHandler,\n      noConnectionErrorHandler\n    ];\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    for (const handler of this.handlers) {\n      if (handler.matches(error)) {\n        return handler.handle(error);\n      }\n    }\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return true;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalErrorHandler.html":{"url":"injectables/GlobalErrorHandler.html","title":"injectable - GlobalErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/global-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/global-error.handler.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleError\n                        \n                        \n                    \n                \n            \n            \n                \nhandleError(error)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/global-error.handler.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {ErrorHandler, Injectable, Injector} from '@angular/core';\nimport {AppService} from '../../app.service';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class GlobalErrorHandler implements ErrorHandler {\n\n  constructor(private injector: Injector) { }\n\n  handleError(error) {\n    const appService = this.injector.get(AppService);\n    const log = LogGenerator.createLog(error);\n    appService.log(log);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                initLanguages\n                            \n                            \n                                    Private\n                                initSelectedLanguage\n                            \n                            \n                                    Public\n                                languageConfig\n                            \n                            \n                                languages\n                            \n                            \n                                selectedLanguage\n                            \n                            \n                                selectLanguage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageConfig: LanguageConfig, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageConfig\n                                                  \n                                                        \n                                                                        LanguageConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initLanguages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initSelectedLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            languageConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LanguageConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, OnInit} from '@angular/core';\nimport {LanguageConfig} from '../core/language.config';\nimport {IPrimeNgBase} from '../core/models/primeng-base.model';\nimport {AuthService} from '../core/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n\n  languages: IPrimeNgBase[];\n  selectedLanguage: IPrimeNgBase;\n\n  constructor(public languageConfig: LanguageConfig, public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.initLanguages();\n    this.selectedLanguage = this.initSelectedLanguage();\n  }\n\n  initLanguages = () => {\n    this.languages = this.languageConfig.languages.map((lang) => {\n      return {label: lang.name, field: lang.isoCode, value: lang.isoCode} as IPrimeNgBase;\n    });\n  }\n\n  selectLanguage = (event) => {\n    this.languageConfig.setLanguage(\n      this.languageConfig.languages.find((lang) => lang.isoCode === event.value)\n    );\n  }\n\n  private initSelectedLanguage = (): IPrimeNgBase => {\n    return {field: this.languageConfig.current.isoCode, label: this.languageConfig.current.name} as IPrimeNgBase;\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        {{ item.label | translate }}\n      \n      \n        {{item.label | translate}}\n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                @import \"./src/styles\";\n\n.header-background-color{\n  background-color: $header-background-color\n}\n\n.text-align-center{\n  text-align: center;\n}\n\n:host {\n  ::ng-deep .ui-dropdown-panel .ui-dropdown-items .ui-dropdown-item.ui-state-highlight {\n    background-color: white !important;\n    color: black;\n    font-weight: bold;\n  }\n}\n\n.header-shadow {\n  box-shadow: 0 3px 10px 0 rgba( 0, 0, 0, 0.3);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ item.label | translate }}                    {{item.label | translate}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_imports\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderTitleComponent\n\nHeaderTitleComponent\n\nHeaderModule -->\n\nHeaderTitleComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderTitleComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nHeaderModule -->\n\nNavigationModule->HeaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/header/header.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                        \n                            HeaderTitleComponent\n                        \n                        \n                            HeaderTitleComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            NavigationModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ButtonModule, DropdownModule, SidebarModule} from 'primeng';\nimport {NavigationModule} from '../navigation/navigation.module';\nimport {HeaderTitleComponent} from './header-title/header-title.component';\nimport { HeaderComponent } from './header.component';\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    HeaderTitleComponent,\n    HeaderTitleComponent\n  ],\n    exports: [\n      HeaderComponent\n    ],\n  imports: [\n    CommonModule,\n    DropdownModule,\n    FormsModule,\n    TranslateModule,\n    SidebarModule,\n    ButtonModule,\n    NavigationModule\n  ]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderTitleComponent.html":{"url":"components/HeaderTitleComponent.html","title":"component - HeaderTitleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderTitleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header-title/header-title.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header-title\n            \n\n            \n                styleUrls\n                ./header-title.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header-title.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                headerAnimationState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                toggleHeaderAnimationState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header-title/header-title.component.ts:21\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header-title/header-title.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleHeaderAnimationState\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleHeaderAnimationState()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header-title/header-title.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            headerAnimationState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'middle'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/header/header-title/header-title.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Component, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-header-title',\n  templateUrl: './header-title.component.html',\n  styleUrls: ['./header-title.component.scss'],\n  animations: [\n    trigger('slideLeftMiddleRight', [\n      state('left', style({transform: 'translateX(-30%) rotate(-10deg)'})),\n      state('middle', style({transform: 'translateX(0%) rotate(0deg)'})),\n      state('right', style({transform: 'translateX(30%) rotate(10deg)'})),\n      transition('left => middle', animate('500ms ease-in')),\n      transition('middle => right', animate('500ms ease-in')),\n      transition('right => left', animate('500ms ease-in'))\n    ])\n  ]\n})\nexport class HeaderTitleComponent implements OnInit {\n\n  headerAnimationState = 'middle';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  toggleHeaderAnimationState() {\n    if (this.headerAnimationState === 'left') {\n      this.headerAnimationState = 'middle';\n    } else if (this.headerAnimationState === 'middle') {\n      this.headerAnimationState = 'right';\n    } else if (this.headerAnimationState === 'right') {\n      this.headerAnimationState = 'left';\n    }\n  }\n}\n\n    \n\n    \n        \n  {{\"application.title\" | translate}}\n\n\n    \n\n    \n                \n                    ./header-title.component.scss\n                \n                @import \"./src/styles\";\n\n.header-title-color{\n  color: $header-title-color\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\"application.title\" | translate}}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderTitleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HelpDialogComponent.html":{"url":"components/HelpDialogComponent.html","title":"component - HelpDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HelpDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/help-dialog/help-dialog.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-help-dialog\n            \n\n            \n                styleUrls\n                ./help-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./help-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dialogVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/help-dialog/help-dialog.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/help-dialog/help-dialog.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dialogVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/help-dialog/help-dialog.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-help-dialog',\n  templateUrl: './help-dialog.component.html',\n  styleUrls: ['./help-dialog.component.scss']\n})\nexport class HelpDialogComponent implements OnInit {\n  dialogVisible: boolean;\n\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n    \n\n    \n        \n\n\n  {{'help.doesntExist' | translate}}\n\n  \n    \n  \n\n\n\n    \n\n    \n                \n                    ./help-dialog.component.scss\n                \n                @import \"./src/styles\";\n\n.fixed-bottom-right{\n  position: fixed;\n  bottom: 1rem;\n  right: 1rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'help.doesntExist\\' | translate}}        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'HelpDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HelpDialogModule.html":{"url":"modules/HelpDialogModule.html","title":"module - HelpDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    HelpDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HelpDialogModule\n\n\n\ncluster_HelpDialogModule_declarations\n\n\n\ncluster_HelpDialogModule_exports\n\n\n\n\nHelpDialogComponent\n\nHelpDialogComponent\n\n\n\nHelpDialogModule\n\nHelpDialogModule\n\nHelpDialogModule -->\n\nHelpDialogComponent->HelpDialogModule\n\n\n\n\n\nHelpDialogComponent \n\nHelpDialogComponent \n\nHelpDialogComponent  -->\n\nHelpDialogModule->HelpDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/help-dialog/help-dialog.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HelpDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HelpDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ButtonModule, DialogModule} from 'primeng';\nimport {HelpDialogComponent} from './help-dialog.component';\n\n@NgModule({\n  declarations: [\n    HelpDialogComponent\n  ],\n  exports: [\n    HelpDialogComponent\n  ],\n  imports: [\n    CommonModule,\n    DialogModule,\n    TranslateModule,\n    ButtonModule\n  ]\n})\nexport class HelpDialogModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/home/home.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./home.component.scss\n                \n                @import \"./src/styles\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomeModule.html":{"url":"modules/HomeModule.html","title":"module - HomeModule","body":"\n                   \n\n\n\n\n    Modules\n    HomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\n\nHomeComponent\n\nHomeComponent\n\n\n\nHomeModule\n\nHomeModule\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/home/home.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  declarations: [\n    HomeComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class HomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExportLog.html":{"url":"interfaces/IExportLog.html","title":"interface - IExportLog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExportLog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/log.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        arg0\n                                \n                                \n                                            Optional\n                                        arg1\n                                \n                                \n                                            Optional\n                                        arg2\n                                \n                                \n                                            Optional\n                                        arg3\n                                \n                                \n                                        callerClass\n                                \n                                \n                                        callerFilename\n                                \n                                \n                                        callerLine\n                                \n                                \n                                        callerMethod\n                                \n                                \n                                        date\n                                \n                                \n                                        formattedMessage\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                        level\n                                \n                                \n                                        loggerName\n                                \n                                \n                                            Optional\n                                        seen\n                                \n                                \n                                            Optional\n                                        threadName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arg0\n                                    \n                                \n                                \n                                    \n                                        arg0:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg1\n                                    \n                                \n                                \n                                    \n                                        arg1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg2\n                                    \n                                \n                                \n                                    \n                                        arg2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg3\n                                    \n                                \n                                \n                                    \n                                        arg3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerClass\n                                    \n                                \n                                \n                                    \n                                        callerClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerFilename\n                                    \n                                \n                                \n                                    \n                                        callerFilename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerLine\n                                    \n                                \n                                \n                                    \n                                        callerLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerMethod\n                                    \n                                \n                                \n                                    \n                                        callerMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedMessage\n                                    \n                                \n                                \n                                    \n                                        formattedMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loggerName\n                                    \n                                \n                                \n                                    \n                                        loggerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seen\n                                    \n                                \n                                \n                                    \n                                        seen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threadName\n                                    \n                                \n                                \n                                    \n                                        threadName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILog {\n  id: number;\n  date: number;\n  formattedMessage: string;\n  loggerName: string;\n  level: string;\n  threadName: string;\n  arg0: string;\n  arg1: string;\n  arg2: string;\n  arg3: string;\n  callerFilename: string;\n  callerClass: string;\n  callerMethod: string;\n  callerLine: string;\n  seen: boolean;\n}\n\nexport interface IExportLog {\n  id?: number;\n  date: number;\n  formattedMessage: string;\n  loggerName: string;\n  level: string;\n  threadName?: string;\n  arg0?: string;\n  arg1?: string;\n  arg2?: string;\n  arg3?: string;\n  callerFilename: string;\n  callerClass: string;\n  callerMethod: string;\n  callerLine: string;\n  seen?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExportUser.html":{"url":"interfaces/IExportUser.html","title":"interface - IExportUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IExportUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        emailAddress\n                                \n                                \n                                        enabled\n                                \n                                \n                                        id\n                                \n                                \n                                        lastLogin\n                                \n                                \n                                        name\n                                \n                                \n                                        password\n                                \n                                \n                                        permissions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailAddress\n                                    \n                                \n                                \n                                    \n                                        emailAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IPermission} from './permission.model';\n\nexport interface IUser {\n  id: number;\n  name: string;\n  emailAddress: string;\n  enabled: boolean;\n  lastLogin: number;\n  permissions: IPermission[];\n}\n\nexport interface IExportUser {\n  id: number;\n  name: string;\n  emailAddress: string;\n  password: string;\n  enabled: boolean;\n  lastLogin: number;\n  permissions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IHttpErrorResponseHandler.html":{"url":"interfaces/IHttpErrorResponseHandler.html","title":"interface - IHttpErrorResponseHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IHttpErrorResponseHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/i-http-error-response.handler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                                \n                                    matches\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/i-http-error-response.handler.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/i-http-error-response.handler.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Observable} from 'rxjs';\n\nexport interface IHttpErrorResponseHandler {\n  matches(error: HttpErrorResponse): boolean;\n  handle(error: HttpErrorResponse): Observable;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJWT.html":{"url":"interfaces/IJWT.html","title":"interface - IJWT","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IJWT\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/jwt.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiresAt\n                                \n                                \n                                        headerName\n                                \n                                \n                                        permissions\n                                \n                                \n                                        token\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresAt\n                                    \n                                \n                                \n                                    \n                                        expiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        headerName\n                                    \n                                \n                                \n                                    \n                                        headerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:         PermissionEnum[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PermissionEnum[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PermissionEnum} from './enum/permission.enum';\n\nexport interface IJWT {\n  headerName: string;\n  token: string;\n  expiresAt: number;\n  permissions: PermissionEnum[];\n  username: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILanguage.html":{"url":"interfaces/ILanguage.html","title":"interface - ILanguage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILanguage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/language.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isoCode\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isoCode\n                                    \n                                \n                                \n                                    \n                                        isoCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILanguage {\n  name: string;\n  isoCode: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILog.html":{"url":"interfaces/ILog.html","title":"interface - ILog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/log.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        arg0\n                                \n                                \n                                        arg1\n                                \n                                \n                                        arg2\n                                \n                                \n                                        arg3\n                                \n                                \n                                        callerClass\n                                \n                                \n                                        callerFilename\n                                \n                                \n                                        callerLine\n                                \n                                \n                                        callerMethod\n                                \n                                \n                                        date\n                                \n                                \n                                        formattedMessage\n                                \n                                \n                                        id\n                                \n                                \n                                        level\n                                \n                                \n                                        loggerName\n                                \n                                \n                                        seen\n                                \n                                \n                                        threadName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        arg0\n                                    \n                                \n                                \n                                    \n                                        arg0:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg1\n                                    \n                                \n                                \n                                    \n                                        arg1:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg2\n                                    \n                                \n                                \n                                    \n                                        arg2:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        arg3\n                                    \n                                \n                                \n                                    \n                                        arg3:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerClass\n                                    \n                                \n                                \n                                    \n                                        callerClass:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerFilename\n                                    \n                                \n                                \n                                    \n                                        callerFilename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerLine\n                                    \n                                \n                                \n                                    \n                                        callerLine:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        callerMethod\n                                    \n                                \n                                \n                                    \n                                        callerMethod:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formattedMessage\n                                    \n                                \n                                \n                                    \n                                        formattedMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loggerName\n                                    \n                                \n                                \n                                    \n                                        loggerName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seen\n                                    \n                                \n                                \n                                    \n                                        seen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        threadName\n                                    \n                                \n                                \n                                    \n                                        threadName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILog {\n  id: number;\n  date: number;\n  formattedMessage: string;\n  loggerName: string;\n  level: string;\n  threadName: string;\n  arg0: string;\n  arg1: string;\n  arg2: string;\n  arg3: string;\n  callerFilename: string;\n  callerClass: string;\n  callerMethod: string;\n  callerLine: string;\n  seen: boolean;\n}\n\nexport interface IExportLog {\n  id?: number;\n  date: number;\n  formattedMessage: string;\n  loggerName: string;\n  level: string;\n  threadName?: string;\n  arg0?: string;\n  arg1?: string;\n  arg2?: string;\n  arg3?: string;\n  callerFilename: string;\n  callerClass: string;\n  callerMethod: string;\n  callerLine: string;\n  seen?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogFilter.html":{"url":"interfaces/ILogFilter.html","title":"interface - ILogFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ILogFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/log-filter.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        level\n                                \n                                \n                                        seen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                    \n                                \n                                \n                                    \n                                        level:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seen\n                                    \n                                \n                                \n                                    \n                                        seen:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ILogFilter {\n  level: string[];\n  seen: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPermission.html":{"url":"interfaces/IPermission.html","title":"interface - IPermission","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPermission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/permission.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPermission {\n  id: number;\n  name: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPrimeNgBase.html":{"url":"interfaces/IPrimeNgBase.html","title":"interface - IPrimeNgBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IPrimeNgBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/primeng-base.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        field\n                                \n                                \n                                        label\n                                \n                                \n                                            Optional\n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IPrimeNgBase {\n  label: string;\n  field: string;\n  value?: any;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUser.html":{"url":"interfaces/IUser.html","title":"interface - IUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        emailAddress\n                                \n                                \n                                        enabled\n                                \n                                \n                                        id\n                                \n                                \n                                        lastLogin\n                                \n                                \n                                        name\n                                \n                                \n                                        permissions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        emailAddress\n                                    \n                                \n                                \n                                    \n                                        emailAddress:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enabled\n                                    \n                                \n                                \n                                    \n                                        enabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                    \n                                \n                                \n                                    \n                                        lastLogin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:         IPermission[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IPermission[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {IPermission} from './permission.model';\n\nexport interface IUser {\n  id: number;\n  name: string;\n  emailAddress: string;\n  enabled: boolean;\n  lastLogin: number;\n  permissions: IPermission[];\n}\n\nexport interface IExportUser {\n  id: number;\n  name: string;\n  emailAddress: string;\n  password: string;\n  enabled: boolean;\n  lastLogin: number;\n  permissions: number[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImprintComponent.html":{"url":"components/ImprintComponent.html","title":"component - ImprintComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImprintComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/imprint/imprint.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-imprint\n            \n\n            \n                styleUrls\n                ./imprint.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./imprint.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/imprint/imprint.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/imprint/imprint.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-imprint',\n  templateUrl: './imprint.component.html',\n  styleUrls: ['./imprint.component.scss']\n})\nexport class ImprintComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        {{\"impress.contact-address-title\" | translate}}\n      \n      {{\"owner.name\" | translate}}\n        {{\"owner.address\" | translate}}\n        {{\"owner.city\" | translate}}\n        {{\"owner.country\" | translate}}\n      \n      {{\"impress.email-title\" | translate}}{{\"owner.email\" | translate}}\n      \n    \n\n    \n      \n        {{\"impress.disclaimer-of-liability-title\" | translate}}\n      \n      {{\"impress.disclaimer-of-liability-1\" | translate}}\n      {{\"impress.disclaimer-of-liability-2\" | translate}}\n      {{\"impress.disclaimer-of-liability-3\" | translate}}\n    \n\n    \n      \n        {{\"impress.disclaimer-of-liability-for-links-title\" | translate}}\n      \n      {{\"impress.disclaimer-of-liability-for-links\" | translate}}\n    \n\n    \n      \n        {{\"impress.copyrights-title\" | translate}}\n      \n      {{\"impress.copyrights\" | translate}}\n    \n\n    \n      {{\"impress.source-title\" | translate}}\n      {{\"impress.source\" | translate}}\n    \n\n    \n      {{\"general.translation-title\" | translate}}\n      {{\"general.translation-description\" | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./imprint.component.scss\n                \n                @import \"./src/styles\";\n\n:host {\n  ::ng-deep .ui-card {\n    margin-bottom: 3vh;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{\"impress.contact-address-title\" | translate}}            {{\"owner.name\" | translate}}        {{\"owner.address\" | translate}}        {{\"owner.city\" | translate}}        {{\"owner.country\" | translate}}            {{\"impress.email-title\" | translate}}{{\"owner.email\" | translate}}                            {{\"impress.disclaimer-of-liability-title\" | translate}}            {{\"impress.disclaimer-of-liability-1\" | translate}}      {{\"impress.disclaimer-of-liability-2\" | translate}}      {{\"impress.disclaimer-of-liability-3\" | translate}}                      {{\"impress.disclaimer-of-liability-for-links-title\" | translate}}            {{\"impress.disclaimer-of-liability-for-links\" | translate}}                      {{\"impress.copyrights-title\" | translate}}            {{\"impress.copyrights\" | translate}}              {{\"impress.source-title\" | translate}}      {{\"impress.source\" | translate}}              {{\"general.translation-title\" | translate}}      {{\"general.translation-description\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImprintComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ImprintModule.html":{"url":"modules/ImprintModule.html","title":"module - ImprintModule","body":"\n                   \n\n\n\n\n    Modules\n    ImprintModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ImprintModule\n\n\n\ncluster_ImprintModule_declarations\n\n\n\ncluster_ImprintModule_exports\n\n\n\n\nImprintComponent\n\nImprintComponent\n\n\n\nImprintModule\n\nImprintModule\n\nImprintModule -->\n\nImprintComponent->ImprintModule\n\n\n\n\n\nImprintComponent \n\nImprintComponent \n\nImprintComponent  -->\n\nImprintModule->ImprintComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/imprint/imprint.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ImprintComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ImprintComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {CardModule} from 'primeng';\nimport { ImprintComponent } from './imprint.component';\n\n@NgModule({\n  declarations: [\n    ImprintComponent\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    CardModule\n  ],\n  exports: [\n    ImprintComponent\n  ]\n})\nexport class ImprintModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageConfig.html":{"url":"injectables/LanguageConfig.html","title":"injectable - LanguageConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LanguageConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/language.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current\n                            \n                            \n                                defaultLanguage\n                            \n                            \n                                    Private\n                                fromLocalStorage\n                            \n                            \n                                    Private\n                                getBrowserLanguage\n                            \n                            \n                                    Private\n                                getFromList\n                            \n                            \n                                languages\n                            \n                            \n                                localStorageKey\n                            \n                            \n                                    Private\n                                setInitLanguage\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Public\n                                translate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/language.config.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            current\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILanguage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILanguage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fromLocalStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getBrowserLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getFromList\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILanguage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'languageIso'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setInitLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/language.config.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ILanguage} from './models/language.model';\n\nexport const languages: ILanguage[] = [\n  {\n    name: 'language.english',\n    isoCode: 'en'\n  } as ILanguage\n  , {\n    name: 'language.german',\n    isoCode: 'de'\n  } as ILanguage\n];\n\nexport const defaultLanguage: ILanguage = {\n  name: 'language.english',\n  isoCode: 'en'\n} as ILanguage;\n\n@Injectable()\nexport class LanguageConfig {\n\n  localStorageKey = 'languageIso';\n  languages: ILanguage[];\n  current: ILanguage;\n  defaultLanguage: ILanguage;\n\n  @Output() languageChanged: EventEmitter = new EventEmitter();\n\n  constructor(\n    public translate: TranslateService\n  ) {\n    this.languages = languages;\n    this.defaultLanguage = defaultLanguage;\n    this.translate.setDefaultLang(defaultLanguage.isoCode);\n    this.setInitLanguage();\n  }\n\n  setLanguage = (language: ILanguage) => {\n    localStorage.setItem(this.localStorageKey, language.isoCode);\n    this.current = language;\n    this.translate.use(language.isoCode);\n    this.languageChanged.emit(language);\n  }\n\n  private setInitLanguage = (): void => {\n    let language = this.fromLocalStorage();\n    if (language) {\n      this.setLanguage(language);\n      return;\n    }\n\n    language = this.getBrowserLanguage();\n    if (language) {\n      this.setLanguage(language);\n      return;\n    }\n\n    this.setLanguage(this.languages[0]);\n  }\n\n  private getBrowserLanguage = (): ILanguage => {\n    const browserLanguage = this.translate.getBrowserLang();\n    return this.getFromList(browserLanguage);\n  }\n\n  private fromLocalStorage = (): ILanguage => {\n    const language = localStorage.getItem(this.localStorageKey);\n    if (language) {\n      return this.getFromList(language);\n    }\n  }\n\n  private getFromList = (isoCode: string): ILanguage => {\n    return this.languages.find((curr) => curr.isoCode === isoCode);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/local-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                logException\n                            \n                            \n                                removeItem\n                            \n                            \n                                setKeyAndValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/local-storage.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/local-storage.service.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/local-storage.service.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/local-storage.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setKeyAndValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/local-storage.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {AppService} from '../../app.service';\nimport {LogLevel} from '../models/enum/logLevel.enum';\nimport {IExportLog} from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor(private injector: Injector) {\n  }\n\n  setKeyAndValue = (key: string, value: string) => {\n    try {\n      localStorage.setItem(key, value);\n    } catch (e) {\n      this.logException(e, 'setKeyAndValue');\n    }\n  }\n\n  getValue = (localStorageKey: string): string | undefined => {\n    try {\n      return localStorage.getItem(localStorageKey);\n    } catch (e) {\n      this.logException(e, 'getValue');\n    }\n    return undefined;\n  }\n\n  removeItem = (key: string) => {\n    try {\n      localStorage.removeItem(key);\n    } catch (e) {\n      this.logException(e, 'removeItem');\n    }\n  }\n\n  private logException = (exception, method: string) => {\n    const appService = this.injector.get(AppService);\n    const log: IExportLog = {\n      loggerName: 'angular',\n      date: Date.now(),\n      callerClass: 'LocalStorageService',\n      callerFilename: 'LocalStorageService',\n      callerLine: '0',\n      callerMethod: method,\n      formattedMessage: exception.message ? exception.message : exception.toString(),\n      level: LogLevel.WARN\n    };\n\n    appService.log(log);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingComponent.html":{"url":"components/LoggingComponent.html","title":"component - LoggingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/logs/logging.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logging\n            \n\n            \n                styleUrls\n                ./logging.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filterDialogVisible\n                            \n                            \n                                filterLevelCollapsed\n                            \n                            \n                                filterLevelCollapsedEvent\n                            \n                            \n                                filterSeenCollapsed\n                            \n                            \n                                filterSeenCollapsedEvent\n                            \n                            \n                                    Private\n                                getLevels\n                            \n                            \n                                initCols\n                            \n                            \n                                    Private\n                                initFromLocalStorage\n                            \n                            \n                                initLogContextMenuItems\n                            \n                            \n                                levels\n                            \n                            \n                                    Private\n                                loadvisibleSelectedColumns\n                            \n                            \n                                localStorageKeyVisibleSelectedColumns\n                            \n                            \n                                logContextMenuItems\n                            \n                            \n                                logFilterDialogHide\n                            \n                            \n                                logFilterDialogShow\n                            \n                            \n                                logs\n                            \n                            \n                                searchLogs\n                            \n                            \n                                seenInputSwitch\n                            \n                            \n                                selectedLevels\n                            \n                            \n                                selectedLog\n                            \n                            \n                                sessionStorageKeyFilterDialogVisible\n                            \n                            \n                                sessionStorageKeyFilterLevelCollapsed\n                            \n                            \n                                sessionStorageKeyFilterSeenCollapsed\n                            \n                            \n                                setSeen\n                            \n                            \n                                tableCols\n                            \n                            \n                                visibleColsChanged\n                            \n                            \n                                visibleSelectedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, localStorageService: LocalStorageService, sessionStorageService: SessionStorageService, languageConfig: LanguageConfig, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/logs/logging.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                        LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sessionStorageService\n                                                  \n                                                        \n                                                                        SessionStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageConfig\n                                                  \n                                                        \n                                                                        LanguageConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/logs/logging.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterDialogVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterLevelCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterLevelCollapsedEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:138\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSeenCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterSeenCollapsedEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:142\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getLevels\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:83\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initFromLocalStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:132\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initLogContextMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            levels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadvisibleSelectedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:120\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageKeyVisibleSelectedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'visibleSelectedColumnsLogs'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logContextMenuItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logFilterDialogHide\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logFilterDialogShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:150\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILog[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchLogs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            seenInputSwitch\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLevels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedLog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorageKeyFilterDialogVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'filterDialogVisible'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorageKeyFilterLevelCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'filterLevelCollapsed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sessionStorageKeyFilterSeenCollapsed\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'filterSeenCollapsed'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSeen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:103\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tableCols\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibleColsChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:114\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            visibleSelectedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.component.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MenuItem} from 'primeng';\nimport {LanguageConfig} from '../core/language.config';\nimport {ILogFilter} from '../core/models/log-filter.model';\nimport {ILog} from '../core/models/log.model';\nimport {IPrimeNgBase} from '../core/models/primeng-base.model';\nimport {LocalStorageService} from '../core/services/local-storage.service';\nimport {SessionStorageService} from '../core/services/session-storage.service';\nimport {LoggingService} from './logging.service';\n\n@Component({\n  selector: 'app-logging',\n  templateUrl: './logging.component.html',\n  styleUrls: ['./logging.component.scss'],\n})\nexport class LoggingComponent implements OnInit {\n\n  logs: ILog[];\n\n  tableCols: IPrimeNgBase[];\n  visibleSelectedColumns: IPrimeNgBase[];\n  selectedLog: ILog;\n\n  levels: IPrimeNgBase[];\n  selectedLevels: IPrimeNgBase[] = [];\n\n  localStorageKeyVisibleSelectedColumns = 'visibleSelectedColumnsLogs';\n  seenInputSwitch = false;\n\n  logContextMenuItems: MenuItem[];\n\n  filterDialogVisible = false;\n  sessionStorageKeyFilterDialogVisible = 'filterDialogVisible';\n\n  filterLevelCollapsed = true;\n  sessionStorageKeyFilterLevelCollapsed = 'filterLevelCollapsed';\n\n  filterSeenCollapsed = true;\n  sessionStorageKeyFilterSeenCollapsed = 'filterSeenCollapsed';\n\n  constructor(\n    private loggingService: LoggingService,\n    private localStorageService: LocalStorageService,\n    private sessionStorageService: SessionStorageService,\n    private languageConfig: LanguageConfig,\n    private translate: TranslateService\n  ) {\n    this.languageConfig.languageChanged.subscribe(() => {\n      this.logContextMenuItems = this.initLogContextMenuItems();\n    });\n  }\n\n  ngOnInit(): void {\n    this.tableCols = this.initCols();\n    this.logContextMenuItems = this.initLogContextMenuItems();\n    this.getLevels();\n    this.visibleSelectedColumns = this.loadvisibleSelectedColumns();\n    this.initFromLocalStorage();\n  }\n\n  searchLogs = (): void => {\n    const filter: ILogFilter = {level: this.selectedLevels.map((value) => value.label), seen: this.seenInputSwitch};\n    this.loggingService.getLogs(filter).toPromise().then((logs) => this.logs = logs);\n  }\n\n  private getLevels = (): IPrimeNgBase | undefined => {\n    this.loggingService.getAllLevels().toPromise().then((levels) => {\n      const levelArray = levels as string[];\n      this.levels = levelArray.map((level) => {\n        return {label: level, field: level} as IPrimeNgBase;\n      });\n    });\n    return undefined;\n  }\n\n  initLogContextMenuItems = (): MenuItem[] => {\n    return [\n      {label: this.translate.instant('log.seen'), icon: 'pi pi-search', command: () => this.setSeen(this.selectedLog)} as MenuItem,\n    ];\n  }\n\n  initCols = (): IPrimeNgBase[] => {\n    return [\n      {field: 'id', label: 'log.id'} as IPrimeNgBase,\n      {field: 'date', label: 'log.date'} as IPrimeNgBase,\n      {field: 'formattedMessage', label: 'log.formattedMessage'} as IPrimeNgBase,\n      {field: 'loggerName', label: 'log.loggerName'} as IPrimeNgBase,\n      {field: 'level', label: 'log.level'} as IPrimeNgBase,\n      {field: 'threadName', label: 'log.threadName'} as IPrimeNgBase,\n      {field: 'arg0', label: 'log.arg0'} as IPrimeNgBase,\n      {field: 'arg1', label: 'log.arg1'} as IPrimeNgBase,\n      {field: 'arg2', label: 'log.arg2'} as IPrimeNgBase,\n      {field: 'arg3', label: 'log.arg3'} as IPrimeNgBase,\n      {field: 'callerFilename', label: 'log.callerFilename'} as IPrimeNgBase,\n      {field: 'callerClass', label: 'log.callerClass'} as IPrimeNgBase,\n      {field: 'callerMethod', label: 'log.callerMethod'} as IPrimeNgBase,\n      {field: 'callerLine', label: 'log.callerLine'} as IPrimeNgBase,\n      {field: 'seen', label: 'log.seen'} as IPrimeNgBase,\n    ];\n  }\n\n  setSeen = (log: ILog) => {\n    this.loggingService.setSeen(log.id, !log.seen).subscribe(\n      () => {\n        const index = this.logs.findIndex((searchlog) => searchlog.id === log.id);\n        if (index > -1) {\n          this.logs.splice(index, 1);\n        }\n      }\n    );\n  }\n\n  visibleColsChanged = () => {\n    this.localStorageService.setKeyAndValue(\n      this.localStorageKeyVisibleSelectedColumns,\n      this.visibleSelectedColumns.map((a) => a.label).join());\n  }\n\n  private loadvisibleSelectedColumns = (): IPrimeNgBase[] => {\n    const localStorageString = this.localStorageService.getValue(this.localStorageKeyVisibleSelectedColumns);\n    if (localStorageString) {\n      const stringarray = localStorageString.substring(0, localStorageString.length).split(',');\n      return stringarray.map((value) => {\n        const tableobject: IPrimeNgBase = {field: value.substr(4, value.length - 1), label: value};\n        return tableobject;\n      });\n    }\n    return [];\n  }\n\n  private initFromLocalStorage = () => {\n    this.filterLevelCollapsed = this.sessionStorageService.getValue(this.sessionStorageKeyFilterLevelCollapsed) === 'true';\n    this.filterSeenCollapsed = this.sessionStorageService.getValue(this.sessionStorageKeyFilterSeenCollapsed) === 'true';\n    this.filterDialogVisible = this.sessionStorageService.getValue(this.sessionStorageKeyFilterDialogVisible) === 'true';\n  }\n\n  filterLevelCollapsedEvent = (event: any) => {\n    this.sessionStorageService.setKeyAndValue(this.sessionStorageKeyFilterLevelCollapsed, event.collapsed);\n  }\n\n  filterSeenCollapsedEvent = (event: any) => {\n    this.sessionStorageService.setKeyAndValue(this.sessionStorageKeyFilterSeenCollapsed, event.collapsed);\n  }\n\n  logFilterDialogHide = () => {\n    this.sessionStorageService.setKeyAndValue(this.sessionStorageKeyFilterDialogVisible, 'false');\n  }\n\n  logFilterDialogShow = () => {\n    this.sessionStorageService.setKeyAndValue(this.sessionStorageKeyFilterDialogVisible, 'true');\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n\n        \n          \n            \n              \n                {{'log.chooseColumns' | translate}}\n              \n              \n                {{selectedItem.label | translate}},\n              \n            \n            \n              {{item.label | translate}}\n            \n          \n\n        \n\n        \n          \n        \n\n      \n    \n  \n\n  \n    \n      \n    \n  \n\n  \n    \n      \n      \n        {{col.label | translate}}\n      \n    \n  \n\n  \n    \n      \n        \n          \n        \n      \n      \n        \n          {{rowData[col.field] | customDate}}\n        \n        {{rowData[col.field]}}\n      \n    \n  \n\n  \n    \n      \n        \n          \n            \n              \n                {{col.label | translate}}: {{rowData[col.field]}}\n              \n            \n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n\n\n  \n    \n\n      \n        \n        \n      \n    \n\n    \n      \n        \n      \n    \n\n    \n        \n    \n  \n\n\n\n    \n\n    \n                \n                    ./logging.component.scss\n                \n                @import \"./src/styles\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        {{\\'log.chooseColumns\\' | translate}}                                            {{selectedItem.label | translate}},                                                    {{item.label | translate}}                                                                                                                {{col.label | translate}}                                                                                {{rowData[col.field] | customDate}}                {{rowData[col.field]}}                                                                                    {{col.label | translate}}: {{rowData[col.field]}}                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoggingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggingModule.html":{"url":"modules/LoggingModule.html","title":"module - LoggingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggingModule\n\n\n\ncluster_LoggingModule_declarations\n\n\n\n\nLoggingComponent\n\nLoggingComponent\n\n\n\nLoggingModule\n\nLoggingModule\n\nLoggingModule -->\n\nLoggingComponent->LoggingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/logs/logging.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoggingComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ContextMenuModule, DialogModule, FieldsetModule, InputSwitchModule, MultiSelectModule, TableModule, TooltipModule} from 'primeng';\nimport {ButtonModule} from 'primeng/button';\nimport {PipeModule} from '../core/pipes/pipe.module';\nimport { LoggingComponent } from './logging.component';\n\n@NgModule({\n  declarations: [\n    LoggingComponent,\n  ],\n  exports: [\n  ],\n  imports: [\n    CommonModule,\n    ButtonModule,\n    TableModule,\n    TranslateModule,\n    MultiSelectModule,\n    FormsModule,\n    InputSwitchModule,\n    ContextMenuModule,\n    DialogModule,\n    FieldsetModule,\n    TooltipModule,\n    PipeModule,\n  ]\n})\nexport class LoggingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingService.html":{"url":"injectables/LoggingService.html","title":"injectable - LoggingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/logs/logging.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getAllLevels\n                            \n                            \n                                getLogs\n                            \n                            \n                                setSeen\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/logs/logging.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllLevels\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLogs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setSeen\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/logs/logging.service.ts:21\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {ILogFilter} from '../core/models/log-filter.model';\nimport {ILog} from '../core/models/log.model';\nimport {ApiService} from '../core/services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoggingService {\n  constructor(private apiService: ApiService) { }\n\n  getLogs = (filter: ILogFilter): Observable => {\n    return this.apiService.getAll('/logs', true, filter);\n  }\n\n  getAllLevels = () => {\n    return this.apiService.getAll('/logs/levels');\n  }\n\n  setSeen = (id: number, seen: boolean): Observable => {\n    return this.apiService.postAll('/logs/' + id + '/seen', seen);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/login/login.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disableUsernameIfDisabledFlagTrue\n                            \n                            \n                                    Private\n                                enableUsernameIfDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                sendLoginRequest\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loginName\n                            \n                            \n                                loginNameDisabled\n                            \n                            \n                                onLoginSuccess\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, formBuilder: FormBuilder, routernavigationService: RouternavigationService, loginService: LoginService)\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routernavigationService\n                                                  \n                                                        \n                                                                        RouternavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loginName\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginNameDisabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onLoginSuccess\n                    \n                \n                \n                    \n                        Default value : (data: any) => {\n    this.authService.setSession(data);\n    this.loginService.emitLogin();\n    this.routernavigationService.homeNavigate();\n  }\n                    \n                \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:32\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            disableUsernameIfDisabledFlagTrue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disableUsernameIfDisabledFlagTrue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            enableUsernameIfDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableUsernameIfDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            sendLoginRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendLoginRequest()\n                \n            \n\n\n            \n                \n                    Defined in src/app/login/login.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, Input, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../core/services/auth.service';\nimport {RouternavigationService} from '../core/services/routernavigation.service';\nimport {LoginService} from './login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit, OnChanges {\n\n  constructor(\n    private authService: AuthService,\n    private formBuilder: FormBuilder,\n    private routernavigationService: RouternavigationService,\n    private loginService: LoginService\n  ) {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  loginForm: FormGroup;\n\n  @Input() loginName = '';\n\n  @Input() loginNameDisabled = false;\n\n  @Input() onLoginSuccess = (data: any) => {\n    this.authService.setSession(data);\n    this.loginService.emitLogin();\n    this.routernavigationService.homeNavigate();\n  }\n\n  ngOnInit(): void {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes?.loginName?.currentValue) {\n      this.loginForm.setValue({\n        username: changes.loginName.currentValue,\n        password: ''\n      });\n    }\n    if (changes?.loginNameDisabled?.currentValue) {\n      this.loginForm.controls.username.disable(\n        changes?.loginNameDisabled?.currentValue\n      );\n    }\n  }\n\n  login = () => {\n    this.enableUsernameIfDisabled();\n    this.sendLoginRequest();\n    this.disableUsernameIfDisabledFlagTrue();\n  }\n\n  private sendLoginRequest() {\n    this.authService.login(\n      this.loginForm.value.username,\n      this.loginForm.value.password\n    ).subscribe(\n      (data) => {\n        if (data !== null && !Array.isArray(data)) {\n          this.onLoginSuccess(data);\n        }\n        this.loginForm.reset();\n      }\n    );\n  }\n\n  private disableUsernameIfDisabledFlagTrue() {\n    if (this.loginNameDisabled) {\n      this.loginForm.controls.username.disable();\n    }\n  }\n\n  private enableUsernameIfDisabled() {\n    if (this.loginForm.controls.username.disabled) {\n      this.loginForm.controls.username.enable();\n    }\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n        \n        \n      \n    \n  \n\n  \n    \n      \n        \n        \n      \n    \n  \n\n  \n    \n      \n        \n      \n    \n  \n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                @import \"./src/styles\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nLoginModule->LoginComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/login/login.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ButtonModule, InputTextModule} from 'primeng';\nimport {LoginComponent} from './login.component';\n\n@NgModule({\n    declarations: [\n        LoginComponent\n    ],\n    exports: [\n        LoginComponent\n    ],\n    imports: [\n        CommonModule,\n        InputTextModule,\n        TranslateModule,\n        ReactiveFormsModule,\n        ButtonModule\n    ]\n})\nexport class LoginModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/login/login.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emitLogin\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/login/login.service.ts:8\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/login/login.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  @Output() loginEmitter: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  emitLogin = () => {\n    this.loginEmitter.emit();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MethodNotAllowedErrorHandler.html":{"url":"injectables/MethodNotAllowedErrorHandler.html","title":"injectable - MethodNotAllowedErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MethodNotAllowedErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/method-not-allowed-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/method-not-allowed-error.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/method-not-allowed-error.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/method-not-allowed-error.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/method-not-allowed-error.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/method-not-allowed-error.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class MethodNotAllowedErrorHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return error.status === 405;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.405.name'),\n          message: this.translate.instant('error.405.message')\n        } as Error\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationComponent.html":{"url":"components/NavigationComponent.html","title":"component - NavigationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavigationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/navigation/navigation.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navigation\n            \n\n            \n                styleUrls\n                ./navigation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                navItems\n                            \n                            \n                                setItems\n                            \n                            \n                                sidebarVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService, authService: AuthService, languageConfig: LanguageConfig, loginService: LoginService, routernavigationService: RouternavigationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/navigation/navigation.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        languageConfig\n                                                  \n                                                        \n                                                                        LanguageConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        routernavigationService\n                                                  \n                                                        \n                                                                        RouternavigationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/navigation/navigation.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MenuItem[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sidebarVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/navigation/navigation.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MenuItem} from 'primeng';\nimport {LanguageConfig} from '../core/language.config';\nimport {PermissionEnum} from '../core/models/enum/permission.enum';\nimport {AuthService} from '../core/services/auth.service';\nimport {RouternavigationService} from '../core/services/routernavigation.service';\nimport {LoginService} from '../login/login.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss'],\n})\nexport class NavigationComponent implements OnInit {\n\n  navItems: MenuItem[];\n  sidebarVisible: boolean;\n\n  constructor(\n    private translate: TranslateService,\n    public authService: AuthService,\n    private languageConfig: LanguageConfig,\n    private loginService: LoginService,\n    private routernavigationService: RouternavigationService\n  ) {\n    this.languageConfig.languageChanged.subscribe(() => {\n      this.setItems();\n    });\n\n    this.loginService.loginEmitter.subscribe(() => {\n      this.setItems();\n    });\n  }\n\n  ngOnInit(): void {\n    this.setItems();\n  }\n\n  setItems = (): void => {\n    this.navItems = [\n      {\n        label: this.translate.instant('navigation.home'),\n        icon: 'pi pi-home',\n        command: () => {\n          this.sidebarVisible = false;\n          this.routernavigationService.homeNavigate();\n        }\n      } as MenuItem,\n      {\n        label: this.translate.instant('navigation.usersettings'),\n        icon: 'pi pi-user-edit',\n        command: () => {\n          this.sidebarVisible = false;\n          this.routernavigationService.usersettingsNavigate();\n        }\n      } as MenuItem,\n      {\n        label: this.translate.instant('navigation.logs'),\n        icon: 'pi pi-info',\n        command: () => {\n          this.sidebarVisible = false;\n          this.routernavigationService.logmanagementNavigate();\n        },\n        visible: this.authService.hasAnyPermission([PermissionEnum.SEE_LOGS, PermissionEnum.ADMIN])\n      } as MenuItem,\n      {\n        label: this.translate.instant('navigation.imprint'),\n        icon: 'pi pi-info',\n        command: () => {\n          this.sidebarVisible = false;\n          this.routernavigationService.imprintNavigate();\n        }\n      } as MenuItem,\n      {\n        label: this.translate.instant('navigation.privacy-policy'),\n        icon: 'pi pi-info',\n        command: () => {\n          this.sidebarVisible = false;\n          this.routernavigationService.privacyPolicyNavigate();\n        }\n      } as MenuItem,\n      {\n        label: this.translate.instant('navigation.logout'),\n        icon: 'pi pi-power-off',\n        command: () => {\n          this.authService.logout();\n          this.sidebarVisible = false;\n        }\n      } as MenuItem\n    ] as MenuItem[];\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n\n\n\n    \n\n    \n                \n                    ./navigation.component.scss\n                \n                @import \"./src/styles\";\n\n.text-align-left {\n  text-align: left !important;\n}\n\n:host {\n  ::ng-deep .ui-slidemenu .ui-menuitem-link.ui-menuitem-link-active .ui-menuitem-text {\n    color: $header-background-color !important;\n  }\n\n  ::ng-deep .ui-slidemenu .ui-menuitem-link.ui-menuitem-link-active .ui-menuitem-icon {\n    color: $header-background-color !important;\n  }\n\n  ::ng-deep * {\n    &:focus, &.focus,\n    &:active, &.active {\n      outline: transparent none 0 !important;\n      box-shadow: 0 0 0 0 rgba(0,123,255,0) !important;\n      -webkit-box-shadow: none !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'NavigationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationModule.html":{"url":"modules/NavigationModule.html","title":"module - NavigationModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\n\n\nNavigationModule\n\nNavigationModule\n\nNavigationModule -->\n\nNavigationComponent->NavigationModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nNavigationModule->NavigationComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/navigation/navigation.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ButtonModule, MenuModule, SidebarModule, SlideMenuModule} from 'primeng';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n    declarations: [\n      NavigationComponent\n    ],\n    exports: [\n        NavigationComponent\n    ],\n  imports: [\n    CommonModule,\n    SidebarModule,\n    TranslateModule,\n    ButtonModule,\n    MenuModule,\n    SlideMenuModule\n  ]\n})\nexport class NavigationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NoConnectionErrorHandler.html":{"url":"injectables/NoConnectionErrorHandler.html","title":"injectable - NoConnectionErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NoConnectionErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/no-connection-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/no-connection-error.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/no-connection-error.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/no-connection-error.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/no-connection-error.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/no-connection-error.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class NoConnectionErrorHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return true;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.noConnection.name'),\n          message: this.translate.instant('error.noConnection.message')\n        } as Error\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotFoundErrorHandler.html":{"url":"injectables/NotFoundErrorHandler.html","title":"injectable - NotFoundErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotFoundErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/not-found-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/not-found-error.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/not-found-error.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/not-found-error.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/not-found-error.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/not-found-error.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class NotFoundErrorHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return error.status === 404;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.404.name'),\n          message: this.translate.instant('error.404.message')\n        } as Error\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipeModule.html":{"url":"modules/PipeModule.html","title":"module - PipeModule","body":"\n                   \n\n\n\n\n    Modules\n    PipeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PipeModule\n\n\n\ncluster_PipeModule_declarations\n\n\n\ncluster_PipeModule_exports\n\n\n\n\nCustomDatePipe\n\nCustomDatePipe\n\n\n\nPipeModule\n\nPipeModule\n\nPipeModule -->\n\nCustomDatePipe->PipeModule\n\n\n\n\n\nCustomDatePipe \n\nCustomDatePipe \n\nCustomDatePipe  -->\n\nPipeModule->CustomDatePipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/pipe.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CustomDatePipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CustomDatePipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CustomDatePipe} from './CustomDate';\n\n@NgModule({\n  declarations: [CustomDatePipe],\n  exports: [CustomDatePipe]\n})\nexport class PipeModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PrivacyPolicyComponent.html":{"url":"components/PrivacyPolicyComponent.html","title":"component - PrivacyPolicyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PrivacyPolicyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/privacy-policy/privacy-policy.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-privacy-policy\n            \n\n            \n                styleUrls\n                ./privacy-policy.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./privacy-policy.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/privacy-policy/privacy-policy.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/privacy-policy/privacy-policy.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-privacy-policy',\n  templateUrl: './privacy-policy.component.html',\n  styleUrls: ['./privacy-policy.component.scss']\n})\nexport class PrivacyPolicyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n\n    \n      {{\"privacy-policy.privacy-policy\" | translate}}\n      {{\"privacy-policy.responsible-spot\" | translate}}\n      \n      {{\"owner.name\" | translate}}{{\"owner.address\" | translate}}{{\"owner.city\" | translate}}\n      {{\"owner.phone\" | translate}} {{\"owner.phone\" | translate}}{{\"owner.email\" | translate}} {{\"owner.email\" | translate}}{{\"owner.website\" | translate}} {{\"owner.domain\" | translate}}\n    \n\n    \n      {{\"privacy-policy.general-information-title\" | translate}}\n      {{\"privacy-policy.general-information-1\" | translate}}\n      {{\"privacy-policy.general-information-2\" | translate}}\n      {{\"privacy-policy.general-information-3\" | translate}}\n      {{\"privacy-policy.general-information-4\" | translate}}\n    \n\n    \n      {{\"privacy-policy.processing-personal-data-title\" | translate}}\n      {{\"privacy-policy.processing-personal-data-1\" | translate}}\n      {{\"privacy-policy.processing-personal-data-2\" | translate}}\n      \n        {{\"privacy-policy.processing-personal-data-2-li1\" | translate}}\n        {{\"privacy-policy.processing-personal-data-2-li2\" | translate}}\n        {{\"privacy-policy.processing-personal-data-2-li3\" | translate}}\n        {{\"privacy-policy.processing-personal-data-2-li4\" | translate}}\n        {{\"privacy-policy.processing-personal-data-2-li5\" | translate}}\n      \n      {{\"privacy-policy.processing-personal-data-3\" | translate}}\n    \n\n    \n      {{\"privacy-policy.cookies-title\" | translate}}\n      {{\"privacy-policy.cookies-1\" | translate}}\n      {{\"privacy-policy.cookies-2\" | translate}}\n    \n\n    \n    {{\"privacy-policy.ssl-tls-encryption-title\" | translate}}\n    {{\"privacy-policy.ssl-tls-encryption-1\" | translate}}\n    {{\"privacy-policy.ssl-tls-encryption-2\" | translate}}\n    \n\n    \n      {{\"privacy-policy.server-logs-title\" | translate}}\n      {{\"privacy-policy.server-logs-1\" | translate}}\n      \n        {{\"privacy-policy.server-logs-1-li1\" | translate}}\n        {{\"privacy-policy.server-logs-1-li2\" | translate}}\n        {{\"privacy-policy.server-logs-1-li3\" | translate}}\n        {{\"privacy-policy.server-logs-1-li4\" | translate}}\n        {{\"privacy-policy.server-logs-1-li5\" | translate}}\n      \n      {{\"privacy-policy.server-logs-2\" | translate}}\n    \n\n    \n      {{\"privacy-policy.contact-form-title\" | translate}}\n      {{\"privacy-policy.contact-form-1\" | translate}}\n    \n\n    \n      {{\"privacy-policy.rights-data-subjects.title\" | translate}}\n      \n        {{\"privacy-policy.rights-data-subjects.right-confirmation-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-confirmation-1\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-information-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-information-1\" | translate}}\n      \n        {{\"privacy-policy.rights-data-subjects.right-information-1-li1\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li2\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li3\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li4\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li5\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li6\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-information-1-li7\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-information-2\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-information-3\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-rectification-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-rectification-1\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-rectification-2\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-erasure-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-erasure-1\" | translate}}\n      \n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li1\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li2\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li3\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li4\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li5\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li6\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-erasure-2\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1\" | translate}}\n      \n        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li1\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li2\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li3\" | translate}}\n        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li4\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-restriction-processing-2\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-data-portability-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-data-portability-1\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-data-portability-2\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-data-portability-3\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-object-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-object-1\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-object-2\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-object-3\" | translate}}\n      \n      \n        {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-title\" | translate}}\n      \n      {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-1\" | translate}}\n      {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-2\" | translate}}\n    \n\n    \n      {{\"privacy-policy.copyrights-title\" | translate}}\n      {{\"privacy-policy.copyrights-1\" | translate}}\n      {{\"privacy-policy.copyrights-2\" | translate}}\n    \n\n    \n      {{\"privacy-policy.general-disclaimer-title\" | translate}}\n      {{\"privacy-policy.general-disclaimer-1\" | translate}}\n      {{\"privacy-policy.general-disclaimer-2\" | translate}}\n      {{\"privacy-policy.general-disclaimer-3\" | translate}}\n    \n\n    \n      {{\"privacy-policy.modifications-title\" | translate}}\n      {{\"privacy-policy.modifications-1\" | translate}}\n    \n\n    \n      {{\"privacy-policy.questions-data-protection-officer-title\" | translate}}\n      {{\"privacy-policy.questions-data-protection-officer-1\" | translate}}\n    \n\n    \n      {{\"owner.city\" | translate}}, {{\"privacy-policy.last-changed-date\" | translate}}\n        {{\"privacy-policy.source-title\" | translate}} {{\"privacy-policy.source\" | translate}}\n      \n    \n\n    \n      {{\"general.translation-title\" | translate}}\n      {{\"general.translation-description\" | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./privacy-policy.component.scss\n                \n                @import \"./src/styles\";\n\n:host {\n  ::ng-deep .ui-card {\n    margin-bottom: 3vh;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{\"privacy-policy.privacy-policy\" | translate}}      {{\"privacy-policy.responsible-spot\" | translate}}            {{\"owner.name\" | translate}}{{\"owner.address\" | translate}}{{\"owner.city\" | translate}}      {{\"owner.phone\" | translate}} {{\"owner.phone\" | translate}}{{\"owner.email\" | translate}} {{\"owner.email\" | translate}}{{\"owner.website\" | translate}} {{\"owner.domain\" | translate}}              {{\"privacy-policy.general-information-title\" | translate}}      {{\"privacy-policy.general-information-1\" | translate}}      {{\"privacy-policy.general-information-2\" | translate}}      {{\"privacy-policy.general-information-3\" | translate}}      {{\"privacy-policy.general-information-4\" | translate}}              {{\"privacy-policy.processing-personal-data-title\" | translate}}      {{\"privacy-policy.processing-personal-data-1\" | translate}}      {{\"privacy-policy.processing-personal-data-2\" | translate}}              {{\"privacy-policy.processing-personal-data-2-li1\" | translate}}        {{\"privacy-policy.processing-personal-data-2-li2\" | translate}}        {{\"privacy-policy.processing-personal-data-2-li3\" | translate}}        {{\"privacy-policy.processing-personal-data-2-li4\" | translate}}        {{\"privacy-policy.processing-personal-data-2-li5\" | translate}}            {{\"privacy-policy.processing-personal-data-3\" | translate}}              {{\"privacy-policy.cookies-title\" | translate}}      {{\"privacy-policy.cookies-1\" | translate}}      {{\"privacy-policy.cookies-2\" | translate}}            {{\"privacy-policy.ssl-tls-encryption-title\" | translate}}    {{\"privacy-policy.ssl-tls-encryption-1\" | translate}}    {{\"privacy-policy.ssl-tls-encryption-2\" | translate}}              {{\"privacy-policy.server-logs-title\" | translate}}      {{\"privacy-policy.server-logs-1\" | translate}}              {{\"privacy-policy.server-logs-1-li1\" | translate}}        {{\"privacy-policy.server-logs-1-li2\" | translate}}        {{\"privacy-policy.server-logs-1-li3\" | translate}}        {{\"privacy-policy.server-logs-1-li4\" | translate}}        {{\"privacy-policy.server-logs-1-li5\" | translate}}            {{\"privacy-policy.server-logs-2\" | translate}}              {{\"privacy-policy.contact-form-title\" | translate}}      {{\"privacy-policy.contact-form-1\" | translate}}              {{\"privacy-policy.rights-data-subjects.title\" | translate}}              {{\"privacy-policy.rights-data-subjects.right-confirmation-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-confirmation-1\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-information-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-information-1\" | translate}}              {{\"privacy-policy.rights-data-subjects.right-information-1-li1\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li2\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li3\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li4\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li5\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li6\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-information-1-li7\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-information-2\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-information-3\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-rectification-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-rectification-1\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-rectification-2\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-erasure-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-erasure-1\" | translate}}              {{\"privacy-policy.rights-data-subjects.right-erasure-1-li1\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li2\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li3\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li4\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li5\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-erasure-1-li6\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-erasure-2\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-restriction-processing-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1\" | translate}}              {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li1\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li2\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li3\" | translate}}        {{\"privacy-policy.rights-data-subjects.right-restriction-processing-1-li4\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-restriction-processing-2\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-data-portability-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-data-portability-1\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-data-portability-2\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-data-portability-3\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-object-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-object-1\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-object-2\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-object-3\" | translate}}                    {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-title\" | translate}}            {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-1\" | translate}}      {{\"privacy-policy.rights-data-subjects.right-withdraw-consent-under-data-protection-law-2\" | translate}}              {{\"privacy-policy.copyrights-title\" | translate}}      {{\"privacy-policy.copyrights-1\" | translate}}      {{\"privacy-policy.copyrights-2\" | translate}}              {{\"privacy-policy.general-disclaimer-title\" | translate}}      {{\"privacy-policy.general-disclaimer-1\" | translate}}      {{\"privacy-policy.general-disclaimer-2\" | translate}}      {{\"privacy-policy.general-disclaimer-3\" | translate}}              {{\"privacy-policy.modifications-title\" | translate}}      {{\"privacy-policy.modifications-1\" | translate}}              {{\"privacy-policy.questions-data-protection-officer-title\" | translate}}      {{\"privacy-policy.questions-data-protection-officer-1\" | translate}}              {{\"owner.city\" | translate}}, {{\"privacy-policy.last-changed-date\" | translate}}        {{\"privacy-policy.source-title\" | translate}} {{\"privacy-policy.source\" | translate}}                    {{\"general.translation-title\" | translate}}      {{\"general.translation-description\" | translate}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'PrivacyPolicyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrivacyPolicyModule.html":{"url":"modules/PrivacyPolicyModule.html","title":"module - PrivacyPolicyModule","body":"\n                   \n\n\n\n\n    Modules\n    PrivacyPolicyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PrivacyPolicyModule\n\n\n\ncluster_PrivacyPolicyModule_declarations\n\n\n\ncluster_PrivacyPolicyModule_exports\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\n\n\nPrivacyPolicyModule\n\nPrivacyPolicyModule\n\nPrivacyPolicyModule -->\n\nPrivacyPolicyComponent->PrivacyPolicyModule\n\n\n\n\n\nPrivacyPolicyComponent \n\nPrivacyPolicyComponent \n\nPrivacyPolicyComponent  -->\n\nPrivacyPolicyModule->PrivacyPolicyComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/privacy-policy/privacy-policy.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PrivacyPolicyComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrivacyPolicyComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {CardModule} from 'primeng';\nimport {PrivacyPolicyComponent} from './privacy-policy.component';\n\n@NgModule({\n  declarations: [PrivacyPolicyComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    CardModule\n  ],\n  exports: [PrivacyPolicyComponent]\n})\nexport class PrivacyPolicyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RouternavigationService.html":{"url":"injectables/RouternavigationService.html","title":"injectable - RouternavigationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RouternavigationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/routernavigation.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                homeNavigate\n                            \n                            \n                                imprintNavigate\n                            \n                            \n                                loginNavigate\n                            \n                            \n                                logmanagementNavigate\n                            \n                            \n                                privacyPolicyNavigate\n                            \n                            \n                                usersettingsNavigate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/routernavigation.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            homeNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nhomeNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            imprintNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nimprintNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nloginNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logmanagementNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nlogmanagementNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            privacyPolicyNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nprivacyPolicyNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            usersettingsNavigate\n                        \n                        \n                    \n                \n            \n            \n                \nusersettingsNavigate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/services/routernavigation.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouternavigationService {\n\n  constructor(private router: Router) { }\n\n  homeNavigate() {\n    this.router.navigate(['/home'], {skipLocationChange: true}).then();\n  }\n\n  imprintNavigate() {\n    this.router.navigate(['/imprint'], { skipLocationChange: true }).then();\n  }\n\n  usersettingsNavigate() {\n    this.router.navigate(['/usersettings'], { skipLocationChange: true }).then();\n  }\n\n  logmanagementNavigate() {\n    this.router.navigate(['/logmanagement'], { skipLocationChange: true }).then();\n  }\n\n  loginNavigate() {\n    this.router.navigate(['/login'], { skipLocationChange: true }).then();\n  }\n\n  privacyPolicyNavigate() {\n    this.router.navigate(['/privacy-policy'], { skipLocationChange: true }).then();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SecuredDirective.html":{"url":"directives/SecuredDirective.html","title":"directive - SecuredDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SecuredDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/security/secured.directive.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [anyPermission]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                anyPermission\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    anyPermission\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(templateRef: TemplateRef, viewContainer: ViewContainerRef, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/security/secured.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateRef\n                                                  \n                                                        \n                                                                    TemplateRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainer\n                                                  \n                                                        \n                                                                        ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        anyPermission\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/core/security/secured.directive.ts:16\n                            \n                        \n            \n        \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        anyPermission\n                    \n                \n\n\n                \n                    \n                        setanyPermission(permissions: [])\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/security/secured.directive.ts:16\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            permissions\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n    \n        import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\nimport {PermissionEnum} from '../models/enum/permission.enum';\nimport {AuthService} from '../services/auth.service';\n\n@Directive({\n  selector: '[anyPermission]'\n})\nexport class SecuredDirective {\n\n  constructor(\n    private templateRef: TemplateRef,\n    private viewContainer: ViewContainerRef,\n    private authService: AuthService\n  ) { }\n\n  @Input() set anyPermission(permissions: PermissionEnum[]) {\n    if (this.authService.hasAnyPermission(permissions)) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainer.clear();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ServerSideErrorHandler.html":{"url":"injectables/ServerSideErrorHandler.html","title":"injectable - ServerSideErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ServerSideErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/server-side-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/server-side-error.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/server-side-error.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/server-side-error.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/server-side-error.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/server-side-error.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class ServerSideErrorHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return error.status === 500;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.400.name'),\n          message: this.translate.instant('error.400.message')\n        } as Error\n      );\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SessionStorageService.html":{"url":"injectables/SessionStorageService.html","title":"injectable - SessionStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SessionStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/session-storage.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getValue\n                            \n                            \n                                    Private\n                                logException\n                            \n                            \n                                removeItem\n                            \n                            \n                                setKeyAndValue\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/session-storage.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session-storage.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session-storage.service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session-storage.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setKeyAndValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/services/session-storage.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable, Injector} from '@angular/core';\nimport {AppService} from '../../app.service';\nimport {LogLevel} from '../models/enum/logLevel.enum';\nimport {IExportLog} from '../models/log.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SessionStorageService {\n\n  constructor(private injector: Injector) {}\n\n  setKeyAndValue = (key: string, value: string) => {\n    try {\n      sessionStorage.setItem(key, value);\n    } catch (e) {\n      this.logException(e, 'setKeyAndValue');\n    }\n  }\n\n  getValue = (localStorageKey: string): string | undefined => {\n    try {\n      return sessionStorage.getItem(localStorageKey);\n    } catch (e) {\n      this.logException(e, 'getValue');\n    }\n    return undefined;\n  }\n\n  removeItem = (key: string) => {\n    sessionStorage.removeItem(key);\n  }\n\n  private logException = (exception, method: string) => {\n    const appService = this.injector.get(AppService);\n    const log: IExportLog = {\n      loggerName: 'angular',\n      date: Date.now(),\n      callerClass: 'SessionStorageService',\n      callerFilename: 'SessionStorageService',\n      callerLine: '0',\n      callerMethod: method,\n      formattedMessage: exception.message ? exception.message : exception.toString(),\n      level: LogLevel.WARN\n    };\n\n    appService.log(log);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastMessageComponent.html":{"url":"components/ToastMessageComponent.html","title":"component - ToastMessageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToastMessageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/toast-message/toast-message.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-message-service\n            \n\n            \n                styleUrls\n                ./toast-message.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toast-message.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/toast-message/toast-message.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/toast-message/toast-message.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MessageService} from 'primeng';\nimport {ToastMessageService} from './toast-message.service';\n\n@Component({\n  selector: 'app-message-service',\n  templateUrl: './toast-message.component.html',\n  styleUrls: ['./toast-message.component.scss']\n})\nexport class ToastMessageComponent implements OnInit {\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private messageService: MessageService\n  ) {\n    this.toastMessageService.toastMessageEmitter.subscribe((messages) => {\n      this.messageService.addAll(messages);\n    });\n  }\n\n  ngOnInit(): void { }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./toast-message.component.scss\n                \n                @import \"./src/styles\";\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToastMessageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToastMessageModule.html":{"url":"modules/ToastMessageModule.html","title":"module - ToastMessageModule","body":"\n                   \n\n\n\n\n    Modules\n    ToastMessageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ToastMessageModule\n\n\n\ncluster_ToastMessageModule_declarations\n\n\n\ncluster_ToastMessageModule_exports\n\n\n\n\nToastMessageComponent\n\nToastMessageComponent\n\n\n\nToastMessageModule\n\nToastMessageModule\n\nToastMessageModule -->\n\nToastMessageComponent->ToastMessageModule\n\n\n\n\n\nToastMessageComponent \n\nToastMessageComponent \n\nToastMessageComponent  -->\n\nToastMessageModule->ToastMessageComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/toast-message/toast-message.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ToastMessageComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ToastMessageComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {ToastModule} from 'primeng/toast';\nimport {ToastMessageComponent} from './toast-message.component';\n\n@NgModule({\n  declarations: [\n    ToastMessageComponent\n  ],\n  exports: [\n    ToastMessageComponent\n  ],\n  imports: [\n    CommonModule,\n    ToastModule\n  ]\n})\nexport class ToastMessageModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastMessageService.html":{"url":"injectables/ToastMessageService.html","title":"injectable - ToastMessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ToastMessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/toast-message/toast-message.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emit\n                            \n                            \n                                emitError\n                            \n                            \n                                emitSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/toast-message/toast-message.service.ts:10\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast-message/toast-message.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitError\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast-message/toast-message.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/toast-message/toast-message.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {EventEmitter, Injectable, Output} from '@angular/core';\nimport {Message} from 'primeng';\nimport {ToastMessageSeverity} from '../core/models/enum/toast-message-severity.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastMessageService {\n\n  @Output() toastMessageEmitter: EventEmitter = new EventEmitter();\n\n  constructor() { }\n\n  emit = (toastMessages: Message[]) => {\n    this.toastMessageEmitter.emit(toastMessages);\n  }\n\n  emitSuccess = (summary: string, detail: string) => {\n    this.toastMessageEmitter.emit(\n      [{\n        severity: ToastMessageSeverity.SUCCESS,\n        summary,\n        detail,\n        life: 10000\n      } as Message]\n    );\n  }\n\n  emitError = (summary: string, detail: string) => {\n    this.toastMessageEmitter.emit(\n      [{\n        severity: ToastMessageSeverity.ERROR,\n        summary,\n        detail,\n        life: 10000\n      } as Message]\n    );\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslateErrorHandler.html":{"url":"injectables/TranslateErrorHandler.html","title":"injectable - TranslateErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslateErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/translate-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appService: AppService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/translate-error.handler.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appService\n                                                  \n                                                        \n                                                                        AppService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(params: MissingTranslationHandlerParams)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/translate-error.handler.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            MissingTranslationHandlerParams\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {MissingTranslationHandler, MissingTranslationHandlerParams} from '@ngx-translate/core';\nimport {AppService} from '../../app.service';\nimport {defaultLanguage} from '../language.config';\nimport {IExportLog} from '../models/log.model';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class TranslateErrorHandler implements MissingTranslationHandler {\n\n  constructor(private appService: AppService) { }\n\n  handle(params: MissingTranslationHandlerParams) {\n    const language = localStorage.getItem('languageIso') || defaultLanguage.isoCode;\n    const log: IExportLog = LogGenerator.createTranslationLog(params, language);\n\n    this.appService.log(log);\n    return params.key;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/usersettings/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                getAll\n                            \n                            \n                                getAllPermissions\n                            \n                            \n                                getMe\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                            \n                                savePermissions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/usersettings/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            save\n                        \n                        \n                    \n                \n            \n            \n                \nsave(user: IExportUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/user.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IExportUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            savePermissions\n                        \n                        \n                    \n                \n            \n            \n                \nsavePermissions(user: IExportUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IExportUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAll\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/user.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllPermissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/user.service.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMe\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/user.service.ts:23\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {IPermission} from '../core/models/permission.model';\nimport {IExportUser, IUser} from '../core/models/user.model';\nimport {ApiService} from '../core/services/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private apiService: ApiService) {\n  }\n\n  getAll = (): Observable => {\n    return this.apiService.getAll('/users', false);\n  }\n\n  getAllPermissions = (): Observable => {\n    return this.apiService.getAll('/permissions', false);\n  }\n\n  getMe = (): Observable => {\n    return this.apiService.getAll('/users/me', false);\n  }\n\n  save(user: IExportUser): Observable {\n    return this.apiService.postAll('/users/' + user.id, user);\n  }\n\n  savePermissions(user: IExportUser): Observable {\n    return this.apiService.postAll('/users/' + user.id + '/permissions', user.permissions);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersettingsComponent.html":{"url":"components/UsersettingsComponent.html","title":"component - UsersettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UsersettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/usersettings/usersettings.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-usersettings\n            \n\n            \n                styleUrls\n                ./usersettings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./usersettings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authService\n                            \n                            \n                                availablePermissions\n                            \n                            \n                                changeableUser\n                            \n                            \n                                changeDateFormat\n                            \n                            \n                                dateFormats\n                            \n                            \n                                hasPermissionUserManagement\n                            \n                            \n                                    Private\n                                initDateFormats\n                            \n                            \n                                    Private\n                                initSelectedDateFormat\n                            \n                            \n                                    Private\n                                loadUsers\n                            \n                            \n                                loginDialogWidth\n                            \n                            \n                                loginModalVisible\n                            \n                            \n                                myUserId\n                            \n                            \n                                    Private\n                                needsLogin\n                            \n                            \n                                newPassword\n                            \n                            \n                                onLoginSuccess\n                            \n                            \n                                selectedDateFormat\n                            \n                            \n                                selectedUser\n                            \n                            \n                                    Private\n                                toExportUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                errorMessage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                replaceUserInUsers\n                            \n                            \n                                savePermissions\n                            \n                            \n                                saveUser\n                            \n                            \n                                    Private\n                                successMessage\n                            \n                            \n                                userChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dateService: DateService, authService: AuthService, userService: UserService, loginService: LoginService, toastMessageService: ToastMessageService, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/usersettings/usersettings.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dateService\n                                                  \n                                                        \n                                                                        DateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loginService\n                                                  \n                                                        \n                                                                        LoginService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            errorMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    errorMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            replaceUserInUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceUserInUsers(user: IUser)\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                IUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            savePermissions\n                        \n                        \n                    \n                \n            \n            \n                \nsavePermissions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:169\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveUser\n                        \n                        \n                    \n                \n            \n            \n                \nsaveUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            successMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    successMessage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:155\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            userChanged\n                        \n                        \n                    \n                \n            \n            \n                \nuserChanged(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/usersettings/usersettings.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            availablePermissions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPermission[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeableUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            changeDateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:71\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPermissionUserManagement\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initDateFormats\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            initSelectedDateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:86\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginDialogWidth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '50vw'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginModalVisible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            myUserId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            needsLogin\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:146\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            newPassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLoginSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedDateFormat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IUser\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toExportUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IPrimeNgBase[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/usersettings/usersettings.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {DateFormat} from '../core/models/enum/date-format.enum';\nimport {PermissionEnum} from '../core/models/enum/permission.enum';\nimport {IPermission} from '../core/models/permission.model';\nimport {IPrimeNgBase} from '../core/models/primeng-base.model';\nimport {IExportUser, IUser} from '../core/models/user.model';\nimport {AuthService} from '../core/services/auth.service';\nimport {DateService} from '../core/services/date.service';\nimport {LoginService} from '../login/login.service';\nimport {ToastMessageService} from '../toast-message/toast-message.service';\nimport {UserService} from './user.service';\n\n@Component({\n  selector: 'app-usersettings',\n  templateUrl: './usersettings.component.html',\n  styleUrls: ['./usersettings.component.scss']\n})\nexport class UsersettingsComponent implements OnInit {\n\n  dateFormats: IPrimeNgBase[];\n  selectedDateFormat: IPrimeNgBase;\n\n  hasPermissionUserManagement = false;\n  users: IPrimeNgBase[] = [];\n  selectedUser: IUser;\n  myUserId: number;\n  availablePermissions: IPermission[] = [];\n\n  changeableUser: IUser;\n  newPassword = '';\n\n  loginModalVisible = false;\n  loginDialogWidth = '50vw';\n  onLoginSuccess = () => {this.loginService.emitLogin(); };\n\n  constructor(\n    private dateService: DateService,\n    public authService: AuthService,\n    private userService: UserService,\n    private loginService: LoginService,\n    private toastMessageService: ToastMessageService,\n    private translate: TranslateService\n  ) {\n    this.loginService.loginEmitter.subscribe(() => {\n      this.loginModalVisible = false;\n    });\n  }\n\n  ngOnInit(): void {\n    if (window.innerWidth  {\n    const dateFormats: IPrimeNgBase[] = [];\n    for (const dateFormat of Object.keys(DateFormat)) {\n      dateFormats.push(\n        {\n          field: dateFormat,\n          label: 'dateFormat.' + dateFormat,\n          value: dateFormat\n        } as IPrimeNgBase);\n    }\n    return dateFormats;\n  }\n\n  changeDateFormat = (event: any) => {\n    this.dateService.setFormat(event.value as DateFormat);\n  }\n\n  private initSelectedDateFormat = () => {\n    const localStorageDateFormat = this.dateService.getFormat();\n    if (localStorageDateFormat) {\n      return this.selectedDateFormat = {\n        field: localStorageDateFormat,\n        label: 'dateFormat.' + localStorageDateFormat,\n        value: localStorageDateFormat\n      } as IPrimeNgBase;\n    }\n  }\n\n  private loadUsers = () => {\n    const observableMe = this.userService.getMe();\n    observableMe.subscribe((value) => this.myUserId = value.id);\n    if (this.hasPermissionUserManagement) {\n      this.userService.getAll().subscribe( (users: IUser[]) => {\n        users.forEach((user: IUser) => {\n          this.users.push({label: user.name, field: user.name, value: user} as IPrimeNgBase);\n        });\n      });\n      return;\n    }\n    observableMe.subscribe((value) => this.users.push({label: value.name, field: value.name, value} as IPrimeNgBase));\n  }\n\n  userChanged(event: any) {\n    const user: IUser = event.value as IUser;\n    this.changeableUser = JSON.parse(JSON.stringify(user));\n    this.newPassword = '';\n    if (this.hasPermissionUserManagement) {\n      this.userService.getAllPermissions().subscribe(value => {\n        this.availablePermissions = value.filter((el) => !user.permissions.map(value1 => value1.id).includes(el.id));\n      });\n    }\n  }\n\n  saveUser() {\n    this.userService.save(this.toExportUser(this.changeableUser)).subscribe(\n      (user) => {\n        if (this.needsLogin()) {\n          this.loginModalVisible = true;\n        }\n        this.replaceUserInUsers(user);\n        this.successMessage();\n      },\n      (error) => {\n        this.errorMessage();\n      });\n  }\n\n  private replaceUserInUsers(user: IUser) {\n    const index = this.users.findIndex((primeNgBase) => primeNgBase.value.id === user.id);\n    if (index !== -1) {\n      this.users[index] = {label: user.name, field: user.name, value: user} as IPrimeNgBase;\n      this.selectedUser = this.users[index].value;\n      this.newPassword = '';\n    }\n  }\n\n  private toExportUser = (user: IUser): IExportUser => {\n    return {\n      id: user.id,\n      name: user.name,\n      emailAddress: user.emailAddress,\n      password: this.newPassword,\n      enabled: user.enabled,\n      lastLogin: user.lastLogin,\n      permissions: user.permissions.map( (permission) => permission.id )\n    } as IExportUser;\n  }\n\n  private needsLogin = (): boolean => {\n    if (this.changeableUser.id === this.myUserId) {\n      return this.changeableUser.name !== this.authService.getUsername()\n      || this.newPassword.length !== 0\n      || this.changeableUser.enabled !== this.selectedUser.enabled;\n    }\n    return false;\n  }\n\n  private successMessage() {\n    this.toastMessageService.emitSuccess(\n      this.translate.instant('user.updateSuccessfully'),\n      this.translate.instant('user.updateSuccessfully')\n    );\n  }\n\n  private errorMessage() {\n    this.toastMessageService.emitError(\n      this.translate.instant('user.updateFailed'),\n      this.translate.instant('user.updateFailed')\n    );\n  }\n\n  savePermissions() {\n    this.userService.savePermissions(this.toExportUser(this.selectedUser)).subscribe();\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n  \n\n  \n    \n\n      \n        \n          {{'user.id' | translate}}\n          \n        \n      \n\n      \n        \n          {{'user.name' | translate}}\n          \n        \n      \n\n      \n        \n          {{'user.emailAddress' | translate}}\n          \n        \n      \n\n      \n        \n          {{'user.newPassword' | translate}}\n          \n        \n      \n\n      \n        \n          {{'user.lastLogin' | translate}}\n          \n        \n      \n\n      \n        \n      \n\n      \n        \n      \n\n    \n  \n\n  \n    \n\n      \n        \n          \n            {{'permission.' + permission.name | translate}}\n          \n        \n      \n\n    \n  \n\n  \n    \n      \n        \n          {{selectedDateFormat?.label || item.label | translate}}\n        \n        \n          {{item.label | translate}}\n        \n      \n    \n  \n\n\n\n\n  \n\n\n    \n\n    \n                \n                    ./usersettings.component.scss\n                \n                @import \"./src/styles\";\n\n.ui-inputgroup-addon{\n  min-width: 11em !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      {{\\'user.id\\' | translate}}                                                {{\\'user.name\\' | translate}}                                                {{\\'user.emailAddress\\' | translate}}                                                {{\\'user.newPassword\\' | translate}}                                                {{\\'user.lastLogin\\' | translate}}                                                                                                                {{\\'permission.\\' + permission.name | translate}}                                                            {{selectedDateFormat?.label || item.label | translate}}                          {{item.label | translate}}                      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HeaderTitleComponent', 'selector': 'app-header-title'},{'name': 'HelpDialogComponent', 'selector': 'app-help-dialog'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'ImprintComponent', 'selector': 'app-imprint'},{'name': 'LoggingComponent', 'selector': 'app-logging'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NavigationComponent', 'selector': 'app-navigation'},{'name': 'PrivacyPolicyComponent', 'selector': 'app-privacy-policy'},{'name': 'ToastMessageComponent', 'selector': 'app-message-service'},{'name': 'UsersettingsComponent', 'selector': 'app-usersettings'}];\n    var DIRECTIVES = [{'name': 'SecuredDirective', 'selector': '[anyPermission]'}];\n    var ACTUAL_COMPONENT = {'name': 'UsersettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersettingsModule.html":{"url":"modules/UsersettingsModule.html","title":"module - UsersettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersettingsModule\n\n\n\ncluster_UsersettingsModule_declarations\n\n\n\ncluster_UsersettingsModule_imports\n\n\n\n\nUsersettingsComponent\n\nUsersettingsComponent\n\n\n\nUsersettingsModule\n\nUsersettingsModule\n\nUsersettingsModule -->\n\nUsersettingsComponent->UsersettingsModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nUsersettingsModule -->\n\nLoginModule->UsersettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/usersettings/usersettings.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UsersettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {\n  ButtonModule,\n  DialogModule,\n  DropdownModule,\n  FieldsetModule,\n  InputTextModule,\n  PasswordModule,\n  PickListModule,\n  ToggleButtonModule\n} from 'primeng';\nimport {PipeModule} from '../core/pipes/pipe.module';\nimport {LoginModule} from '../login/login.module';\nimport { UsersettingsComponent } from './usersettings.component';\n\n@NgModule({\n  declarations: [\n    UsersettingsComponent\n  ],\n  imports: [\n    CommonModule,\n    InputTextModule,\n    FieldsetModule,\n    TranslateModule,\n    DropdownModule,\n    FormsModule,\n    ToggleButtonModule,\n    PasswordModule,\n    DialogModule,\n    LoginModule,\n    PipeModule,\n    ButtonModule,\n    PickListModule,\n  ]\n})\nexport class UsersettingsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationErrorHandler.html":{"url":"injectables/ValidationErrorHandler.html","title":"injectable - ValidationErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/error-handlers/validation-error.handler.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                translate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateMessage\n                            \n                            \n                                handle\n                            \n                            \n                                matches\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastMessageService: ToastMessageService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/error-handlers/validation-error.handler.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastMessageService\n                                                  \n                                                        \n                                                                        ToastMessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            generateMessage\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    generateMessage(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/validation-error.handler.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/validation-error.handler.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            matches\n                        \n                        \n                    \n                \n            \n            \n                \nmatches(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/core/error-handlers/validation-error.handler.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            translate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TranslateService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/core/error-handlers/validation-error.handler.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {HttpErrorResponse} from '@angular/common/http';\nimport {Injectable, Injector} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Message} from 'primeng';\nimport {Observable, of} from 'rxjs';\nimport {environment} from '../../../environments/environment';\nimport {ToastMessageService} from '../../toast-message/toast-message.service';\nimport {IHttpErrorResponseHandler} from './i-http-error-response.handler';\nimport {LogGenerator} from './log-generator.namespace';\n\n@Injectable()\nexport class ValidationErrorHandler implements IHttpErrorResponseHandler {\n\n  private translate: TranslateService;\n\n  constructor(\n    private toastMessageService: ToastMessageService,\n    private injector: Injector\n  ) {\n  }\n\n  matches(error: HttpErrorResponse): boolean {\n    return error.status === 400;\n  }\n\n  handle(error: HttpErrorResponse): Observable {\n    if (this.translate == null) {\n      this.translate = this.injector.get(TranslateService);\n    }\n\n    const message = this.generateMessage(error);\n    this.toastMessageService.emit([\n      message\n    ]);\n\n    return of([]);\n  }\n\n  private generateMessage(error: HttpErrorResponse): Message {\n    if (environment.show_errors === true) {\n      return LogGenerator.createToastError(error);\n    } else {\n      return LogGenerator.createToastError(\n        {\n          name: this.translate.instant('error.400.name'),\n          message: this.translate.instant('error.400.message')\n        } as Error\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            TranslateLoaderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/add_language_header.interceptor.ts\n            \n            interceptor\n            AddLanguageHeaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/app-initializer-provider.ts\n            \n            function\n            appInitializerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/app-initializer-provider.ts\n            \n            variable\n            appInitializerProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/auth-error-response.handler.ts\n            \n            injectable\n            AuthErrorResponseHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/default-error.handler.ts\n            \n            injectable\n            DefaultErrorHandler\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/global-error.handler.ts\n            \n            injectable\n            GlobalErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/i-http-error-response.handler.ts\n            \n            interface\n            IHttpErrorResponseHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/log-generator.namespace.ts\n            \n            function\n            createLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/log-generator.namespace.ts\n            \n            function\n            createToastError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/log-generator.namespace.ts\n            \n            function\n            createTranslationLog\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/method-not-allowed-error.handler.ts\n            \n            injectable\n            MethodNotAllowedErrorHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/no-connection-error.handler.ts\n            \n            injectable\n            NoConnectionErrorHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/not-found-error.handler.ts\n            \n            injectable\n            NotFoundErrorHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/server-side-error.handler.ts\n            \n            injectable\n            ServerSideErrorHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/translate-error.handler.ts\n            \n            injectable\n            TranslateErrorHandler\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/error-handlers/validation-error.handler.ts\n            \n            injectable\n            ValidationErrorHandler\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/language.config.ts\n            \n            injectable\n            LanguageConfig\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/language.config.ts\n            \n            variable\n            defaultLanguage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/language.config.ts\n            \n            variable\n            languages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/models/jwt.model.ts\n            \n            interface\n            IJWT\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/models/language.model.ts\n            \n            interface\n            ILanguage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/log-filter.model.ts\n            \n            interface\n            ILogFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/log.model.ts\n            \n            interface\n            IExportLog\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/models/log.model.ts\n            \n            interface\n            ILog\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/models/permission.model.ts\n            \n            interface\n            IPermission\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/primeng-base.model.ts\n            \n            interface\n            IPrimeNgBase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            IExportUser\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            IUser\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/CustomDate.ts\n            \n            pipe\n            CustomDatePipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/security/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/security/http-interceptors.ts\n            \n            variable\n            httpInterceptorProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/security/secured.directive.ts\n            \n            directive\n            SecuredDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/api.service.ts\n            \n            variable\n            contentTypeJson\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/auth-guard.service.ts\n            \n            guard\n            AuthGuardService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/date.service.ts\n            \n            injectable\n            DateService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/routernavigation.service.ts\n            \n            injectable\n            RouternavigationService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/session-storage.service.ts\n            \n            injectable\n            SessionStorageService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/header/header-title/header-title.component.ts\n            \n            component\n            HeaderTitleComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/help-dialog/help-dialog.component.ts\n            \n            component\n            HelpDialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/imprint/imprint.component.ts\n            \n            component\n            ImprintComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/logs/logging.component.ts\n            \n            component\n            LoggingComponent\n            \n                0 %\n                (0/30)\n            \n        \n        \n            \n                \n                src/app/logs/logging.service.ts\n            \n            injectable\n            LoggingService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/modules.ts\n            \n            variable\n            MyModules\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/navigation/navigation.component.ts\n            \n            component\n            NavigationComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/privacy-policy/privacy-policy.component.ts\n            \n            component\n            PrivacyPolicyComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/toast-message/toast-message.component.ts\n            \n            component\n            ToastMessageComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/toast-message/toast-message.service.ts\n            \n            injectable\n            ToastMessageService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/usersettings/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/usersettings/usersettings.component.ts\n            \n            component\n            UsersettingsComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^9.1.6\n        \n            @angular/cdk : ^9.2.3\n        \n            @angular/common : ^9.1.6\n        \n            @angular/compiler : ^9.1.6\n        \n            @angular/core : ^9.1.6\n        \n            @angular/forms : ^9.1.6\n        \n            @angular/platform-browser : ^9.1.6\n        \n            @angular/platform-browser-dynamic : ^9.1.6\n        \n            @angular/router : ^9.1.6\n        \n            @angular/service-worker : ^9.1.6\n        \n            @compodoc/compodoc : ^1.1.11\n        \n            @fullcalendar/core : ^4.4.0\n        \n            @fullcalendar/daygrid : ^4.4.0\n        \n            @fullcalendar/interaction : ^4.4.0\n        \n            @fullcalendar/timegrid : ^4.4.0\n        \n            @ngx-translate/core : ^12.1.2\n        \n            @ngx-translate/http-loader : ^4.0.0\n        \n            all : 0.0.0\n        \n            chart.js : ^2.9.3\n        \n            classlist.js : ^1.1.20150312\n        \n            core-js : ^3.6.5\n        \n            primeflex : ^1.1.0\n        \n            primeicons : ^2.0.0\n        \n            primeng : ^9.0.6\n        \n            quill : ^1.3.7\n        \n            rxjs : ^6.5.5\n        \n            tslib : ^1.11.2\n        \n            update : ^0.7.4\n        \n            url-polyfill : ^1.1.8\n        \n            web-animations-js : ^2.3.2\n        \n            zone.js : ^0.10.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DateFormat   (src/.../date-format.enum.ts)\n                        \n                        \n                            LogLevel   (src/.../logLevel.enum.ts)\n                        \n                        \n                            PermissionEnum   (src/.../permission.enum.ts)\n                        \n                        \n                            ToastMessageSeverity   (src/.../toast-message-severity.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/models/enum/date-format.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        DateFormat\n                    \n                \n                        \n                            \n                                 short\n                            \n                        \n                        \n                            \n                                Value : M/d/yy, h:mm a\n                            \n                        \n                        \n                            \n                                 medium\n                            \n                        \n                        \n                            \n                                Value : MMM d, y, h:mm:ss a\n                            \n                        \n                        \n                            \n                                 long\n                            \n                        \n                        \n                            \n                                Value : MMMM d, y, h:mm:ss a z\n                            \n                        \n                        \n                            \n                                 full\n                            \n                        \n                        \n                            \n                                Value : EEEE, MMMM d, y, h:mm:ss a zzzz\n                            \n                        \n                        \n                            \n                                 shortDate\n                            \n                        \n                        \n                            \n                                Value : M/d/yy\n                            \n                        \n                        \n                            \n                                 mediumDate\n                            \n                        \n                        \n                            \n                                Value : MMM d, y\n                            \n                        \n                        \n                            \n                                 longDate\n                            \n                        \n                        \n                            \n                                Value : MMMM d, y\n                            \n                        \n                        \n                            \n                                 fullDate\n                            \n                        \n                        \n                            \n                                Value : EEEE, MMMM d, y\n                            \n                        \n                        \n                            \n                                 shortTime\n                            \n                        \n                        \n                            \n                                Value : h:mm a\n                            \n                        \n                        \n                            \n                                 mediumTime\n                            \n                        \n                        \n                            \n                                Value : h:mm:ss a\n                            \n                        \n                        \n                            \n                                 longTime\n                            \n                        \n                        \n                            \n                                Value : h:mm:ss a z\n                            \n                        \n                        \n                            \n                                 fullTime\n                            \n                        \n                        \n                            \n                                Value : h:mm:ss a zzzz\n                            \n                        \n            \n        \n\n    src/app/core/models/enum/logLevel.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : ERROR\n                            \n                        \n                        \n                            \n                                 WARN\n                            \n                        \n                        \n                            \n                                Value : WARN\n                            \n                        \n            \n        \n\n    src/app/core/models/enum/permission.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        PermissionEnum\n                    \n                \n                        \n                            \n                                 USER_MANAGEMENT\n                            \n                        \n                        \n                            \n                                Value : USER_MANAGEMENT\n                            \n                        \n                        \n                            \n                                 SEE_LOGS\n                            \n                        \n                        \n                            \n                                Value : SEE_LOGS\n                            \n                        \n                        \n                            \n                                 ADMIN\n                            \n                        \n                        \n                            \n                                Value : ADMIN\n                            \n                        \n            \n        \n\n    src/app/core/models/enum/toast-message-severity.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        ToastMessageSeverity\n                    \n                \n                        \n                            \n                                 SUCCESS\n                            \n                        \n                        \n                            \n                                Value : success\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                Value : info\n                            \n                        \n                        \n                            \n                                 WARNING\n                            \n                        \n                        \n                            \n                                Value : warn\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                Value : error\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appInitializerFactory   (src/.../app-initializer-provider.ts)\n                        \n                        \n                            createLog   (src/.../log-generator.namespace.ts)\n                        \n                        \n                            createToastError   (src/.../log-generator.namespace.ts)\n                        \n                        \n                            createTranslationLog   (src/.../log-generator.namespace.ts)\n                        \n                        \n                            TranslateLoaderFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/app-initializer-provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            appInitializerFactory\n                        \n                        \n                    \n                \n            \n            \n                \nappInitializerFactory(translate, injector)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translate\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/core/error-handlers/log-generator.namespace.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createLog\n                        \n                        \n                    \n                \n            \n            \n                \ncreateLog(error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IExportLog\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createToastError\n                        \n                        \n                    \n                \n            \n            \n                \ncreateToastError(error, severity, summary, detail, closable: boolean, life)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    severity\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    summary\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    detail\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    closable\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    life\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Message\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTranslationLog\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTranslationLog(params, language)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    language\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IExportLog\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            TranslateLoaderFactory\n                        \n                        \n                    \n                \n            \n            \n                \nTranslateLoaderFactory(http)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_declarations\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_providers\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_HelpDialogModule\n\n\n\ncluster_HelpDialogModule_declarations\n\n\n\ncluster_HelpDialogModule_exports\n\n\n\ncluster_HomeModule\n\n\n\ncluster_HomeModule_declarations\n\n\n\ncluster_ImprintModule\n\n\n\ncluster_ImprintModule_declarations\n\n\n\ncluster_ImprintModule_exports\n\n\n\ncluster_LoggingModule\n\n\n\ncluster_LoggingModule_declarations\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_declarations\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_NavigationModule\n\n\n\ncluster_NavigationModule_declarations\n\n\n\ncluster_NavigationModule_exports\n\n\n\ncluster_PipeModule\n\n\n\ncluster_PipeModule_declarations\n\n\n\ncluster_PipeModule_exports\n\n\n\ncluster_PrivacyPolicyModule\n\n\n\ncluster_PrivacyPolicyModule_declarations\n\n\n\ncluster_PrivacyPolicyModule_exports\n\n\n\ncluster_ToastMessageModule\n\n\n\ncluster_ToastMessageModule_declarations\n\n\n\ncluster_ToastMessageModule_exports\n\n\n\ncluster_UsersettingsModule\n\n\n\ncluster_UsersettingsModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nSecuredDirective \n\nSecuredDirective \n\nSecuredDirective  -->\n\nCoreModule->SecuredDirective \n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nAppModule -->\n\nHeaderModule->AppModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nHelpDialogModule\n\nHelpDialogModule\n\nAppModule -->\n\nHelpDialogModule->AppModule\n\n\n\n\n\nHelpDialogComponent \n\nHelpDialogComponent \n\nHelpDialogComponent  -->\n\nHelpDialogModule->HelpDialogComponent \n\n\n\n\n\nHomeModule\n\nHomeModule\n\nAppModule -->\n\nHomeModule->AppModule\n\n\n\n\n\nImprintModule\n\nImprintModule\n\nAppModule -->\n\nImprintModule->AppModule\n\n\n\n\n\nImprintComponent \n\nImprintComponent \n\nImprintComponent  -->\n\nImprintModule->ImprintComponent \n\n\n\n\n\nLoggingModule\n\nLoggingModule\n\nAppModule -->\n\nLoggingModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nUsersettingsModule\n\nUsersettingsModule\n\nUsersettingsModule -->\n\nLoginModule->UsersettingsModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nLoginModule->LoginComponent \n\n\n\n\n\nNavigationModule\n\nNavigationModule\n\nAppModule -->\n\nNavigationModule->AppModule\n\n\n\nHeaderModule -->\n\nNavigationModule->HeaderModule\n\n\n\n\n\nNavigationComponent \n\nNavigationComponent \n\nNavigationComponent  -->\n\nNavigationModule->NavigationComponent \n\n\n\n\n\nPrivacyPolicyModule\n\nPrivacyPolicyModule\n\nAppModule -->\n\nPrivacyPolicyModule->AppModule\n\n\n\n\n\nPrivacyPolicyComponent \n\nPrivacyPolicyComponent \n\nPrivacyPolicyComponent  -->\n\nPrivacyPolicyModule->PrivacyPolicyComponent \n\n\n\n\n\nToastMessageModule\n\nToastMessageModule\n\nAppModule -->\n\nToastMessageModule->AppModule\n\n\n\n\n\nToastMessageComponent \n\nToastMessageComponent \n\nToastMessageComponent  -->\n\nToastMessageModule->ToastMessageComponent \n\n\n\nAppModule -->\n\nUsersettingsModule->AppModule\n\n\n\n\n\nLanguageConfig\n\nLanguageConfig\n\nAppModule -->\n\nLanguageConfig->AppModule\n\n\n\n\n\nSecuredDirective\n\nSecuredDirective\n\nCoreModule -->\n\nSecuredDirective->CoreModule\n\n\n\n\n\nAuthErrorResponseHandler\n\nAuthErrorResponseHandler\n\nCoreModule -->\n\nAuthErrorResponseHandler->CoreModule\n\n\n\n\n\nDefaultErrorHandler\n\nDefaultErrorHandler\n\nCoreModule -->\n\nDefaultErrorHandler->CoreModule\n\n\n\n\n\nMethodNotAllowedErrorHandler\n\nMethodNotAllowedErrorHandler\n\nCoreModule -->\n\nMethodNotAllowedErrorHandler->CoreModule\n\n\n\n\n\nNoConnectionErrorHandler\n\nNoConnectionErrorHandler\n\nCoreModule -->\n\nNoConnectionErrorHandler->CoreModule\n\n\n\n\n\nNotFoundErrorHandler\n\nNotFoundErrorHandler\n\nCoreModule -->\n\nNotFoundErrorHandler->CoreModule\n\n\n\n\n\nServerSideErrorHandler\n\nServerSideErrorHandler\n\nCoreModule -->\n\nServerSideErrorHandler->CoreModule\n\n\n\n\n\nValidationErrorHandler\n\nValidationErrorHandler\n\nCoreModule -->\n\nValidationErrorHandler->CoreModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderTitleComponent\n\nHeaderTitleComponent\n\nHeaderModule -->\n\nHeaderTitleComponent->HeaderModule\n\n\n\nHeaderModule -->\n\nHeaderTitleComponent->HeaderModule\n\n\n\n\n\nHelpDialogComponent\n\nHelpDialogComponent\n\nHelpDialogModule -->\n\nHelpDialogComponent->HelpDialogModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nHomeModule -->\n\nHomeComponent->HomeModule\n\n\n\n\n\nImprintComponent\n\nImprintComponent\n\nImprintModule -->\n\nImprintComponent->ImprintModule\n\n\n\n\n\nLoggingComponent\n\nLoggingComponent\n\nLoggingModule -->\n\nLoggingComponent->LoggingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nLoginModule -->\n\nLoginComponent->LoginModule\n\n\n\n\n\nNavigationComponent\n\nNavigationComponent\n\nNavigationModule -->\n\nNavigationComponent->NavigationModule\n\n\n\n\n\nCustomDatePipe\n\nCustomDatePipe\n\n\n\nPipeModule\n\nPipeModule\n\nPipeModule -->\n\nCustomDatePipe->PipeModule\n\n\n\n\n\nCustomDatePipe \n\nCustomDatePipe \n\nCustomDatePipe  -->\n\nPipeModule->CustomDatePipe \n\n\n\n\n\nPrivacyPolicyComponent\n\nPrivacyPolicyComponent\n\nPrivacyPolicyModule -->\n\nPrivacyPolicyComponent->PrivacyPolicyModule\n\n\n\n\n\nToastMessageComponent\n\nToastMessageComponent\n\nToastMessageModule -->\n\nToastMessageComponent->ToastMessageModule\n\n\n\n\n\nUsersettingsComponent\n\nUsersettingsComponent\n\nUsersettingsModule -->\n\nUsersettingsComponent->UsersettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    21 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        7 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HelpDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ImprintModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrivacyPolicyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToastMessageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appInitializerProviders   (src/.../app-initializer-provider.ts)\n                        \n                        \n                            contentTypeJson   (src/.../api.service.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            defaultLanguage   (src/.../language.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            httpInterceptorProviders   (src/.../http-interceptors.ts)\n                        \n                        \n                            languages   (src/.../language.config.ts)\n                        \n                        \n                            MyModules   (src/.../modules.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/app-initializer-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appInitializerProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {provide: APP_INITIALIZER, useFactory: appInitializerFactory, deps: [TranslateService, Injector], multi: true}\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/core/services/api.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            contentTypeJson\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  headers: new HttpHeaders({'Content-Type': 'application/json'})\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n\n\n            \n        \n\n    src/app/core/language.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultLanguage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILanguage\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'language.english',\n  isoCode: 'en'\n} as ILanguage\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            languages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ILanguage[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    name: 'language.english',\n    isoCode: 'en'\n  } as ILanguage\n  , {\n    name: 'language.german',\n    isoCode: 'de'\n  } as ILanguage\n]\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  api_url: 'https://michibaum.ch/lifemanagement/api',\n  base_href: '/lifemanagement',\n  show_errors: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  api_url: 'http://localhost:8181/lifemanagement/api',\n  base_href: '/',\n  show_errors: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/core/security/http-interceptors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            httpInterceptorProviders\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: AddLanguageHeaderInterceptor, multi: true }\n]\n                        \n                    \n\n\n            \n        \n\n    src/app/modules.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            MyModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  CoreModule,\n  LoginModule,\n  HomeModule,\n  HeaderModule,\n  NavigationModule,\n  LoggingModule,\n  HelpDialogModule,\n  PipeModule,\n  UsersettingsModule,\n  ToastMessageModule,\n  ImprintModule,\n  PrivacyPolicyModule\n]\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
