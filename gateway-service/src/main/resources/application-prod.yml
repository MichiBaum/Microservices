server:
  port: 443
  ssl:
    enabled: true
    bundle: server
#    TODO HTTP/2 behaves slightly differently from HTTP/1.1 in terms of how headers and paths are normalized and passed through. For example:
#    - HTTP/2 employs multiplexing and avoids redundant headers like `Host`, which might behave differently with Spring Gateway.
#    - Your predicates like `host("admin.michibaum.*")` or others may not match properly under HTTP/2.
  http2:
    enabled: false

spring:
  ssl:
    bundle:
      jks:
        server:
          key:
            alias: "michibaum"
          keystore:
            location: "/data/ssl/keystore.p12"
            password: ${SSL_KEYSTORE_PASSWORD}
            type: "PKCS12"
  boot:
    admin:
      client:
        username: ${ADMIN_SERVICE_USERNAME}
        password: ${ADMIN_SERVICE_PASSWORD}
  cloud:
    discovery:
      client:
        simple:
          local:
            secure: true
  microservices:
    discord:
      enabled: true
      bot-token: ${DISCORD_BOT_TOKEN}
      guild-id: ${DISCORD_GUILD_ID}
      logging:
        enabled: true
        channel-id: ${DISCORD_GATEWAY_SERVICE_LOG_CHANNEL}

eureka:
  client:
    service-url:
      defaultZone: http://registry-service:8761/eureka
  instance:
    non-secure-port-enabled: false
    secure-port-enabled: true
    secure-port: 443

cors:
  allowed-origin-patterns:
    - https://michibaum.ch
    - https://*.michibaum.ch
    - https://michibaum.com
    - https://*.michibaum.com
    - https://michibaum.eu
    - https://*.michibaum.eu