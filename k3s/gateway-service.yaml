apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-service
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gateway-service
  template:
    metadata:
      labels:
        app: gateway-service
    spec:
      containers:
      - name: gateway-service
        image: 70131370/gateway-service:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        - containerPort: 443
        env:
        - name: spring_profiles_active
          valueFrom:
            configMapKeyRef:
              name: microservices-config
              key: SPRING_ACTIVE_PROFILES
        - name: JAVA_TOOL_OPTIONS
          valueFrom:
            configMapKeyRef:
              name: microservices-config
              key: JAVA_TOOL_OPTIONS
        - name: SSL_KEYSTORE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: SSL_KEYSTORE_PASSWORD
        - name: ADMIN_SERVICE_USERNAME
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: ADMIN_SERVICE_USERNAME
        - name: ADMIN_SERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: ADMIN_SERVICE_PASSWORD
        - name: DISCORD_GATEWAY_SERVICE_LOG_CHANNEL
          valueFrom:
            secretKeyRef:
              name: microservices-secrets
              key: DISCORD_GATEWAY_SERVICE_LOG_CHANNEL
        volumeMounts:
        - name: ssl-certs
          mountPath: /data/ssl
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 10
      volumes:
      - name: ssl-certs
        hostPath:
          path: /data/ssl
---
apiVersion: v1
kind: Service
metadata:
  name: gateway-service
  namespace: microservices
spec:
  selector:
    app: gateway-service
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: gateway-ingress
  namespace: microservices
  annotations:
    kubernetes.io/ingress.class: "traefik"
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.middlewares: "microservices-redirect-https@kubernetescrd"
spec:
  tls:
  - hosts:
    - michibaum.ch
    - michibaum.com
    - michibaum.net
    - michibaum.eu
    - michibaum.org
    - michibaum.app
    - michibaum.me
    - michibaum.info
    - michibaum.xyz
    secretName: michibaum-tls
  rules:
  - host: michibaum.*
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gateway-service
            port:
              number: 443
