apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana
        ports:
        - containerPort: 3000
        env:
        - name: GF_SERVER_DOMAIN
          value: "grafana.michibaum.ch"
        - name: GF_SERVER_CORS_ALLOWED_ORIGINS
          value: "*"
        - name: GF_SERVER_CORS_ALLOWED_METHODS
          value: "GET,POST,PUT,DELETE,PATCH,OPTIONS"
        - name: GF_SECURITY_COOKIE_SAMESITE
          value: "disabled"
        - name: GF_SECURITY_CSRF_TRUSTED_ORIGINS
          value: "grafana.michibaum.ch"
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        - name: GF_AUTH_LOGIN_COOKIE_NAME
          value: "grafana_session"
        volumeMounts:
          - name: grafana-datasources
            mountPath: /etc/grafana/provisioning/datasources
            subPath: datasource.yml
      volumes:
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: microservices
spec:
  selector:
    app: grafana
  ports:
  - port: 3000
    targetPort: 3000
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: microservices
data:
  datasource.yml: |
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus:9090
      - name: Zipkin
        type: zipkin
        access: proxy
        url: http://zipkin:9411