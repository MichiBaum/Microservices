apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: microservices
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      initContainers:
        - name: config-init
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              cp /tmp/prometheus.yml /etc/prometheus/prometheus.yml
              sed -i "s/ADMIN_SERVICE_USERNAME_PLACEHOLDER/$ADMIN_SERVICE_USERNAME/g" /etc/prometheus/prometheus.yml
              sed -i "s/ADMIN_SERVICE_PASSWORD_PLACEHOLDER/$ADMIN_SERVICE_PASSWORD/g" /etc/prometheus/prometheus.yml
          env:
            - name: ADMIN_SERVICE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: microservices-secrets
                  key: ADMIN_SERVICE_USERNAME
            - name: ADMIN_SERVICE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: microservices-secrets
                  key: ADMIN_SERVICE_PASSWORD
          volumeMounts:
            - name: prometheus-config
              mountPath: /tmp/prometheus.yml
              subPath: prometheus.yml
            - name: prometheus-config-processed
              mountPath: /etc/prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v3.2.1
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--web.console.libraries=/etc/prometheus/console_libraries"
            - "--web.console.templates=/etc/prometheus/consoles"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: prometheus-config-processed
              mountPath: /etc/prometheus
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
        - name: prometheus-config-processed
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: microservices
spec:
  selector:
    app: prometheus
  ports:
    - port: 9090
      targetPort: 9090
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: microservices
data:
  prometheus.yml: |
    global:
      scrape_interval: 10s

    scrape_configs:
      - job_name: 'eureka'
        scrape_interval: 10s
        eureka_sd_configs:
          - server: http://ADMIN_SERVICE_USERNAME_PLACEHOLDER:ADMIN_SERVICE_PASSWORD_PLACEHOLDER@registry-service:8761/eureka
        basic_auth:
          username: ADMIN_SERVICE_USERNAME_PLACEHOLDER
          password: ADMIN_SERVICE_PASSWORD_PLACEHOLDER
        relabel_configs:
          - source_labels: [ __meta_eureka_app_name ]
            target_label: application
            action: replace
          - source_labels: [ __meta_eureka_app_instance_id ]
            target_label: instance
            action: replace
          - source_labels: [ __meta_eureka_app_instance_metadata_prometheus_path ]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
